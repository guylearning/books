<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: From object to iframe — other embedding technologies">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), From object to iframe — other embedding technologies">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): From object to iframe — other embedding technologies (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): From object to iframe — other embedding technologies </font></b><br>(3 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="1650.htm"> - Next</a> - <a href="1648.htm">Previous</a> - <a href="935.htm">Parent</a> - <a href="1650.htm">Next sibling</a> - <a href="1648.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="335.htm">2. Semantic HTML</a></li>
<ul>
<li><a href="935.htm">Multimedia and embedding</a></li>
<ul>
<li>This page: From object to iframe — other embedding technologies</li>
<ol>
<li>A short history of embedding. A long time ago on the Web, it was popular to use frames to create websites — small parts of a website stored in individual HTML pages. These . (see <a href="#1663">below)</a>
<li>iframes in detail. So, that was easy and fun, right? <iframe> elements are designed to allow you to embed other web documents into the current document. This is great for . (see <a href="#1491">below)</a>
<li>The <embed> and <object> elements. The <embed> and <object> elements serve a different function to <iframe> — these elements are general purpose embedding tools for embedding . (see <a href="#1664">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="1663">Topic #1,663: A short history of embedding. A long time ago on the Web, it was popular to use frames to create websites &#8212; small parts of a website stored in individual HTML pages. These .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">From object to iframe &#8212; other embedding technologies : </font></strong><H2 id=a_short_history_of_embedding><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#a_short_history_of_embedding">A short history of embedding</A></H2>
<DIV class=section-content>
<P>A long time ago on the Web, it was popular to use <STRONG>frames</STRONG> to create websites &#8212; small parts of a website stored in individual HTML pages. These were embedded in a master document called a <STRONG>frameset</STRONG>, which allowed you to specify the area on the screen that each frame filled, rather like sizing the columns and rows of a table. These were considered the height of coolness in the mid to late 90s, and there was evidence that having a webpage split up into smaller chunks like this was better for download speeds &#8212; especially noticeable with network connections being so slow back then. They did however have many problems, which far outweighed any positives as network speeds got faster, so you don't see them being used anymore.</P>
<P>A little while later (late 90s, early 2000s), plugin technologies became very popular, such as <A href="https://developer.mozilla.org/en-US/docs/Glossary/Java">Java Applets</A> and <A href="https://developer.mozilla.org/en-US/docs/Glossary/Adobe_Flash">Flash</A> &#8212; these allowed web developers to embed rich content into webpages such as videos and animations, which just weren't available through HTML alone. Embedding these technologies was achieved through elements like <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object"><CODE>&lt;object&gt;</CODE></A>, and the lesser-used <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed"><CODE>&lt;embed&gt;</CODE></A>, and they were very useful at the time. They have since fallen out of fashion due to many problems, including accessibility, security, file size, and more. These days major browsers have stopped supporting plugins such as Flash.</P>
<P>Finally, the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"><CODE>&lt;iframe&gt;</CODE></A> element appeared (along with other ways of embedding content, such as <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas"><CODE>&lt;canvas&gt;</CODE></A>, <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"><CODE>&lt;video&gt;</CODE></A>, etc.) This provides a way to embed an entire web document inside another one, as if it were an <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"><CODE>&lt;img&gt;</CODE></A> or other such element, and is used regularly today.</P>
<P>With the history lesson out of the way, let's move on and see how to use some of these.</P></DIV></SECTION><SECTION aria-labelledby=active_learning_classic_embedding_uses>
<H2 id=active_learning_classic_embedding_uses><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#active_learning_classic_embedding_uses">Active learning: classic embedding uses</A></H2>
<DIV class=section-content>
<P>In this article we are going to jump straight into an active learning section, to immediately give you a real idea of just what embedding technologies are useful for. The online world is very familiar with <A class=external href="https://www.youtube.com/" target=_blank>YouTube</A>, but many people don't know about some of the sharing facilities it has available. Let's look at how YouTube allows us to embed a video in any page we like using an <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"><CODE>&lt;iframe&gt;</CODE></A>.</P>
<OL>
<LI>First, go to YouTube and find a video you like. 
<LI>Below the video, you'll find a <EM>Share</EM> button &#8212; select this to display the sharing options. 
<LI>Select the <EM>Embed</EM> button and you'll be given some <CODE>&lt;iframe&gt;</CODE> code &#8212; copy this. 
<LI>Insert it into the <EM>Input</EM> box below, and see what the result is in the <EM>Output</EM>.</LI></OL>
<P>For bonus points, you could also try embedding a <A class=external href="https://www.google.com/maps/" target=_blank>Google Map</A> in the example:</P>
<OL>
<LI>Go to Google Maps and find a map you like. 
<LI>Click on the "Hamburger Menu" (three horizontal lines) in the top left of the UI. 
<LI>Select the <EM>Share or embed map</EM> option. 
<LI>Select the Embed map option, which will give you some <CODE>&lt;iframe&gt;</CODE> code &#8212; copy this. 
<LI>Insert it into the <EM>Input</EM> box below, and see what the result is in the <EM>Output</EM>.</LI></OL>
<P>If you make a mistake, you can always reset it using the <EM>Reset</EM> button. If you get really stuck, press the <EM>Show solution</EM> button to see an answer.</P>
<DIV class=code-example><PRE class="brush: html hidden notranslate" data-signature="gJUWv3fzgyFkyLr7ihEpoHLArrPyDzY2h/fEwuL9UXw="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Live output<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>output<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 250px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Editable code<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>a11y-label<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Press Esc to move focus away from the code area (Tab inserts a tab character).
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>textarea</SPAN>
  <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>code<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>input<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 95%<SPAN class="token punctuation">;</SPAN><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 100px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>textarea</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>playable-buttons<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Show solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: css hidden notranslate" data-signature="rE54QQGFRG3dI9noBugrfixo4OklLJ9Li8khAbWsxOo="><CODE><SPAN class="token selector">html</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-family</SPAN><SPAN class="token punctuation">:</SPAN> sans-serif<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">h2</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 16px<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">.a11y-label</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 0<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">text-align</SPAN><SPAN class="token punctuation">:</SPAN> right<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 0.7rem<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 98%<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">body</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 10px<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">background</SPAN><SPAN class="token punctuation">:</SPAN> #f5f9fa<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: js hidden notranslate" data-signature="VHa1KfefTw6XZkQpdhxLtjo+NM/I0xTU+74zTRBxadM="><CODE><SPAN class="token keyword">const</SPAN> textarea <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"code"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> reset <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"reset"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> solution <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"solution"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> output <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">querySelector</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">".output"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> code <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  output<SPAN class="token punctuation">.</SPAN>innerHTML <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

reset<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> code<SPAN class="token punctuation">;</SPAN>
  userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>
  solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

solution<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> solutionEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Hide solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> userEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">const</SPAN> htmlSolution <SPAN class="token operator">=</SPAN>
  <SPAN class="token string">'&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/QH2-TGUlwu4" frameborder="0" allowfullscreen&gt;\n&lt;/iframe&gt;\n\n&lt;iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d37995.65748333395!2d-2.273568166412784!3d53.473310471916975!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x487bae6c05743d3d%3A0xf82fddd1e49fc0a1!2sThe+Lowry!5e0!3m2!1sen!2suk!4v1518171785211" width="600" height="450" frameborder="0" border:0" allowfullscreen&gt;\n&lt;/iframe&gt;'</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"input"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
window<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"load"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token comment">// stop tab key tabbing out of textarea and</SPAN>
<SPAN class="token comment">// make it write a tab at the caret position instead</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeydown</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">e</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Tab"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    e<SPAN class="token punctuation">.</SPAN><SPAN class="token function">preventDefault</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
    <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"\t"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Escape"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">blur</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">text</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">const</SPAN> scrollPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>scrollTop<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">let</SPAN> caretPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>selectionStart<SPAN class="token punctuation">;</SPAN>

  <SPAN class="token keyword">const</SPAN> front <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token number">0</SPAN><SPAN class="token punctuation">,</SPAN> caretPos<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">const</SPAN> back <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>selectionEnd<SPAN class="token punctuation">,</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">,</SPAN>
  <SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> front <SPAN class="token operator">+</SPAN> text <SPAN class="token operator">+</SPAN> back<SPAN class="token punctuation">;</SPAN>
  caretPos <SPAN class="token operator">+=</SPAN> text<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionStart <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionEnd <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">focus</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>scrollTop <SPAN class="token operator">=</SPAN> scrollPos<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token comment">// Update the saved userCode every time the user updates the text area code</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeyup</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token comment">// We only want to save the state when the user code is being shown,</SPAN>
  <SPAN class="token comment">// not the solution, so that solution is not saved over the user code</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    solutionEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<DIV id=sect1 class=code-example>
<DIV id=sect2 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=iframes_in_detail>
<H2 id=iframes_in_detail><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#iframes_in_detail">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1491">Topic #1,491: iframes in detail. So, that was easy and fun, right? <iframe> elements are designed to allow you to embed other web documents into the current document. This is great for .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">From object to iframe &#8212; other embedding technologies : </font></strong>
iframes in detail</A></H2>
<DIV class=section-content>
<P>So, that was easy and fun, right? <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"><CODE>&lt;iframe&gt;</CODE></A> elements are designed to allow you to embed other web documents into the current document. This is great for incorporating third-party content into your website that you might not have direct control over and don't want to have to implement your own version of &#8212; such as video from online video providers, commenting systems like <A class=external href="https://disqus.com/" target=_blank>Disqus</A>, maps from online map providers, advertising banners, etc. Even the live editable examples you've been using through this course are implemented using <CODE>&lt;iframe&gt;</CODE>s.</P>
<P>Before diving into using <CODE>&lt;iframe&gt;</CODE> elements, there are some security concerns to be aware of. Say you wanted to include the MDN glossary on one of your web pages using the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"><CODE>&lt;iframe&gt;</CODE></A> element, you might try something like the next code example. If you were to add the code below into one of your pages, you might be surprised to see an error message instead of the glossary page: </P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="l94hJXody6T1EhDLUDHe/0hIafVJuRi7sPilOHrGPX4="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>head</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>style</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token style"><SPAN class="token language-css">
    <SPAN class="token selector">iframe</SPAN> <SPAN class="token punctuation">{</SPAN>
      <SPAN class="token property">border</SPAN><SPAN class="token punctuation">:</SPAN> none<SPAN class="token punctuation">;</SPAN>
    <SPAN class="token punctuation">}</SPAN>
  </SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>style</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>head</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>body</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>iframe</SPAN>
    <SPAN class="token attr-name">src</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>https://developer.mozilla.org/en-US/docs/Glossary<SPAN class="token punctuation">"</SPAN></SPAN>
    <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN>
    <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>500<SPAN class="token punctuation">"</SPAN></SPAN>
    <SPAN class="token attr-name">allowfullscreen</SPAN>
    <SPAN class="token attr-name">sandbox</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
      <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>a</SPAN> <SPAN class="token attr-name">href</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>/en-US/docs/Glossary<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
        Fallback link for browsers that don't support iframes
      <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>a</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>iframe</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>body</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>If you have a look at your browser's console, you'll see an error message like the following:</P><PRE class="brush: plain notranslate">Refused to display 'https://developer.mozilla.org/' in a frame because it set 'X-Frame-Options' to 'deny'.
</PRE>
<P>The <A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#security_concerns">Security</A> section below goes into more detail about why you see this error, but first, let's have a look at what our code is doing.</P>
<P>The example includes the bare essentials needed to use an <CODE>&lt;iframe&gt;</CODE>:</P>
<DL>
<DT id=border_none><A href="https://developer.mozilla.org/en-US/docs/Web/CSS/border"><CODE>border: none</CODE></A> 
<DD>
<P>If used, the <CODE>&lt;iframe&gt;</CODE> is displayed without a surrounding border. Otherwise, by default, browsers display the <CODE>&lt;iframe&gt;</CODE> with a surrounding border (which is generally undesirable).</P>
<DT id=allowfullscreen><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#allowfullscreen"><CODE>allowfullscreen</CODE></A> 
<DD>
<P>If set, the <CODE>&lt;iframe&gt;</CODE> is able to be placed in fullscreen mode using the <A href="https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API">Fullscreen API</A> (somewhat beyond the scope of this article).</P>
<DT id=src><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#src"><CODE>src</CODE></A> 
<DD>
<P>This attribute, as with <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"><CODE>&lt;video&gt;</CODE></A>/<A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"><CODE>&lt;img&gt;</CODE></A>, contains a path pointing to the URL of the document to be embedded.</P>
<DT id=width><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#width"><CODE>width</CODE></A> and <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#height"><CODE>height</CODE></A> 
<DD>
<P>These attributes specify the width and height you want the iframe to be.</P>
<DT id=sandbox><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox"><CODE>sandbox</CODE></A> 
<DD>
<P>This attribute, which works in slightly more modern browsers than the rest of the <CODE>&lt;iframe&gt;</CODE> features (e.g. IE 10 and above) requests heightened security settings; we'll say more about this in the next section.</P></DD></DL>
<DIV id=sect3 class="notecard note">
<P><STRONG>Note:</STRONG> In order to improve speed, it's a good idea to set the iframe's <CODE>src</CODE> attribute with JavaScript after the main content is done with loading. This makes your page usable sooner and decreases your official page load time (an important <A href="https://developer.mozilla.org/en-US/docs/Glossary/SEO">SEO</A> metric.)</P></DIV></DIV></SECTION><SECTION aria-labelledby=security_concerns>
<H3 id=security_concerns><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#security_concerns">Security concerns</A></H3>
<DIV class=section-content>
<P>Above we mentioned security concerns &#8212; let's go into this in a bit more detail now. We are not expecting you to understand all of this content perfectly the first time; we just want to make you aware of this concern, and provide a reference to come back to as you get more experienced and start considering using <CODE>&lt;iframe&gt;</CODE>s in your experiments and work. Also, there is no need to be scared and not use <CODE>&lt;iframe&gt;</CODE>s &#8212; you just need to be careful. Read on&#8230;</P>
<P>Browser makers and Web developers have learned the hard way that iframes are a common target (official term: <STRONG>attack vector</STRONG>) for bad people on the Web (often termed <STRONG>hackers</STRONG>, or more accurately, <STRONG>crackers</STRONG>) to attack if they are trying to maliciously modify your webpage, or trick people into doing something they don't want to do, such as reveal sensitive information like usernames and passwords. Because of this, spec engineers and browser developers have developed various security mechanisms for making <CODE>&lt;iframe&gt;</CODE>s more secure, and there are also best practices to consider &#8212; we'll cover some of these below.</P>
<DIV id=sect4 class="notecard note">
<P><STRONG>Note:</STRONG> <A href="https://developer.mozilla.org/en-US/docs/Glossary/Clickjacking">Clickjacking</A> is one kind of common iframe attack where hackers embed an invisible iframe into your document (or embed your document into their own malicious website) and use it to capture users' interactions. This is a common way to mislead users or steal sensitive data.</P></DIV>
<P>A quick example first though &#8212; try loading the previous example we showed above into your browser &#8212; you can <A class=external href="https://mdn.github.io/learning-area/html/multimedia-and-embedding/other-embedding-technologies/iframe-detail.html" target=_blank>find it live on GitHub</A> (<A class=external href="https://github.com/mdn/learning-area/blob/main/html/multimedia-and-embedding/other-embedding-technologies/iframe-detail.html" target=_blank>see the source code</A> too.) Instead of the page you expected, you'll probably see some kind of message to the effect of "I can't open this page", and if you look at the <EM>Console</EM> in the <A href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Tools_and_setup/What_are_browser_developer_tools">browser developer tools</A>, you'll see a message telling you why. In Firefox, you'll get told something like <EM>The loading of "<A href="https://developer.mozilla.org/en-US/docs/Glossary">https://developer.mozilla.org/en-US/docs/Glossary</A>" in a frame is denied by "X-Frame-Options" directive set to "DENY"</EM>. This is because the developers that built MDN have included a setting on the server that serves the website pages to disallow them from being embedded inside <CODE>&lt;iframe&gt;</CODE>s (see <A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#configure_csp_directives">Configure CSP directives</A>, below.) This makes sense &#8212; an entire MDN page doesn't really make sense to be embedded in other pages unless you want to do something like embed them on your site and claim them as your own &#8212; or attempt to steal data via <A href="https://developer.mozilla.org/en-US/docs/Glossary/Clickjacking">clickjacking</A>, which are both really bad things to do. Plus if everybody started to do this, all the additional bandwidth would start to cost Mozilla a lot of money.</P>
<H4 id=only_embed_when_necessary>Only embed when necessary</H4>
<P>Sometimes it makes sense to embed third-party content &#8212; like youtube videos and maps &#8212; but you can save yourself a lot of headaches if you only embed third-party content when completely necessary. A good rule for web security is <EM>"You can never be too cautious. If you made it, double-check it anyway. If someone else made it, assume it's dangerous until proven otherwise."</EM></P>
<P>Besides security, you should also be aware of intellectual property issues. Most content is copyrighted, offline and online, even content you might not expect (for example, most images on <A class=external href="https://commons.wikimedia.org/wiki/Main_Page" target=_blank>Wikimedia Commons</A>). Never display content on your webpage unless you own it or the owners have given you written, unequivocal permission. Penalties for copyright infringement are severe. Again, you can never be too cautious.</P>
<P>If the content is licensed, you must obey the license terms. For example, the content on MDN is <A href="https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Attrib_copyright_license#documentation">licensed under CC-BY-SA</A>. That means, you must <A class=external href="https://wiki.creativecommons.org/wiki/Best_practices_for_attribution" target=_blank>credit us properly</A> when you quote our content, even if you make substantial changes.</P>
<H4 id=use_https>Use HTTPS</H4>
<P><A href="https://developer.mozilla.org/en-US/docs/Glossary/HTTPS">HTTPS</A> is the encrypted version of <A href="https://developer.mozilla.org/en-US/docs/Glossary/HTTP">HTTP</A>. You should serve your websites using HTTPS whenever possible:</P>
<OL>
<LI>HTTPS reduces the chance that remote content has been tampered with in transit. 
<LI>HTTPS prevents embedded content from accessing content in your parent document, and vice versa.</LI></OL>
<P>HTTPS-enabling your site requires a special security certificate to be installed. Many hosting providers offer HTTPS-enabled hosting without you needing to do any setup on your own to put a certificate in place. But if you <EM>do</EM> need to set up HTTPS support for your site on your own, <A class=external href="https://letsencrypt.org/" target=_blank>Let's Encrypt</A> provides tools and instructions you can use for automatically creating and installing the necessary certificate &#8212; with built-in support for the most widely-used web servers, including the Apache web server, Nginx, and others. The Let's Encrypt tooling is designed to make the process as easy as possible, so there's really no good reason to avoid using it or other available means to HTTPS-enable your site.</P>
<DIV id=sect5 class="notecard note">
<P><STRONG>Note:</STRONG> <A href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Tools_and_setup/Using_GitHub_pages">GitHub pages</A> allow content to be served via HTTPS by default. If you are using a different hosting provider you should check what support they provide for serving content with HTTPS. </P></DIV>
<H4 id=always_use_the_sandbox_attribute>Always use the <CODE>sandbox</CODE> attribute</H4>
<P>You want to give attackers as little power as you can to do bad things on your website, therefore you should give embedded content <EM>only the permissions needed for doing its job.</EM> Of course, this applies to your own content, too. A container for code where it can be used appropriately &#8212; or for testing &#8212; but can't cause any harm to the rest of the codebase (either accidental or malicious) is called a <A class=external href="https://en.wikipedia.org/wiki/Sandbox_(computer_security)" target=_blank>sandbox</A>.</P>
<P>Content that's not sandboxed may be able to execute JavaScript, submit forms, trigger popup windows, etc. By default, you should impose all available restrictions by using the <CODE>sandbox</CODE> attribute with no parameters, as shown in our previous example.</P>
<P>If absolutely required, you can add permissions back one by one (inside the <CODE>sandbox=""</CODE> attribute value) &#8212; see the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox"><CODE>sandbox</CODE></A> reference entry for all the available options. One important note is that you should <EM>never</EM> add both <CODE>allow-scripts</CODE> and <CODE>allow-same-origin</CODE> to your <CODE>sandbox</CODE> attribute &#8212; in that case, the embedded content could bypass the <A href="https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy">Same-origin policy</A> that stops sites from executing scripts, and use JavaScript to turn off sandboxing altogether.</P>
<DIV id=sect6 class="notecard note">
<P><STRONG>Note:</STRONG> Sandboxing provides no protection if attackers can fool people into visiting malicious content directly (outside an <CODE>iframe</CODE>). If there's any chance that certain content may be malicious (e.g., user-generated content), please serve it from a different <A href="https://developer.mozilla.org/en-US/docs/Glossary/Domain">domain</A> to your main site.</P></DIV>
<H4 id=configure_csp_directives>Configure CSP directives</H4>
<P><A href="https://developer.mozilla.org/en-US/docs/Glossary/CSP">CSP</A> stands for <STRONG><A href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">content security policy</A></STRONG> and provides <A href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy">a set of HTTP Headers</A> (metadata sent along with your web pages when they are served from a web server) designed to improve the security of your HTML document. When it comes to securing <CODE>&lt;iframe&gt;</CODE>s, you can <EM><A href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options">configure your server to send an appropriate <CODE>X-Frame-Options</CODE> header.</A></EM> This can prevent other websites from embedding your content in their web pages (which would enable <A href="https://developer.mozilla.org/en-US/docs/Glossary/Clickjacking">clickjacking</A> and a host of other attacks), which is exactly what the MDN developers have done, as we saw earlier on.</P>
<DIV id=sect7 class="notecard note">
<P><STRONG>Note:</STRONG> You can read Frederik Braun's post <A class=external href="https://blog.mozilla.org/security/2013/12/12/on-the-x-frame-options-security-header/" target=_blank>On the X-Frame-Options Security Header</A> for more background information on this topic. Obviously, it's rather out of scope for a full explanation in this article.</P></DIV></DIV></SECTION><SECTION aria-labelledby=the_embed_and_object_elements>
<H2 id=the_embed_and_object_elements><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#the_embed_and_object_elements">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1664">Topic #1,664: The <embed> and <object> elements. The <embed> and <object> elements serve a different function to <iframe> &#8212; these elements are general purpose embedding tools for embedding .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">From object to iframe &#8212; other embedding technologies : </font></strong>
The &lt;embed&gt; and &lt;object&gt; elements</A></H2>
<DIV class=section-content>
<P>The <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed"><CODE>&lt;embed&gt;</CODE></A> and <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object"><CODE>&lt;object&gt;</CODE></A> elements serve a different function to <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"><CODE>&lt;iframe&gt;</CODE></A> &#8212; these elements are general purpose embedding tools for embedding external content, such as PDFs.</P>
<P>However, you are unlikely to use these elements very much. If you need to display PDFs, it's usually better to link to them, rather than embedding them in the page.</P>
<P>Historically these elements have also been used for embedding content handled by browser <A href="https://developer.mozilla.org/en-US/docs/Glossary/Plugin">plugins</A> such as <A href="https://developer.mozilla.org/en-US/docs/Glossary/Adobe_Flash">Adobe Flash</A>, but this technology is now obsolete and is not supported by modern browsers.</P>
<P>If you find yourself needing to embed plugin content, this is the kind of information you'll need, at a minimum:</P><FIGURE class=table-container>
<TABLE class="standard-table no-markdown">
<THEAD>
<TR>
<TH scope=col></TH>
<TH scope=col><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed"><CODE>&lt;embed&gt;</CODE></A></TH>
<TH scope=col><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object"><CODE>&lt;object&gt;</CODE></A></TH></TR></THEAD>
<TBODY>
<TR>
<TD><A href="https://developer.mozilla.org/en-US/docs/Glossary/URL">URL</A> of the embedded content</TD>
<TD><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed#src"><CODE>src</CODE></A></TD>
<TD><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object#data"><CODE>data</CODE></A></TD></TR>
<TR>
<TD><EM>accurate </EM><A href="https://developer.mozilla.org/en-US/docs/Glossary/MIME_type">media type</A> of the embedded content </TD>
<TD><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed#type"><CODE>type</CODE></A></TD>
<TD><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object#type"><CODE>type</CODE></A></TD></TR>
<TR>
<TD>height and width (in CSS pixels) of the box controlled by the plugin</TD>
<TD><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed#height"><CODE>height</CODE></A><BR><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed#width"><CODE>width</CODE></A></TD>
<TD><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object#height"><CODE>height</CODE></A><BR><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object#width"><CODE>width</CODE></A></TD></TR>
<TR>
<TD>names and values, to feed the plugin as parameters</TD>
<TD>ad hoc attributes with those names and values</TD>
<TD>single-tag <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param"><CODE>&lt;param&gt;</CODE></A> elements, contained within <CODE>&lt;object&gt;</CODE> </TD></TR>
<TR>
<TD>independent HTML content as fallback for an unavailable resource</TD>
<TD>not supported (<CODE>&lt;noembed&gt;</CODE> is obsolete)</TD>
<TD>contained within <CODE>&lt;object&gt;</CODE>, after <CODE>&lt;param&gt;</CODE> elements </TD></TR></TBODY></TABLE></FIGURE>
<P>Let's look at an <CODE>&lt;object&gt;</CODE> example that embeds a PDF into a page (see the <A class=external href="https://mdn.github.io/learning-area/html/multimedia-and-embedding/other-embedding-technologies/object-pdf.html" target=_blank>live example</A> and the <A class=external href="https://github.com/mdn/learning-area/blob/main/html/multimedia-and-embedding/other-embedding-technologies/object-pdf.html" target=_blank>source code</A>):</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="nmEJ+EF+o3+59vTKjF+SmRbK4JaWpBOwzoh4mJRT2YI="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>object</SPAN> <SPAN class="token attr-name">data</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>mypdf.pdf<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>application/pdf<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>800<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>1200<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    You don't have a PDF plugin, but you can
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>a</SPAN> <SPAN class="token attr-name">href</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>mypdf.pdf<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>download the PDF file. <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>a</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>object</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>PDFs were a necessary stepping stone between paper and digital, but they pose many <A class=external href="https://webaim.org/techniques/acrobat/acrobat" target=_blank>accessibility challenges</A> and can be hard to read on small screens. They do still tend to be popular in some circles, but it is much better to link to them so they can be downloaded or read on a separate page, rather than embedding them in a webpage.
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:40 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
