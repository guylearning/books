<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: Advanced text formatting">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), Advanced text formatting">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): Advanced text formatting (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): Advanced text formatting </font></b><br>(7 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="348.htm"> - Next</a> - <a href="1618.htm">Previous</a> - <a href="1646.htm">Parent</a> - <a href="348.htm">Next sibling</a> - <a href="346.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="335.htm">2. Semantic HTML</a></li>
<ul>
<li><a href="1646.htm">Introduction to HTML</a></li>
<ul>
<li>This page: Advanced text formatting</li>
<ol>
<li>Description lists. In HTML text fundamentals, we walked through how to mark up basic lists in HTML, and we mentioned the third type of list you'll occasionally come across — . (see <a href="#1634">below)</a>
<li>Quotations. HTML also has features available for marking up quotations; which element you use depends on whether you are marking up a block or inline quotation. Blockquotes . (see <a href="#1635">below)</a>
<li>Abbreviations. Another fairly common element you'll meet when looking around the Web is <abbr> — this is used to wrap around an abbreviation or acronym. When including either . (see <a href="#1636">below)</a>
<li>Marking up contact details. HTML has an element for marking up contact details — <address>. This wraps around your contact details, for example:. html<address>Chris Mills . (see <a href="#1637">below)</a>
<li>Superscript and subscript. You will occasionally need to use superscript and subscript when marking up items like dates, chemical formulae, and mathematical equations so they . (see <a href="#1638">below)</a>
<li>Representing computer code. There are a number of elements available for marking up computer code using HTML:. <code>: For marking up generic pieces of computer code. <pre> . (see <a href="#1639">below)</a>
<li>Marking up times and dates. HTML also provides the <time> element for marking up times and dates in a machine-readable format. For example:. html<time datetime="2016-01-20">20 . (see <a href="#1640">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="1634">Topic #1,634: Description lists. In HTML text fundamentals, we walked through how to mark up basic lists in HTML, and we mentioned the third type of list you'll occasionally come across &#8212; .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong><H2 id=description_lists><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#description_lists">Description lists</A></H2>
<DIV class=section-content>
<P>In HTML text fundamentals, we walked through how to <A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals#lists">mark up basic lists</A> in HTML, and we mentioned the third type of list you'll occasionally come across &#8212; <STRONG>description lists</STRONG>. The purpose of these lists is to mark up a set of items and their associated descriptions, such as terms and definitions, or questions and answers. Let's look at an example of a set of terms and definitions:</P><PRE class="brush: plain notranslate">soliloquy
In drama, where a character speaks to themselves, representing their inner thoughts or feelings and in the process relaying them to the audience (but not to other characters.)
monologue
In drama, where a character speaks their thoughts out loud to share them with the audience and any other characters present.
aside
In drama, where a character shares a comment only with the audience for humorous or dramatic effect. This is usually a feeling, thought or piece of additional background information
</PRE>
<P>Description lists use a different wrapper than the other list types &#8212; <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl"><CODE>&lt;dl&gt;</CODE></A>; in addition each term is wrapped in a <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt"><CODE>&lt;dt&gt;</CODE></A> (description term) element, and each description is wrapped in a <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd"><CODE>&lt;dd&gt;</CODE></A> (description definition) element.</P></DIV></SECTION><SECTION aria-labelledby=description_list_example>
<H3 id=description_list_example><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#description_list_example">Description list example</A></H3>
<DIV class=section-content>
<P>Let's finish marking up our example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="W1JX+sQVk6MRJogAtt6ej0icoAOIy3/c9582t76bxiM="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dl</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>soliloquy<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    In drama, where a character speaks to themselves, representing their inner
    thoughts or feelings and in the process relaying them to the audience (but
    not to other characters.)
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>monologue<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    In drama, where a character speaks their thoughts out loud to share them
    with the audience and any other characters present.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>aside<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    In drama, where a character shares a comment only with the audience for
    humorous or dramatic effect. This is usually a feeling, thought, or piece of
    additional background information.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dl</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>The browser default styles will display description lists with the descriptions indented somewhat from the terms.</P>
<DIV id=sect1 class=code-example>
<DIV id=sect2 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=multiple_descriptions_for_one_term>
<H3 id=multiple_descriptions_for_one_term><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#multiple_descriptions_for_one_term">Multiple descriptions for one term</A></H3>
<DIV class=section-content>
<P>Note that it is permitted to have a single term with multiple descriptions, for example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="QGkI3+SDqRJAEtJ2CzqawY2eRZaYdN1ymReuP1TH86w="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dl</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>aside<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dt</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    In drama, where a character shares a comment only with the audience for
    humorous or dramatic effect. This is usually a feeling, thought, or piece of
    additional background information.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    In writing, a section of content that is related to the current topic, but
    doesn't fit directly into the main flow of content so is presented nearby
    (often in a box off to the side.)
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>dl</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV id=sect3 class=code-example>
<DIV id=sect4 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=active_learning_marking_up_a_set_of_definitions>
<H3 id=active_learning_marking_up_a_set_of_definitions><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#active_learning_marking_up_a_set_of_definitions">Active learning: Marking up a set of definitions</A></H3>
<DIV class=section-content>
<P>It's time to try your hand at description lists; add elements to the raw text in the <EM>Input</EM> field so that it appears as a description list in the <EM>Output</EM> field. You could try using your own terms and descriptions if you like.</P>
<P>If you make a mistake, you can always reset it using the <EM>Reset</EM> button. If you get really stuck, press the <EM>Show solution</EM> button to see the answer.</P>
<DIV class=code-example><PRE class="brush: html hidden notranslate" data-signature="8MjGmfe9u7BAxQt7FQq+1gd5f+F12P2/aTRIkCyaXys="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Live output<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>output<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 50px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Editable code<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>a11y-label<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Press Esc to move focus away from the code area (Tab inserts a tab character).
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>textarea</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>code<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>input<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 100px<SPAN class="token punctuation">;</SPAN> <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 95%</SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
Bacon
The glue that binds the world together.
Eggs
The glue that binds the cake together.
Coffee
The drink that gets the world running in the morning.
A light brown color.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>textarea</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>playable-buttons<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Show solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: css hidden notranslate" data-signature="rE54QQGFRG3dI9noBugrfixo4OklLJ9Li8khAbWsxOo="><CODE><SPAN class="token selector">html</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-family</SPAN><SPAN class="token punctuation">:</SPAN> sans-serif<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">h2</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 16px<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">.a11y-label</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 0<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">text-align</SPAN><SPAN class="token punctuation">:</SPAN> right<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 0.7rem<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 98%<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">body</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 10px<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">background</SPAN><SPAN class="token punctuation">:</SPAN> #f5f9fa<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: js hidden notranslate" data-signature="66R306PZCJewjErelfEl71jxMskgpo8PoPaxX6Ku/X0="><CODE><SPAN class="token keyword">const</SPAN> textarea <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"code"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> reset <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"reset"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> solution <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"solution"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> output <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">querySelector</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">".output"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> code <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  output<SPAN class="token punctuation">.</SPAN>innerHTML <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token keyword">const</SPAN> htmlSolution <SPAN class="token operator">=</SPAN>
  <SPAN class="token string">"&lt;dl&gt;\n &lt;dt&gt;Bacon&lt;/dt&gt;\n &lt;dd&gt;The glue that binds the world together.&lt;/dd&gt;\n &lt;dt&gt;Eggs&lt;/dt&gt;\n &lt;dd&gt;The glue that binds the cake together.&lt;/dd&gt;\n &lt;dt&gt;Coffee&lt;/dt&gt;\n &lt;dd&gt;The drink that gets the world running in the morning.&lt;/dd&gt;\n &lt;dd&gt;A light brown color.&lt;/dd&gt;\n&lt;/dl&gt;"</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>

reset<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> code<SPAN class="token punctuation">;</SPAN>
  userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>
  solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

solution<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> solutionEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Hide solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> userEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"input"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
window<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"load"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token comment">// stop tab key tabbing out of textarea and</SPAN>
<SPAN class="token comment">// make it write a tab at the caret position instead</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeydown</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">e</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Tab"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    e<SPAN class="token punctuation">.</SPAN><SPAN class="token function">preventDefault</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
    <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"\t"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Escape"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">blur</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">text</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">const</SPAN> scrollPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>scrollTop<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">let</SPAN> caretPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>selectionStart<SPAN class="token punctuation">;</SPAN>

  <SPAN class="token keyword">const</SPAN> front <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token number">0</SPAN><SPAN class="token punctuation">,</SPAN> caretPos<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">const</SPAN> back <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>selectionEnd<SPAN class="token punctuation">,</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">,</SPAN>
  <SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> front <SPAN class="token operator">+</SPAN> text <SPAN class="token operator">+</SPAN> back<SPAN class="token punctuation">;</SPAN>
  caretPos <SPAN class="token operator">+=</SPAN> text<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionStart <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionEnd <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">focus</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>scrollTop <SPAN class="token operator">=</SPAN> scrollPos<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token comment">// Update the saved userCode every time the user updates the text area code</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeyup</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token comment">// We only want to save the state when the user code is being shown,</SPAN>
  <SPAN class="token comment">// not the solution, so that solution is not saved over the user code</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    solutionEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<DIV id=sect5 class=code-example>
<DIV id=sect6 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=quotations>
<H2 id=quotations><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#quotations">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1635">Topic #1,635: Quotations. HTML also has features available for marking up quotations; which element you use depends on whether you are marking up a block or inline quotation. Blockquotes .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong>
Quotations</A></H2>
<DIV class=section-content>
<P>HTML also has features available for marking up quotations; which element you use depends on whether you are marking up a block or inline quotation.</P></DIV></SECTION><SECTION aria-labelledby=blockquotes>
<H3 id=blockquotes><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#blockquotes">Blockquotes</A></H3>
<DIV class=section-content>
<P>If a section of block level content (be it a paragraph, multiple paragraphs, a list, etc.) is quoted from somewhere else, you should wrap it inside a <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote"><CODE>&lt;blockquote&gt;</CODE></A> element to signify this, and include a URL pointing to the source of the quote inside a <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote#cite"><CODE>cite</CODE></A> attribute. For example, the following markup is taken from the MDN <CODE>&lt;blockquote&gt;</CODE> element page:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="/szaP7/2HrtozSFYQ7iJOcD8/+G7zAwV084dpkCXBb8="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  The <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>strong</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>blockquote<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> Element<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>strong</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> (or
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>em</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML Block Quotation Element<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>em</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>) indicates that the enclosed text is an
  extended quotation.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>To turn this into a block quote, we would just do this:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="leBL/jEi6jCl4xfaHlXy4ht1ATI0qjKbX8L4rWH3cNk="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Here is a blockquote:<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>blockquote</SPAN>
  <SPAN class="token attr-name">cite</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    The <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>strong</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>blockquote<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> Element<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>strong</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> (or
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>em</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML Block Quotation Element<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>em</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>) indicates that the enclosed text is
    an extended quotation.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>blockquote</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>Browser default styling will render this as an indented paragraph, as an indicator that it is a quote; the paragraph above the quotation is there to demonstrate that.</P>
<DIV id=sect7 class=code-example>
<DIV id=sect8 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=inline_quotations>
<H3 id=inline_quotations><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#inline_quotations">Inline quotations</A></H3>
<DIV class=section-content>
<P>Inline quotations work in exactly the same way, except that they use the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q"><CODE>&lt;q&gt;</CODE></A> element. For example, the below bit of markup contains a quotation from the MDN <CODE>&lt;q&gt;</CODE> page:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="qXxKjqyIEAuyi/YHdlCfbuSTKcxuoocV9lflfA/1iNY="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  The quote element &#8212; <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>q<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> &#8212; is
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>q</SPAN> <SPAN class="token attr-name">cite</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    intended for short quotations that don't require paragraph breaks.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>q</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>Browser default styling will render this as normal text put in quotes to indicate a quotation, like so:</P>
<DIV id=sect9 class=code-example>
<DIV id=sect10 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=citations>
<H3 id=citations><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#citations">Citations</A></H3>
<DIV class=section-content>
<P>The content of the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote#cite"><CODE>cite</CODE></A> attribute sounds useful, but unfortunately browsers, screen readers, etc. don't really do much with it. There is no way to get the browser to display the contents of <CODE>cite</CODE>, without writing your own solution using JavaScript or CSS. If you want to make the source of the quotation available on the page you need to make it available in the text via a link or some other appropriate way.</P>
<P>There is a <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite"><CODE>&lt;cite&gt;</CODE></A> element, but this is meant to contain the title of the resource being quoted, e.g. the name of the book. There is no reason, however, why you couldn't link the text inside <CODE>&lt;cite&gt;</CODE> to the quote source in some way:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="P1LsY5cXYGZy/AIWke9IUrP1nLdF00nm+od5gOLe9j0="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  According to the
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>a</SPAN> <SPAN class="token attr-name">href</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>/en-US/docs/Web/HTML/Element/blockquote<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>cite</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>MDN blockquote page<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>cite</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>a</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>:
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>blockquote</SPAN>
  <SPAN class="token attr-name">cite</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    The <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>strong</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>blockquote<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> Element<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>strong</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> (or
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>em</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML Block Quotation Element<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>em</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>) indicates that the enclosed text is
    an extended quotation.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>blockquote</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  The quote element &#8212; <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>q<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> &#8212; is
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>q</SPAN> <SPAN class="token attr-name">cite</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    intended for short quotations that don't require paragraph breaks.
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>q</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  &#8212; <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>a</SPAN> <SPAN class="token attr-name">href</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>/en-US/docs/Web/HTML/Element/q<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>cite</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>MDN q page<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>cite</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>a</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>Citations are styled in italic font by default.</P>
<DIV id=sect11 class=code-example>
<DIV id=sect12 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=active_learning_who_said_that>
<H3 id=active_learning_who_said_that><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#active_learning_who_said_that">Active learning: Who said that?</A></H3>
<DIV class=section-content>
<P>Time for another active learning example! In this example we'd like you to:</P>
<OL>
<LI>Turn the middle paragraph into a blockquote, which includes a <CODE>cite</CODE> attribute. 
<LI>Turn "The Need To Eliminate Negative Self Talk" in the third paragraph into an inline quote, and include a <CODE>cite</CODE> attribute. 
<LI>Wrap the title of each source in <CODE>&lt;cite&gt;</CODE> tags and turn each one into a link to that source.</LI></OL>
<P>The citation sources you need are:</P>
<UL>
<LI><CODE>http://www.brainyquote.com/quotes/authors/c/confucius.html</CODE> for the Confucius quote 
<LI><CODE>http://example.com/affirmationsforpositivethinking</CODE> for "The Need To Eliminate Negative Self Talk".</LI></UL>
<P>If you make a mistake, you can always reset it using the <EM>Reset</EM> button. If you get really stuck, press the <EM>Show solution</EM> button to see the answer.</P>
<DIV class=code-example><PRE class="brush: html hidden notranslate" data-signature="Z+9UPO5knuKsG0lT6eSzy8mgdQzcu+RJHpjMquvKaCU="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Live output<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>output<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 50px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Editable code<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>a11y-label<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Press Esc to move focus away from the code area (Tab inserts a tab character).
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>textarea</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>code<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>input<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 150px<SPAN class="token punctuation">;</SPAN> <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 95%</SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Hello and welcome to my motivation page. As Confucius' quotes site says:<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>It does not matter how slowly you go as long as you do not stop.<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>I also love the concept of positive thinking, and The Need To Eliminate Negative Self Talk (as mentioned in Affirmations for Positive Thinking.)<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>textarea</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>playable-buttons<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Show solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: css hidden notranslate" data-signature="rE54QQGFRG3dI9noBugrfixo4OklLJ9Li8khAbWsxOo="><CODE><SPAN class="token selector">html</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-family</SPAN><SPAN class="token punctuation">:</SPAN> sans-serif<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">h2</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 16px<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">.a11y-label</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 0<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">text-align</SPAN><SPAN class="token punctuation">:</SPAN> right<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 0.7rem<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 98%<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">body</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 10px<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">background</SPAN><SPAN class="token punctuation">:</SPAN> #f5f9fa<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: js hidden notranslate" data-signature="MD+h8mQiodHUtCsIW8TvLukDRRPN26L53mLKl7HTYso="><CODE><SPAN class="token keyword">const</SPAN> textarea <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"code"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> reset <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"reset"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> solution <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"solution"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> output <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">querySelector</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">".output"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> code <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  output<SPAN class="token punctuation">.</SPAN>innerHTML <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token keyword">const</SPAN> htmlSolution <SPAN class="token operator">=</SPAN>
  <SPAN class="token string">'&lt;p&gt;Hello and welcome to my motivation page. As &lt;a href="http://www.brainyquote.com/quotes/authors/c/confucius.html"&gt;&lt;cite&gt;Confucius\' quotes site&lt;/cite&gt;&lt;/a&gt; says:&lt;/p&gt;\n\n&lt;blockquote cite="http://www.brainyquote.com/quotes/authors/c/confucius.html"&gt;\n &lt;p&gt;It does not matter how slowly you go as long as you do not stop.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I also love the concept of positive thinking, and &lt;q cite="http://example.com/affirmationsforpositivethinking"&gt;The Need To Eliminate Negative Self Talk&lt;/q&gt; (as mentioned in &lt;a href="http://example.com/affirmationsforpositivethinking"&gt;&lt;cite&gt;Affirmations for Positive Thinking&lt;/cite&gt;&lt;/a&gt;.)&lt;/p&gt;'</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>

reset<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> code<SPAN class="token punctuation">;</SPAN>
  userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>
  solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

solution<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> solutionEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Hide solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> userEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"input"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
window<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"load"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token comment">// stop tab key tabbing out of textarea and</SPAN>
<SPAN class="token comment">// make it write a tab at the caret position instead</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeydown</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">e</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Tab"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    e<SPAN class="token punctuation">.</SPAN><SPAN class="token function">preventDefault</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
    <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"\t"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Escape"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">blur</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">text</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">const</SPAN> scrollPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>scrollTop<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">let</SPAN> caretPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>selectionStart<SPAN class="token punctuation">;</SPAN>

  <SPAN class="token keyword">const</SPAN> front <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token number">0</SPAN><SPAN class="token punctuation">,</SPAN> caretPos<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">const</SPAN> back <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>selectionEnd<SPAN class="token punctuation">,</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">,</SPAN>
  <SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> front <SPAN class="token operator">+</SPAN> text <SPAN class="token operator">+</SPAN> back<SPAN class="token punctuation">;</SPAN>
  caretPos <SPAN class="token operator">+=</SPAN> text<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionStart <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionEnd <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">focus</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>scrollTop <SPAN class="token operator">=</SPAN> scrollPos<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token comment">// Update the saved userCode every time the user updates the text area code</SPAN>
textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeyup</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token comment">// We only want to save the state when the user code is being shown,</SPAN>
  <SPAN class="token comment">// not the solution, so that solution is not saved over the user code</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    solutionEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<DIV id=sect13 class=code-example>
<DIV id=sect14 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=abbreviations>
<H2 id=abbreviations><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#abbreviations">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1636">Topic #1,636: Abbreviations. Another fairly common element you'll meet when looking around the Web is <abbr> &#8212; this is used to wrap around an abbreviation or acronym. When including either .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong>
Abbreviations</A></H2>
<DIV class=section-content>
<P>Another fairly common element you'll meet when looking around the Web is <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr"><CODE>&lt;abbr&gt;</CODE></A> &#8212; this is used to wrap around an abbreviation or acronym. When including either, provide a full expansion of the term in plain text on first use, along with the <CODE>&lt;abbr&gt;</CODE> to mark up the abbreviation. This provides a hint to user agents on how to announce/display the content while informing all users what the abbreviation means.</P>
<P>If providing the expansion in addition to the abbreviation makes little sense, and the abbreviation or acronym is a fairly shortened term, provide the full expansion of the term as the value of <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#title"><CODE>title</CODE></A> attribute:</P></DIV></SECTION><SECTION aria-labelledby=abbreviation_example>
<H3 id=abbreviation_example><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#abbreviation_example">Abbreviation example</A></H3>
<DIV class=section-content>
<P>Let's look at an example.</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="yU7srY2K+zg4IxnnV27PySxocnTP6b4fn3cfX7m3fFg="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  We use <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>abbr</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>HTML<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>abbr</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>, Hypertext Markup Language, to structure our web
  documents.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  I think <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>abbr</SPAN> <SPAN class="token attr-name">title</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Reverend<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Rev.<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>abbr</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> Green did it in the kitchen with
  the chainsaw.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>These will come out looking something like this:</P>
<DIV id=sect15 class=code-example>
<DIV id=sect16 class=example-header></DIV></DIV>
<DIV id=sect17 class="notecard note">
<P><STRONG>Note:</STRONG> Earlier versions of html also included support for the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym"><CODE>&lt;acronym&gt;</CODE></A> element, but it was removed from the HTML spec in favor of using <CODE>&lt;abbr&gt;</CODE> to represent both abbreviations and acronyms. <CODE>&lt;acronym&gt;</CODE> should not be used.</P></DIV></DIV></SECTION><SECTION aria-labelledby=active_learning_marking_up_an_abbreviation>
<H3 id=active_learning_marking_up_an_abbreviation><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#active_learning_marking_up_an_abbreviation">Active learning: marking up an abbreviation</A></H3>
<DIV class=section-content>
<P>For this simple active learning assignment, we'd like you to mark up an abbreviation. You can use our sample below, or replace it with one of your own.</P>
<DIV class=code-example><PRE class="brush: html hidden notranslate" data-signature="XYYfAwmuY0HRcJM87eY5SQy5IMrJ0+nXX7ps9H3EVNM="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Live output<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>output<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 50px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Editable code<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>a11y-label<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Press Esc to move focus away from the code area (Tab inserts a tab character).
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>textarea</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>code<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>input<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 50px<SPAN class="token punctuation">;</SPAN> <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 95%</SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>NASA, the National Aeronautics and Space Administration, sure does some exciting work.<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>textarea</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>playable-buttons<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Show solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: css hidden notranslate" data-signature="rE54QQGFRG3dI9noBugrfixo4OklLJ9Li8khAbWsxOo="><CODE><SPAN class="token selector">html</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-family</SPAN><SPAN class="token punctuation">:</SPAN> sans-serif<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">h2</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 16px<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">.a11y-label</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 0<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">text-align</SPAN><SPAN class="token punctuation">:</SPAN> right<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 0.7rem<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 98%<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">body</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 10px<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">background</SPAN><SPAN class="token punctuation">:</SPAN> #f5f9fa<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: js hidden notranslate" data-signature="MguTVml8Wd6ySlxcMwBBKk68jUEI1Ih4KlrgK/iXZ3Y="><CODE><SPAN class="token keyword">const</SPAN> textarea <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"code"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> reset <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"reset"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> solution <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"solution"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> output <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">querySelector</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">".output"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> code <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  output<SPAN class="token punctuation">.</SPAN>innerHTML <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token keyword">const</SPAN> htmlSolution <SPAN class="token operator">=</SPAN>
  <SPAN class="token string">"&lt;p&gt;&lt;abbr&gt;NASA&lt;/abbr&gt;, the National Aeronautics and Space Administration, sure does some exciting work.&lt;/p&gt;"</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>

reset<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> code<SPAN class="token punctuation">;</SPAN>
  userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>
  solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

solution<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> solutionEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Hide solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> userEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"input"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
window<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"load"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token comment">// stop tab key tabbing out of textarea and</SPAN>
<SPAN class="token comment">// make it write a tab at the caret position instead</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeydown</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">e</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Tab"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    e<SPAN class="token punctuation">.</SPAN><SPAN class="token function">preventDefault</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
    <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"\t"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Escape"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">blur</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">text</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">const</SPAN> scrollPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>scrollTop<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">let</SPAN> caretPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>selectionStart<SPAN class="token punctuation">;</SPAN>

  <SPAN class="token keyword">const</SPAN> front <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token number">0</SPAN><SPAN class="token punctuation">,</SPAN> caretPos<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">const</SPAN> back <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>selectionEnd<SPAN class="token punctuation">,</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">,</SPAN>
  <SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> front <SPAN class="token operator">+</SPAN> text <SPAN class="token operator">+</SPAN> back<SPAN class="token punctuation">;</SPAN>
  caretPos <SPAN class="token operator">+=</SPAN> text<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionStart <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionEnd <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">focus</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>scrollTop <SPAN class="token operator">=</SPAN> scrollPos<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token comment">// Update the saved userCode every time the user updates the text area code</SPAN>
textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeyup</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">=&gt;</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token comment">// We only want to save the state when the user code is being shown,</SPAN>
  <SPAN class="token comment">// not the solution, so that solution is not saved over the user code</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    solutionEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<DIV id=sect18 class=code-example>
<DIV id=sect19 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=marking_up_contact_details>
<H2 id=marking_up_contact_details><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#marking_up_contact_details">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1637">Topic #1,637: Marking up contact details. HTML has an element for marking up contact details &#8212; <address>. This wraps around your contact details, for example:. html<address>Chris Mills .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong>
Marking up contact details</A></H2>
<DIV class=section-content>
<P>HTML has an element for marking up contact details &#8212; <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address"><CODE>&lt;address&gt;</CODE></A>. This wraps around your contact details, for example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="2F9pNB4pyxo9qmjF/GQtMOq9seAQS9WOFBesxdNZz/0="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>address</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Chris Mills, Manchester, The Grim North, UK<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>address</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>It could also include more complex markup, and other forms of contact information, for example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="euUTIu2dvWh1Ly6EfT+aZiK/g6slXyYihh3sOuXHwJw="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>address</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    Chris Mills<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>br</SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
    Manchester<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>br</SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
    The Grim North<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>br</SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
    UK
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>ul</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>li</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Tel: 01234 567 890<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>li</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>li</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Email: me@grim-north.co.uk<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>li</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>ul</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>address</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>Note that something like this would also be OK, if the linked page contained the contact information:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="yDPJm+9NQXesVdjZH9Go4An2u2HtoqJCGaimCSDtDFY="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>address</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Page written by <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>a</SPAN> <SPAN class="token attr-name">href</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>../authors/chris-mills/<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Chris Mills<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>a</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>address</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV id=sect20 class="notecard note">
<P><STRONG>Note:</STRONG> The <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address"><CODE>&lt;address&gt;</CODE></A> element should only be used to provide contact information for the document contained with the nearest <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article"><CODE>&lt;article&gt;</CODE></A> or <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body"><CODE>&lt;body&gt;</CODE></A> element. It would be correct to use it in the footer of a site to include the contact information of the entire site, or inside an article for the contact details of the author, but not to mark up a list of addresses unrelated to the content of that page.</P></DIV></DIV></SECTION><SECTION aria-labelledby=superscript_and_subscript>
<H2 id=superscript_and_subscript><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#superscript_and_subscript">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1638">Topic #1,638: Superscript and subscript. You will occasionally need to use superscript and subscript when marking up items like dates, chemical formulae, and mathematical equations so they .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong>
Superscript and subscript</A></H2>
<DIV class=section-content>
<P>You will occasionally need to use superscript and subscript when marking up items like dates, chemical formulae, and mathematical equations so they have the correct meaning. The <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup"><CODE>&lt;sup&gt;</CODE></A> and <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub"><CODE>&lt;sub&gt;</CODE></A> elements handle this job. For example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="JcXoWX4IHNozYOh7cag4W1HNDBoIsDzF2qVMgUBQX5M="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>My birthday is on the 25<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>sup</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>th<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>sup</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> of May 2001.<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Caffeine's chemical formula is
  C<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>8<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>H<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>10<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>N<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>4<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>O<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>2<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>sub</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>If x<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>sup</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>2<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>sup</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> is 9, x must equal 3 or -3.<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>The output of this code looks like so:</P>
<DIV id=sect21 class=code-example>
<DIV id=sect22 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=representing_computer_code>
<H2 id=representing_computer_code><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#representing_computer_code">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1639">Topic #1,639: Representing computer code. There are a number of elements available for marking up computer code using HTML:. <code>: For marking up generic pieces of computer code. <pre> .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong>
Representing computer code</A></H2>
<DIV class=section-content>
<P>There are a number of elements available for marking up computer code using HTML:</P>
<UL>
<LI><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code"><CODE>&lt;code&gt;</CODE></A>: For marking up generic pieces of computer code. 
<LI><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre"><CODE>&lt;pre&gt;</CODE></A>: For retaining whitespace (generally code blocks) &#8212; if you use indentation or excess whitespace inside your text, browsers will ignore it and you will not see it on your rendered page. If you wrap the text in <CODE>&lt;pre&gt;&lt;/pre&gt;</CODE> tags however, your whitespace will be rendered identically to how you see it in your text editor. 
<LI><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var"><CODE>&lt;var&gt;</CODE></A>: For specifically marking up variable names. 
<LI><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd"><CODE>&lt;kbd&gt;</CODE></A>: For marking up keyboard (and other types of) input entered into the computer. 
<LI><A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp"><CODE>&lt;samp&gt;</CODE></A>: For marking up the output of a computer program.</LI></UL>
<P>Let's look at examples of these elements and how they're used to represent computer code. If you want to see the full file, take a look at the <A class=external href="https://github.com/mdn/learning-area/blob/main/html/introduction-to-html/advanced-text-formatting/other-semantics.html" target=_blank>other-semantics.html</A> sample file. You can download the file and open it in your browser to see for yourself, but here is a snippet of the code: </P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="PaBQHQhl8ZZ7Ku26CJ7dgNGrsM1+c01aoJg5yMM2E7I="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>pre</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>const para = document.querySelector('p');

para.onclick = function() {
  alert('Owww, stop poking me!');
}<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>pre</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  You shouldn't use presentational elements like <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>font<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> and
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN title="<" class="token entity named-entity">&amp;lt;</SPAN>center<SPAN title=">" class="token entity named-entity">&amp;gt;</SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>code</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  In the above JavaScript example, <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>var</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>para<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>var</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> represents a paragraph
  element.
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Select all the text with <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Ctrl<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>/<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Cmd<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN> + <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>A<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>.<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>pre</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>$ <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>ping mozilla.org<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>kbd</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>samp</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>PING mozilla.org (63.245.215.20): 56 data bytes
64 bytes from 63.245.215.20: icmp_seq=0 ttl=40 time=158.233 ms<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>samp</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>pre</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>The above code will look like so:</P>
<DIV id=sect23 class=code-example>
<DIV id=sect24 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=marking_up_times_and_dates>
<H2 id=marking_up_times_and_dates><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#marking_up_times_and_dates">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1640">Topic #1,640: Marking up times and dates. HTML also provides the <time> element for marking up times and dates in a machine-readable format. For example:. html<time datetime="2016-01-20">20 .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Advanced text formatting : </font></strong>
Marking up times and dates</A></H2>
<DIV class=section-content>
<P>HTML also provides the <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"><CODE>&lt;time&gt;</CODE></A> element for marking up times and dates in a machine-readable format. For example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="wppyacBVQpc1vME8mJJWjPrMejO/IZo+Enkh9EepPqE="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2016-01-20<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>20 January 2016<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>Why is this useful? Well, there are many different ways that humans write down dates. The above date could be written as:</P>
<UL>
<LI>20 January 2016 
<LI>20th January 2016 
<LI>Jan 20 2016 
<LI>20/01/16 
<LI>01/20/16 
<LI>The 20th of next month 
<LI><SPAN lang=fr>20e Janvier 2016</SPAN> 
<LI><SPAN lang=ja>2016 &#24180; 1 &#26376; 20 &#26085;</SPAN> 
<LI>And so on</LI></UL>
<P>But these different forms cannot be easily recognized by computers &#8212; what if you wanted to automatically grab the dates of all events in a page and insert them into a calendar? The <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"><CODE>&lt;time&gt;</CODE></A> element allows you to attach an unambiguous, machine-readable time/date for this purpose.</P>
<P>The basic example above just provides a simple machine readable date, but there are many other options that are possible, for example:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="OLpHQj6Z/+63eBkNYHv+/wE2ShJYFV4llkDSS8A9LmM="><CODE><SPAN class="token comment">&lt;!-- Standard simple date --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2016-01-20<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>20 January 2016<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- Just year and month --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2016-01<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>January 2016<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- Just month and day --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>01-20<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>20 January<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- Just time, hours and minutes --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>19:30<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>19:30<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- You can do seconds and milliseconds too! --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>19:30:01.856<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>19:30:01.856<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- Date and time --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2016-01-20T19:30<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>7.30pm, 20 January 2016<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- Date and time with timezone offset --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2016-01-20T19:30+01:00<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  7.30pm, 20 January 2016 is 8.30pm in France
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token comment">&lt;!-- Calling out a specific week number --&gt;</SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>time</SPAN> <SPAN class="token attr-name">datetime</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2016-W04<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>The fourth week of 2016<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>time</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV></DIV></SECTION><SECTION aria-labelledby=test_your_skills!>
<H2 id=test_your_skills!><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#test_your_skills!">
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:40 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
