<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: CSS Syntax">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), CSS Syntax">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): CSS Syntax (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): CSS Syntax </font></b><br>(6 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="794.htm"> - Next</a> - <a href="837.htm">Previous</a> - <a href="728.htm">Parent</a> - <a href="722.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="336.htm">3. CSS fundamentals</a></li>
<ul>
<li><a href="728.htm">3.1 Basic CSS syntax</a></li>
<ul>
<li>This page: CSS Syntax</li>
<ol>
<li>The basic goal of the Cascading Stylesheet (CSS) language is to allow a browser engine to paint elements of the page with specific features, like colors, positioning, or . (see <a href="#791">below)</a>
<li>CSS declarations (see <a href="#792">below)</a>
<li>CSS declaration blocks (see <a href="#793">below)</a>
<li><a href="794.htm">CSS rulesets</a> (1 elements)
<li>CSS statements (see <a href="#795">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="791">Topic #791: The basic goal of the Cascading Stylesheet (CSS) language is to allow a browser engine to paint elements of the page with specific features, like colors, positioning, or .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
The basic goal of the Cascading Stylesheet (<A href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS</A>) language is to allow a browser engine to paint elements of the page with specific features, like colors, positioning, or decorations. The <EM>CSS syntax</EM> reflects this goal and its basic building blocks are: 
<P></P>
<UL>
<LI>The <STRONG><SPAN class=clozed><STRONG>property</STRONG></SPAN></STRONG> which is an <SPAN class=clozed>identifier</SPAN>, that is a human-readable <EM>name</EM>, that defines which feature is considered. 
<LI>The <STRONG><SPAN class=clozed><STRONG>value</STRONG></SPAN></STRONG> which <SPAN class=clozed>describe how the feature must be handled by the engine</SPAN>. Each property has a set of valid values, defined by a formal grammar, as well as a semantic meaning, implemented by the browser engine.</LI></UL>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="792">Topic #792: CSS declarations</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
Setting CSS properties to specific values is the core function of the CSS language. A <SPAN class=clozed>property and value pair</SPAN> is called <SPAN class=clozed>a <STRONG>declaration</STRONG></SPAN>, and any CSS engine calculates which declarations apply to every single element of a page in order to appropriately lay it out, and to style it. 
<P></P>
<P>Both <SPAN class=clozed>properties</SPAN> and <SPAN class=clozed>values</SPAN> are <SPAN class=clozed>case-insensitive</SPAN> by default in CSS. The pair is separated by <SPAN class=clozed>a colon, '<CODE>:</CODE>' (<CODE>U+003A COLON</CODE>)</SPAN>, and white spaces before, between, and after properties and values, but not necessarily inside, are <SPAN class=clozed>ignored</SPAN>.<SPAN class=clozed> </SPAN></P>
<P>There are <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/Reference">hundreds of different properties</A> in CSS and a practically endless number of different values. Not all pairs of properties and values are allowed and each property defines what are the valid values. When a value is not valid for a given property, the declaration is deemed <EM>invalid</EM> and is wholly ignored by the CSS engine.
</td>
</tr>
<tr>
<td bordercolor="#0066FF">
<img src="45.png"alt="CSS syntax - declaration - property: value (CSS declarations)">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="793">Topic #793: CSS declaration blocks</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<H2 id=css_declaration_blocks><A href="https://developer.mozilla.org/en-US/docs/Web/CSS/Syntax#css_declaration_blocks"><SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> CSS declaration blocks</SPAN></FONT></A></H2>
<DIV class=section-content>
<P>Declarations are grouped in <STRONG>blocks</STRONG>, that is in a structure delimited by <SPAN class=clozed>an opening brace, '<CODE>{</CODE>' (<CODE>U+007B LEFT CURLY BRACKET</CODE>), and a closing one, '<CODE>}</CODE>' (<CODE>U+007D RIGHT CURLY BRACKET</CODE>)</SPAN>. Blocks sometimes can be nested, so opening and closing braces must be matched.</P>
<P><img alt="css syntax - block.png" src="https://developer.mozilla.org/en-US/docs/Web/CSS/Syntax/css_syntax_-_block.png" width=312 height=222 loading="lazy"> </P>
<P>Such blocks are naturally called <STRONG><SPAN class=clozed><STRONG>declaration blocks</STRONG></SPAN></STRONG> and declarations inside them are separated by a semicolon, '<CODE>;</CODE>' (<CODE>U+003B SEMICOLON</CODE>). A declaration block may be empty, that is containing null declaration. White spaces around declarations are ignored. The last declaration of a block doesn't need to be terminated by a semicolon, though it is often considered <EM>good style</EM> to do it as it prevents forgetting to add it when extending the block with another declaration.</P>
<P>A CSS declaration block is visualized in the diagram below.</P>
<DIV id=sect1 class="notecard note">
<P><STRONG>Note:</STRONG> The content of a CSS declaration block, that is a list of semicolon-separated declarations, without the initial and closing braces, can be put inside an HTML <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#style"><CODE>style</CODE></A> attribute.
</td>
</tr>
<tr>
<td bordercolor="#0066FF">
<img src="49.png"alt="CSS syntax - declarations block (CSS declaration blocks)">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="795">Topic #795: CSS statements</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<H2 id=css_statements><A href="https://developer.mozilla.org/en-US/docs/Web/CSS/Syntax#css_statements"><SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> CSS statements</SPAN></FONT></A></H2>
<DIV class=section-content>
<P>Rulesets are the main building blocks of a style sheet, which often consists of only a big list of them. But there is other information that a Web author wants to convey in the style sheet, like the character set, other external style sheets to import, font face or list counter descriptions and many more. It will use other and specific kinds of statements to do that.</P>
<P>A <STRONG>statement</STRONG> is a building block that begins with any non-space characters and ends at the first closing brace or semicolon (outside a string, non-escaped and not included into another {}, () or [] pair).</P>
<P><img alt="css syntax - statements Venn diag.png" src="https://developer.mozilla.org/en-US/docs/Web/CSS/Syntax/css_syntax_-_statements_venn_diag.png" width=417 height=234 loading="lazy"> </P>
<P>There are two kinds of statements:</P>
<UL>
<LI><STRONG>Rulesets</STRONG> (or <EM>rules</EM>) that, as seen, associate a collection of CSS declarations to a condition described by a <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors">selector</A>. 
<LI><STRONG>At-rules</STRONG> that start with an at sign, '<CODE>@</CODE>' (<CODE>U+0040 COMMERCIAL AT</CODE>), followed by an identifier and then continuing up to the end of the statement, that is up to the next semicolon (;) outside of a block, or the end of the next block. Each type of <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule">at-rules</A>, defined by the identifier, may have its own internal syntax, and semantics of course. They are used to convey meta-data information (like <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/@layer"><CODE>@layer</CODE></A> or <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/@import"><CODE>@import</CODE></A>), conditional information (like <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media"><CODE>@media</CODE></A> or <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/@document"><CODE>@document</CODE></A>), or descriptive information (like <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face"><CODE>@font-face</CODE></A>).</LI></UL>
<P>Any statement which isn't a ruleset or an at-rule is invalid and ignored.</P></DIV></SECTION><SECTION aria-labelledby=nested_statements>
<H3 id=nested_statements><A href="https://developer.mozilla.org/en-US/docs/Web/CSS/Syntax#nested_statements">Nested statements</A></H3>
<DIV class=section-content>
<P>There is another group of statements &#8211; the <STRONG>nested statements</STRONG>. These are statements that can be used in a specific subset of at-rules &#8211; the <EM>conditional group rules</EM>. These statements only apply if a specific condition is matched: the <CODE>@media</CODE> at-rule content is applied only if the device on which the browser runs matches the expressed condition; the <CODE>@document</CODE> at-rule content is applied only if the current page matches some conditions, and so on. In CSS1 and CSS2.1, only <EM>rulesets</EM> could be used inside conditional group rules. That was very restrictive and this restriction was lifted in <A href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules"><EM>CSS Conditionals Level 3</EM></A>. Now, though still experimental and not supported by every browser, conditional group rules can contain a wider range of content: rulesets but also some, but not all, at-rules.
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:40 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
