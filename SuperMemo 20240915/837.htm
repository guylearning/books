<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: What happens if a browser encounters CSS it doesn't understand?">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), What happens if a browser encounters CSS it doesn't understand?">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): What happens if a browser encounters CSS it doesn't ... (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): What happens if a browser encounters CSS it doesn't ... </font></b><br>(2 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="790.htm"> - Next</a> - <a href="722.htm">Previous</a> - <a href="722.htm">Parent</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="336.htm">3. CSS fundamentals</a></li>
<ul>
<li><a href="728.htm">3.1 Basic CSS syntax</a></li>
<ul>
<li><a href="722.htm">How CSS works</a></li>
<ul>
<li>This page: What happens if a browser encounters CSS it doesn't understand?</li>
<ol>
<li>What happens if a browser encounters a CSS selector or declaration it doesn't recognize. The answer is that it does nothing, and just moves on to the next bit of CSS! If a . (see <a href="#838">below)</a>
<li>This behavior is very useful. It means that you can use new CSS as an enhancement, knowing that no error will occur if it is not understood — the browser will either get the . (see <a href="#803">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="838">Topic #838: What happens if a browser encounters a CSS selector or declaration it doesn't recognize. The answer is that it does nothing, and just moves on to the next bit of CSS! If a .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
What happens if a browser encounters a CSS selector or declaration it doesn't recognize.<BR>The answer isthat it does nothing, and just moves on to the next bit of CSS!<BR>If a browser is parsing your rules, and encounters a property or value that it doesn't understand, it <SPAN class=clozed>ignores it and moves on to the next declaration</SPAN>. It will do this if you have made an error and misspelled a property or value, or if the property or value is just too new and the browser doesn't yet support it.<BR>Similarly, if a browser encounters a selector that it doesn't understand, it will just <SPAN class=clozed>ignore the whole rule and move on to the next one</SPAN>.<SPAN class=clozed><BR><BR></SPAN>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="803">Topic #803: This behavior is very useful. It means that you can use new CSS as an enhancement, knowing that no error will occur if it is not understood &#8212; the browser will either get the .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
This behavior is very useful. It means that you can use new CSS as an enhancement, knowing that no error will occur if it is not understood &#8212; the browser will either get the new feature or not. This enables basic <SPAN class=clozed>fallback styling</SPAN>.<BR>This works particularly well when you want to use a value that is quite new and not supported everywhere. For example, some older browsers do not support <CODE>calc()</CODE> as a value. I might give a fallback width for a box in pixels, then go on to give a width with a <CODE>calc()</CODE> value of <CODE>100% - 50px</CODE>. Old browsers will use the pixel version, ignoring the line about <CODE>calc()</CODE> as they don't understand it. New browsers will interpret the line using pixels, but then override it with the line using <CODE>calc()</CODE> as that line appears later in the cascade.<SPAN class=language-name>css</SPAN><PRE class="brush: css notranslate" data-signature="W/b7GDqWhrdEt235bSsOpvUY310qmIZecXCg9TxZ66w="><CODE><SPAN class="token selector">.box</SPAN> <SPAN class="token punctuation">{</SPAN><BR>  <SPAN class="token property"><SPAN class=clozed><SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 500px<SPAN class="token punctuation">;</SPAN></SPAN></SPAN><BR>  <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> <SPAN class="token function">calc</SPAN><SPAN class="token punctuation">(</SPAN>100% - 50px<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN><BR><SPAN class="token punctuation">}</SPAN><BR></CODE></PRE>
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:40 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
