<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: What went wrong? Troubleshooting JavaScript">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), What went wrong? Troubleshooting JavaScript">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): What went wrong? Troubleshooting JavaScript (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): What went wrong? Troubleshooting JavaScript </font></b><br>(5 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="1036.htm"> - Next</a> - <a href="1035.htm">Previous</a> - <a href="339.htm">Parent</a> - <a href="1036.htm">Next sibling</a> - <a href="1035.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="339.htm">6. JavaScript fundamentals</a></li>
<ul>
<li>This page: What went wrong? Troubleshooting JavaScript</li>
<ol>
<li>Types of error (see <a href="#1410">below)</a>
<li>An erroneous example (see <a href="#1411">below)</a>
<li>Fixing syntax errors (see <a href="#1412">below)</a>
<li>A logic error (see <a href="#1413">below)</a>
<li>Other common errors (see <a href="#1414">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="1410">Topic #1,410: Types of error</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<STRONG><FONT color=blue>What went wrong? Troubleshooting JavaScript : </FONT></STRONG>
<H2 id=types_of_error><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#types_of_error"><SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> Types of error</SPAN></FONT></A></H2>
<DIV class=section-content>
<P>Generally speaking, when you do something wrong in code, there are two main types of error that you'll come across:</P>
<UL>
<LI><STRONG>Syntax errors</STRONG>: These are spelling errors in your code that actually cause the program not to run at all, or stop working part way through &#8212; you will usually be provided with some error messages too. These are usually okay to fix, as long as you are familiar with the right tools and know what the error messages mean! 
<LI><STRONG>Logic errors</STRONG>: These are errors where the syntax is actually correct but the code is not what you intended it to be, meaning that program runs successfully but gives incorrect results. These are often harder to fix than syntax errors, as there usually isn't an error message to direct you to the source of the error.</LI></UL>
<P>Okay, so it's not quite <EM>that</EM> simple &#8212; there are some other differentiators as you drill down deeper. But the above classifications will do at this early stage in your career. We'll look at both of these types going forward.</P></DIV></SECTION><SECTION aria-labelledby=an_erroneous_example>
<H2 id=an_erroneous_example><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#an_erroneous_example">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1411">Topic #1,411: An erroneous example</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<STRONG><FONT color=blue>What went wrong? Troubleshooting JavaScript :<SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> An erroneous example</SPAN></FONT></FONT></STRONG></A> 
<H2></H2>
<DIV class=section-content>
<P>To get started, let's return to our number guessing game &#8212; except this time we'll be exploring a version that has some deliberate errors introduced. Go to GitHub and make yourself a local copy of <A class=external href="https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/troubleshooting/number-game-errors.html" target=_blank>number-game-errors.html</A> (see it <A class=external href="https://mdn.github.io/learning-area/javascript/introduction-to-js-1/troubleshooting/number-game-errors.html" target=_blank>running live here</A>).</P>
<OL>
<LI>To get started, open the local copy inside your favorite text editor, and your browser. 
<LI>Try playing the game &#8212; you'll notice that when you press the "Submit guess" button, it doesn't work!</LI></OL>
<DIV id=sect1 class="notecard note">
<P><STRONG>Note:</STRONG> You might well have your own version of the game example that doesn't work, which you might want to fix! We'd still like you to work through the article with our version, so that you can learn the techniques we are teaching here. Then you can go back and try to fix your example.</P></DIV>
<P>At this point, let's consult the developer console to see if it reports any syntax errors, then try to fix them. You'll learn how below.</P></DIV></SECTION><SECTION aria-labelledby=fixing_syntax_errors>
<H2 id=fixing_syntax_errors><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#fixing_syntax_errors">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1412">Topic #1,412: Fixing syntax errors</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<STRONG><FONT color=blue>What went wrong? Troubleshooting JavaScript : </FONT></STRONG><SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> Fixing syntax errors</SPAN></FONT></A> 
<H2></H2>
<DIV class=section-content>
<P>Earlier on in the course we got you to type some simple JavaScript commands into the <A href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Tools_and_setup/What_are_browser_developer_tools">developer tools JavaScript console</A> (if you can't remember how to open this in your browser, follow the previous link to find out how). What's even more useful is that the console gives you error messages whenever a syntax error exists inside the JavaScript being fed into the browser's JavaScript engine. Now let's go hunting.</P>
<OL>
<LI>Go to the tab that you've got <CODE>number-game-errors.html</CODE> open in, and open your JavaScript console. You should see an error message along the following lines: <img alt='"Number guessing game" demo page in Firefox. One error is visible in the JavaScript console: "X TypeError: guessSubmit.addeventListener is not a function [Learn More] (number-game-errors.html:86:3)".' src="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong/not-a-function.png" width=2080 height=1384 loading="lazy"> 
<LI>The first line of the error message is: <PRE class="brush: plain notranslate">Uncaught TypeError: guessSubmit.addeventListener is not a function
number-game-errors.html:86:15
</PRE>
<UL>
<LI>The first part, <CODE>Uncaught TypeError: guessSubmit.addeventListener is not a function</CODE>, is telling us something about what went wrong. 
<LI>The second part, <CODE>number-game-errors.html:86:15</CODE>, is telling us where in the code the error came from: line 86, character 15 of the file "number-game-errors.html".</LI></UL>
<LI>If we look at line 86 in our code editor, we'll find this line: 
<DIV id=sect2 class="notecard warning">
<P><STRONG>Warning:</STRONG> Error message may not be on line 86.</P>
<P>If you are using any code editor with an extension that launches a live server on your local machine, this will cause extra code to be injected. Because of this, the developer tools will list the error as occurring on a line that is not 86.</P></DIV>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="N926F5fACXY3Pjr2nQx+MHJsdDRkxPSxu6MDQrKU1JQ="><CODE>guessSubmit<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addeventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> checkGuess<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<LI>The error message says "guessSubmit.addeventListener is not a function", which means that the function we're calling is not recognized by the JavaScript interpreter. Often, this error message actually means that we've spelled something wrong. If you are not sure of the correct spelling of a piece of syntax, it is often good to look up the feature on MDN. The best way to do this currently is to search for "mdn <EM>name-of-feature</EM>" with your favorite search engine. Here's a shortcut to save you some time in this instance: <A href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"><CODE>addEventListener()</CODE></A>. 
<LI>So, looking at this page, the error appears to be that we've spelled the function name wrong! Remember that JavaScript is case-sensitive, so any slight difference in spelling or casing will cause an error. Changing <CODE>addeventListener</CODE> to <CODE>addEventListener</CODE> should fix this. Do this now.</LI></OL>
<DIV id=sect3 class="notecard note">
<P><STRONG>Note:</STRONG> See our <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_function">TypeError: "x" is not a function</A> reference page for more details about this error.</P></DIV></DIV></SECTION><SECTION aria-labelledby=syntax_errors_round_two>
<H3 id=syntax_errors_round_two><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#syntax_errors_round_two">Syntax errors round two</A></H3>
<DIV class=section-content>
<OL>
<LI>Save your page and refresh, and you should see the error has gone. 
<LI>Now if you try to enter a guess and press the Submit guess button, you'll see another error! <img alt='Screenshot of the same "Number guessing game" demo. This time, a different error is visible in the console, reading "X TypeError: lowOrHi is null".' src="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong/variable-is-null.png" width=2080 height=1384 loading="lazy"> 
<LI>This time the error being reported is: <PRE class="brush: plain notranslate">Uncaught TypeError: can't access property "textContent", lowOrHi is null
</PRE>Depending on the browser you are using, you might see a different message here. The message above is what Firefox will show you, but Chrome, for example, will show you this: <PRE class="brush: plain notranslate">Uncaught TypeError: Cannot set properties of null (setting 'textContent')
</PRE>It's the same error, but different browsers describe it in a different way. 
<DIV id=sect4 class="notecard note">
<P><STRONG>Note:</STRONG> This error didn't come up as soon as the page was loaded because this error occurred inside a function (inside the <CODE>checkGuess() { }</CODE> block). As you'll learn in more detail in our later <A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Functions">functions article</A>, code inside functions runs in a separate scope than code outside functions. In this case, the code was not run and the error was not thrown until the <CODE>checkGuess()</CODE> function was run by line 86.</P></DIV>
<LI>The line number given in the error is 80. Have a look at line 80, and you'll see the following code: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="SuuhKJHMHpNwFwaWtN6LjTm91cqGYIbNa6SzzP/ruEU="><CODE>lowOrHi<SPAN class="token punctuation">.</SPAN>textContent <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Last guess was too high!"</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<LI>This line is trying to set the <CODE>textContent</CODE> property of the <CODE>lowOrHi</CODE> variable to a text string, but it's not working because <CODE>lowOrHi</CODE> does not contain what it's supposed to. Let's see why this is &#8212; try searching for other instances of <CODE>lowOrHi</CODE> in the code. The earliest instance you'll find is on line 49: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="aFMfLKCkxvxrKrJ/dUo8TDBpe3MlRbm0szkIlRZu6Sk="><CODE><SPAN class="token keyword">const</SPAN> lowOrHi <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">querySelector</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"lowOrHi"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<LI>At this point we are trying to make the variable contain a reference to an element in the document's HTML. Let's see what the variable contains after this line has been run. Add the following code on line 50: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="/7Jr5rixigFjB4mDfj757B+rY5gTppxPzvpjrtQIh0c="><CODE>console<SPAN class="token punctuation">.</SPAN><SPAN class="token function">log</SPAN><SPAN class="token punctuation">(</SPAN>lowOrHi<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>This code will print the value of <CODE>lowOrHi</CODE> to the console after we tried to set it in line 49. See <A title=console.log() href="https://developer.mozilla.org/en-US/docs/Web/API/console/log_static"><CODE>console.log()</CODE></A> for more information. 
<LI>Save and refresh, and you should now see the <CODE>console.log()</CODE> result in your console. <img alt='Screenshot of the same demo. One log statement is visible in the console, reading simply "null".' src="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong/console-log-output.png" width=2080 height=1384 loading="lazy"> Sure enough, <CODE>lowOrHi</CODE>'s value is <CODE>null</CODE> at this point, and this matches up with the Firefox error message <CODE>lowOrHi is null</CODE>. So there is definitely a problem with line 49. The <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null"><CODE>null</CODE></A> value means "nothing", or "no value". So our code to set <CODE>lowOrHi</CODE> to an element is going wrong. 
<LI>Let's think about what the problem could be. Line 49 is using a <A href="https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector"><CODE>document.querySelector()</CODE></A> method to get a reference to an element by selecting it with a CSS selector. Looking further up our file, we can find the paragraph in question: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="hHdoUiiMWS+dNv4Hpe3/oyeS2WfYl1AbOpvx4YDUMZs="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>lowOrHi<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<LI>So we need a class selector here, which begins with a dot (<CODE>.</CODE>), but the selector being passed into the <CODE>querySelector()</CODE> method in line 49 has no dot. This could be the problem! Try changing <CODE>lowOrHi</CODE> to <CODE>.lowOrHi</CODE> in line 49. 
<LI>Try saving and refreshing again, and your <CODE>console.log()</CODE> statement should return the <CODE>&lt;p&gt;</CODE> element we want. Phew! Another error fixed! You can delete your <CODE>console.log()</CODE> line now, or keep it to reference later on &#8212; your choice.</LI></OL>
<DIV id=sect5 class="notecard note">
<P><STRONG>Note:</STRONG> See our <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Unexpected_type">TypeError: "x" is (not) "y"</A> reference page for more details about this error.</P></DIV></DIV></SECTION><SECTION aria-labelledby=syntax_errors_round_three>
<H3 id=syntax_errors_round_three><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#syntax_errors_round_three">Syntax errors round three</A></H3>
<DIV class=section-content>
<OL>
<LI>Now if you try playing the game through again, you should get more success &#8212; the game should play through absolutely fine, until you end the game, either by guessing the right number, or by running out of guesses. 
<LI>At that point, the game fails again, and the same error is spat out that we got at the beginning &#8212; "TypeError: resetButton.addeventListener is not a function"! However, this time it's listed as coming from line 94. 
<LI>Looking at line number 94, it is easy to see that we've made the same mistake here. We again just need to change <CODE>addeventListener</CODE> to <CODE>addEventListener</CODE>. Do this now.</LI></OL></DIV></SECTION><SECTION aria-labelledby=a_logic_error>
<H2 id=a_logic_error><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#a_logic_error">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1413">Topic #1,413: A logic error</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<STRONG><FONT color=blue>What went wrong? Troubleshooting JavaScript : </FONT></STRONG><SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> A logic error</SPAN></FONT></A> 
<H2></H2>
<DIV class=section-content>
<P>At this point, the game should play through fine, however after playing through a few times you'll undoubtedly notice that the game always chooses 1 as the "random" number you've got to guess. Definitely not quite how we want the game to play out!</P>
<P>There's definitely a problem in the game logic somewhere &#8212; the game is not returning an error; it just isn't playing right.</P>
<OL>
<LI>Search for the <CODE>randomNumber</CODE> variable, and the lines where the random number is first set. The instance that stores the random number that we want to guess at the start of the game should be around line number 45: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="4crTLk/dr0kQqjvFJZ2TTOdPrYTVY7kPc7Fzxtl1BhA="><CODE><SPAN class="token keyword">let</SPAN> randomNumber <SPAN class="token operator">=</SPAN> Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">floor</SPAN><SPAN class="token punctuation">(</SPAN>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">random</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">+</SPAN> <SPAN class="token number">1</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<LI>And the one that generates the random number before each subsequent game is around line 113: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="wDrdnOGXzyY1ZaOWBRhHsxDE8QZNmCeBFTEkwPO36nA="><CODE>randomNumber <SPAN class="token operator">=</SPAN> Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">floor</SPAN><SPAN class="token punctuation">(</SPAN>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">random</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">+</SPAN> <SPAN class="token number">1</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<LI>To check whether these lines are indeed the problem, let's turn to our friend <CODE>console.log()</CODE> again &#8212; insert the following line directly below each of the above two lines: 
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="orGe7VmOqiBwYcWlseiBckvmL2Ve1zrSWnVLw6peP68="><CODE>console<SPAN class="token punctuation">.</SPAN><SPAN class="token function">log</SPAN><SPAN class="token punctuation">(</SPAN>randomNumber<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<LI>Save and refresh, then play a few games &#8212; you'll see that <CODE>randomNumber</CODE> is equal to 1 at each point where it is logged to the console.</LI></OL></DIV></SECTION><SECTION aria-labelledby=working_through_the_logic>
<H3 id=working_through_the_logic><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#working_through_the_logic">Working through the logic</A></H3>
<DIV class=section-content>
<P>To fix this, let's consider how this line is working. First, we invoke <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random"><CODE>Math.random()</CODE></A>, which generates a random decimal number between 0 and 1, e.g. 0.5675493843.</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="pPFkZMJIpzP2GZcvmRhDyKKAyZFb0rqLF2Xt+cUlVGE="><CODE>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">random</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Next, we pass the result of invoking <CODE>Math.random()</CODE> through <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor"><CODE>Math.floor()</CODE></A>, which rounds the number passed to it down to the nearest whole number. We then add 1 to that result:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="pg0HDg1znoa6v88SwdSwTkzfcsbBmnbpBBfqkTo/iP8="><CODE>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">floor</SPAN><SPAN class="token punctuation">(</SPAN>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">random</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">+</SPAN> <SPAN class="token number">1</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Rounding a random decimal number between 0 and 1 down will always return 0, so adding 1 to it will always return 1. We need to multiply the random number by 100 before we round it down. The following would give us a random number between 0 and 99:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="3nVvigZWmHISQ2ICt2unmUCG2QvlwNZefJOWiDzC/3o="><CODE>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">floor</SPAN><SPAN class="token punctuation">(</SPAN>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">random</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">*</SPAN> <SPAN class="token number">100</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Hence us wanting to add 1, to give us a random number between 1 and 100:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="vGZfE39up3fbupaOLXIGfOR60Jf5TNcN5EwU9xFCDDY="><CODE>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">floor</SPAN><SPAN class="token punctuation">(</SPAN>Math<SPAN class="token punctuation">.</SPAN><SPAN class="token function">random</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">*</SPAN> <SPAN class="token number">100</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token operator">+</SPAN> <SPAN class="token number">1</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Try updating both lines like this, then save and refresh &#8212; the game should now play like we are intending it to!</P></DIV></SECTION><SECTION aria-labelledby=other_common_errors>
<H2 id=other_common_errors><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#other_common_errors">
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1414">Topic #1,414: Other common errors</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<STRONG><FONT color=blue>What went wrong? Troubleshooting JavaScript : </FONT></STRONG><SPAN class=headers>Title:</SPAN></B><SPAN class=RefText> Other common errors</SPAN></FONT></A> 
<H2></H2>
<DIV class=section-content>
<P>There are other common errors you'll come across in your code. This section highlights most of them.</P></DIV></SECTION><SECTION aria-labelledby=the_program_always_says_youve_won_regardless_of_the_guess_you_enter>
<H3 id=the_program_always_says_youve_won_regardless_of_the_guess_you_enter><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#the_program_always_says_youve_won_regardless_of_the_guess_you_enter">The program always says you've won, regardless of the guess you enter</A></H3>
<DIV class=section-content>
<P>This could be another symptom of mixing up the assignment and strict equality operators. For example, if we were to change this line inside <CODE>checkGuess()</CODE>:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="LmNgn65C+WpwKV9Z0ni/w0hHwUDR+eZWVEQikSKy2cU="><CODE><SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>userGuess <SPAN class="token operator">===</SPAN> randomNumber<SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
</CODE></PRE></DIV>
<P>to</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="9dxQq4aAiKDf/P3Gv2/3wPimv0k34ANbstp+21Rs4nA="><CODE><SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>userGuess <SPAN class="token operator">=</SPAN> randomNumber<SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
</CODE></PRE></DIV>
<P>the test would always return <CODE>true</CODE>, causing the program to report that the game has been won. Be careful!</P></DIV></SECTION><SECTION aria-labelledby=syntaxerror_missing_after_argument_list>
<H3 id=syntaxerror_missing_after_argument_list><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#syntaxerror_missing_after_argument_list">SyntaxError: missing ) after argument list</A></H3>
<DIV class=section-content>
<P>This one is pretty simple &#8212; it generally means that you've missed the closing parenthesis at the end of a function/method call.</P>
<DIV id=sect6 class="notecard note">
<P><STRONG>Note:</STRONG> See our <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list">SyntaxError: missing ) after argument list</A> reference page for more details about this error.</P></DIV></DIV></SECTION><SECTION aria-labelledby=syntaxerror_missing_after_property_id>
<H3 id=syntaxerror_missing_after_property_id><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#syntaxerror_missing_after_property_id">SyntaxError: missing : after property id</A></H3>
<DIV class=section-content>
<P>This error usually relates to an incorrectly formed JavaScript object, but in this case we managed to get it by changing</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="SqYOB9vXLtjKbYZPVFhLITjo4i+sRThLOZGo+SXDNCA="><CODE><SPAN class="token keyword">function</SPAN> <SPAN class="token function">checkGuess</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
</CODE></PRE></DIV>
<P>to</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="YdkRAcknNvlytvyPLJ4zJwkTkGU6h3nnfwwbNd9n4t0="><CODE><SPAN class="token keyword">function</SPAN> <SPAN class="token function">checkGuess</SPAN><SPAN class="token punctuation">(</SPAN> <SPAN class="token punctuation">{</SPAN>
</CODE></PRE></DIV>
<P>This has caused the browser to think that we are trying to pass the contents of the function into the function as an argument. Be careful with those parentheses!</P></DIV></SECTION><SECTION aria-labelledby=syntaxerror_missing_after_function_body>
<H3 id=syntaxerror_missing_after_function_body><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#syntaxerror_missing_after_function_body">SyntaxError: missing } after function body</A></H3>
<DIV class=section-content>
<P>This is easy &#8212; it generally means that you've missed one of your curly braces from a function or conditional structure. We got this error by deleting one of the closing curly braces near the bottom of the <CODE>checkGuess()</CODE> function.</P></DIV></SECTION><SECTION aria-labelledby=syntaxerror_expected_expression_got_string_or_syntaxerror_string_literal_contains_an_unescaped_line_break>
<H3 id=syntaxerror_expected_expression_got_string_or_syntaxerror_string_literal_contains_an_unescaped_line_break><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#syntaxerror_expected_expression_got_string_or_syntaxerror_string_literal_contains_an_unescaped_line_break">SyntaxError: expected expression, got '<EM>string</EM>' or SyntaxError: string literal contains an unescaped line break</A></H3>
<DIV class=section-content>
<P>These errors generally mean that you've left off a string value's opening or closing quote mark. In the first error above, <EM>string</EM> would be replaced with the unexpected character(s) that the browser found instead of a quote mark at the start of a string. The second error means that the string has not been ended with a quote mark.</P>
<P>For all of these errors, think about how we tackled the examples we looked at in the walkthrough. When an error arises, look at the line number you are given, go to that line and see if you can spot what's wrong. Bear in mind that the error is not necessarily going to be on that line, and also that the error might not be caused by the exact same problem we cited above!</P>
<DIV id=sect7 class="notecard note">
<P><STRONG>Note:</STRONG> See our <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Unexpected_token">SyntaxError: Unexpected token</A> and <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/String_literal_EOL">SyntaxError: string literal contains an unescaped line break</A> reference pages for more details about these errors.</P></DIV></DIV></SECTION><SECTION aria-labelledby=summary>
<H2 id=summary><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong#summary">
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:41 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
