<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: Variable types">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), Variable types">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): Variable types (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): Variable types </font></b><br>(5 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="1421.htm"> - Next</a> - <a href="1500.htm">Previous</a> - <a href="1036.htm">Parent</a> - <a href="1421.htm">Next sibling</a> - <a href="1419.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="339.htm">6. JavaScript fundamentals</a></li>
<ul>
<li><a href="1036.htm">Storing the information you need — Variables</a></li>
<ul>
<li>This page: Variable types</li>
<ol>
<li>Numbers. You can store numbers in variables, either whole numbers like 30 (also called integers) or decimal numbers like 2.456 (also called floats or floating point numbers) . (see <a href="#855">below)</a>
<li>Strings. Strings are pieces of text. When you give a variable a string value, you need to wrap it in single or double quote marks; otherwise, JavaScript tries to interpret it . (see <a href="#1507">below)</a>
<li>Booleans. Booleans are true/false values — they can have two values, true or false. These are generally used to test a condition, after which code is run as appropriate. So . (see <a href="#1508">below)</a>
<li>Arrays. An array is a single object that contains multiple values enclosed in square brackets and separated by commas. Try entering the following lines into your console . (see <a href="#1509">below)</a>
<li>Objects. In programming, an object is a structure of code that models a real-life object. You can have a simple object that represents a box and contains information about its . (see <a href="#1510">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="855">Topic #855: Numbers. You can store numbers in variables, either whole numbers like 30 (also called integers) or decimal numbers like 2.456 (also called floats or floating point numbers) .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Variable types : </font></strong><H3 id=numbers><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#numbers"><FONT color=#0066cc>Numbers</FONT></A></H3>
<DIV class=section-content>
<P>You can store numbers in variables, either whole numbers like 30 (also called integers) or decimal numbers like 2.456 (also called floats or floating point numbers). You don't need to declare variable types in JavaScript, unlike some other programming languages. When you give a variable a number value, you don't include quotes:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="OFRx0zG0XHhAXC7B4N4t2UCEXnQqApOUMvVSN42SxFI="><CODE><SPAN class="token keyword">let</SPAN> myAge <SPAN class="token operator">=</SPAN> <SPAN class="token number">17</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV></DIV></SECTION><SECTION aria-labelledby=strings>
<H3 id=strings><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#strings"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1507">Topic #1,507: Strings. Strings are pieces of text. When you give a variable a string value, you need to wrap it in single or double quote marks; otherwise, JavaScript tries to interpret it .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Variable types : </font></strong>
Strings</FONT></A></H3>
<DIV class=section-content>
<P>Strings are pieces of text. When you give a variable a string value, you need to wrap it in single or double quote marks; otherwise, JavaScript tries to interpret it as another variable name.</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="vZ+qb6QCjw1zvdZizuBeNIDZCqYvZDNTH5r3rllIlTk="><CODE><SPAN class="token keyword">let</SPAN> dolphinGoodbye <SPAN class="token operator">=</SPAN> <SPAN class="token string">"So long and thanks for all the fish"</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV></DIV></SECTION><SECTION aria-labelledby=booleans>
<H3 id=booleans><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#booleans"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1508">Topic #1,508: Booleans. Booleans are true/false values &#8212; they can have two values, true or false. These are generally used to test a condition, after which code is run as appropriate. So .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Variable types : </font></strong>
Booleans</FONT></A></H3>
<DIV class=section-content>
<P>Booleans are true/false values &#8212; they can have two values, <CODE>true</CODE> or <CODE>false</CODE>. These are generally used to test a condition, after which code is run as appropriate. So for example, a simple case would be:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="CRRidapfRPn2MZ2z0fTuFbR3Ow7Ve/iIv5eveNpUpN4="><CODE><SPAN class="token keyword">let</SPAN> iAmAlive <SPAN class="token operator">=</SPAN> <SPAN class="token boolean">true</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Whereas in reality it would be used more like this:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="4v8rMddcKh2SFczCY3/QSFCAzlM9jPDv8kUucA0E+xI="><CODE><SPAN class="token keyword">let</SPAN> test <SPAN class="token operator">=</SPAN> <SPAN class="token number">6</SPAN> <SPAN class="token operator">&lt;</SPAN> <SPAN class="token number">3</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>This is using the "less than" operator (<CODE>&lt;</CODE>) to test whether 6 is less than 3. As you might expect, it returns <CODE>false</CODE>, because 6 is not less than 3! You will learn a lot more about such operators later on in the course.</P></DIV></SECTION><SECTION aria-labelledby=arrays>
<H3 id=arrays><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#arrays"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1509">Topic #1,509: Arrays. An array is a single object that contains multiple values enclosed in square brackets and separated by commas. Try entering the following lines into your console .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Variable types : </font></strong>
Arrays</FONT></A></H3>
<DIV class=section-content>
<P>An array is a single object that contains multiple values enclosed in square brackets and separated by commas. Try entering the following lines into your console:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="Nzv59yCjTr05vumGu7Vsr/SZsla4RqFWALvloYlcrZM="><CODE><SPAN class="token keyword">let</SPAN> myNameArray <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">[</SPAN><SPAN class="token string">"Chris"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token string">"Bob"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token string">"Jim"</SPAN><SPAN class="token punctuation">]</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> myNumberArray <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">[</SPAN><SPAN class="token number">10</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token number">15</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token number">40</SPAN><SPAN class="token punctuation">]</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Once these arrays are defined, you can access each value by their location within the array. Try these lines:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="LTbuuIbOkzTZ9iCfuXSRlDHOQ524vnB3cNuFCMC5jgU="><CODE>myNameArray<SPAN class="token punctuation">[</SPAN><SPAN class="token number">0</SPAN><SPAN class="token punctuation">]</SPAN><SPAN class="token punctuation">;</SPAN> <SPAN class="token comment">// should return 'Chris'</SPAN>
myNumberArray<SPAN class="token punctuation">[</SPAN><SPAN class="token number">2</SPAN><SPAN class="token punctuation">]</SPAN><SPAN class="token punctuation">;</SPAN> <SPAN class="token comment">// should return 40</SPAN>
</CODE></PRE></DIV>
<P>The square brackets specify an index value corresponding to the position of the value you want returned. You might have noticed that arrays in JavaScript are zero-indexed: the first element is at index 0.</P>
<P>To learn more, see our article on <A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Arrays"><FONT color=#0066cc>Arrays</FONT></A>.</P></DIV></SECTION><SECTION aria-labelledby=objects>
<H3 id=objects><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#objects"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1510">Topic #1,510: Objects. In programming, an object is a structure of code that models a real-life object. You can have a simple object that represents a box and contains information about its .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Variable types : </font></strong>
Objects</FONT></A></H3>
<DIV class=section-content>
<P>In programming, an object is a structure of code that models a real-life object. You can have a simple object that represents a box and contains information about its width, length, and height, or you could have an object that represents a person, and contains data about their name, height, weight, what language they speak, how to say hello to them, and more.</P>
<P>Try entering the following line into your console:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="g34wtCt4YfZj9eQ+Tg2HdKN7/LjsjGeOqDXlN9eQDKA="><CODE><SPAN class="token keyword">let</SPAN> dog <SPAN class="token operator">=</SPAN> <SPAN class="token punctuation">{</SPAN> <SPAN class="token literal-property property">name</SPAN><SPAN class="token operator">:</SPAN> <SPAN class="token string">"Spot"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token literal-property property">breed</SPAN><SPAN class="token operator">:</SPAN> <SPAN class="token string">"Dalmatian"</SPAN> <SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>To retrieve the information stored in the object, you can use the following syntax:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>js</SPAN></DIV><PRE class="brush: js notranslate" data-signature="NBDtQG9U/dW8XjkQ4Oxhf5Oy7C36rX72+PbOyGAf6cY="><CODE>dog<SPAN class="token punctuation">.</SPAN>name<SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>For more on this topic, see the <A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects"><FONT color=#0066cc>Introducing JavaScript objects</FONT></A> module.</P></DIV></SECTION><SECTION aria-labelledby=dynamic_typing>
<H2 id=dynamic_typing><A href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#dynamic_typing"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:41 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
