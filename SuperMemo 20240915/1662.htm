<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: Adding SVG to your pages">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), Adding SVG to your pages">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): Adding SVG to your pages (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): Adding SVG to your pages </font></b><br>(4 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="1654.htm"> - Next</a> - <a href="1661.htm">Previous</a> - <a href="1650.htm">Parent</a> - <a href="1661.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li><a href="332.htm">Core</a></li>
<ul>
<li><a href="335.htm">2. Semantic HTML</a></li>
<ul>
<li><a href="935.htm">Multimedia and embedding</a></li>
<ul>
<li><a href="1650.htm">Adding vector graphics to the web</a></li>
<ul>
<li>This page: Adding SVG to your pages</li>
<ol>
<li>The quick way: img element. To embed an SVG via an <img> element, you just need to reference it in the src attribute as you'd expect. You will need a height or a width . (see <a href="#1782">below)</a>
<li>Troubleshooting and cross-browser support. For browsers that don't support SVG (IE 8 and below, Android 2.3 and below), you could reference a PNG or JPG from your src . (see <a href="#1783">below)</a>
<li>How to include SVG code inside your HTML. You can also open up the SVG file in a text editor, copy the SVG code, and paste it into your HTML document — this is sometimes . (see <a href="#1784">below)</a>
<li>How to embed an SVG with an iframe. You can open SVG images in your browser just like webpages. So embedding an SVG document with an <iframe> is done just like we studied in . (see <a href="#1785">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="1782">Topic #1,782: The quick way: img element. To embed an SVG via an <img> element, you just need to reference it in the src attribute as you'd expect. You will need a height or a width .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Adding SVG to your pages : </font></strong><H3 id=the_quick_way_img_element><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#the_quick_way_img_element"><FONT color=#0066cc>The quick way: <CODE><FONT size=4>img</FONT></CODE> element</FONT></A></H3>
<DIV class=section-content>
<P>To embed an SVG via an <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"><CODE><FONT color=#0066cc>&lt;img&gt;</FONT></CODE></A> element, you just need to reference it in the src attribute as you'd expect. You will need a <CODE>height</CODE> or a <CODE>width</CODE> attribute (or both if your SVG has no inherent <A href="https://developer.mozilla.org/en-US/docs/Glossary/Aspect_ratio"><FONT color=#0066cc>aspect ratio</FONT></A>). If you have not already done so, please read <A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML"><FONT color=#0066cc>Images in HTML</FONT></A>.</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="cOODIdizMez/2Q4WIawguaZPrGn1jdpcxqlFFO69TEc="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>img</SPAN>
  <SPAN class="token attr-name">src</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>equilateral.svg<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token attr-name">alt</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>triangle with all three sides equal<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>87<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<H4 id=pros>Pros</H4>
<UL>
<LI>Quick, familiar image syntax with built-in text equivalent available in the <CODE>alt</CODE> attribute. 
<LI>You can make the image into a hyperlink easily by nesting the <CODE>&lt;img&gt;</CODE> inside an <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"><CODE><FONT color=#0066cc>&lt;a&gt;</FONT></CODE></A> element. 
<LI>The SVG file can be cached by the browser, resulting in faster loading times for any page that uses the image loaded in the future.</LI></UL>
<H4 id=cons>Cons</H4>
<UL>
<LI>You cannot manipulate the image with JavaScript. 
<LI>If you want to control the SVG content with CSS, you must include inline CSS styles in your SVG code. (External stylesheets invoked from the SVG file take no effect.) 
<LI>You cannot restyle the image with CSS pseudoclasses (like <CODE>:focus</CODE>).</LI></UL></DIV></SECTION><SECTION aria-labelledby=troubleshooting_and_cross-browser_support>
<H3 id=troubleshooting_and_cross-browser_support><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#troubleshooting_and_cross-browser_support"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1783">Topic #1,783: Troubleshooting and cross-browser support. For browsers that don't support SVG (IE 8 and below, Android 2.3 and below), you could reference a PNG or JPG from your src .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Adding SVG to your pages : </font></strong>
Troubleshooting and cross-browser support</FONT></A></H3>
<DIV class=section-content>
<P>For browsers that don't support SVG (IE 8 and below, Android 2.3 and below), you could reference a PNG or JPG from your <CODE>src</CODE> attribute and use a <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#srcset"><CODE><FONT color=#0066cc>srcset</FONT></CODE></A> attribute (which only recent browsers recognize) to reference the SVG. This being the case, only supporting browsers will load the SVG &#8212; older browsers will load the PNG instead:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="YiYiIN6vC15dZiL0MjG3spKysvV1h2cdd+d5X9yKNbg="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>img</SPAN>
  <SPAN class="token attr-name">src</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>equilateral.png<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token attr-name">alt</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>triangle with equal sides<SPAN class="token punctuation">"</SPAN></SPAN>
  <SPAN class="token attr-name">srcset</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>equilateral.svg<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>You can also use SVGs as CSS background images, as shown below. In the below code, older browsers will stick with the PNG that they understand, while newer browsers will load the SVG:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>css</SPAN></DIV><PRE class="brush: css notranslate" data-signature="3krmlyoPmKCDGTc4be+yTNrrhCougpokjNZNB3FEXN8="><CODE><SPAN class="token property">background</SPAN><SPAN class="token punctuation">:</SPAN> <SPAN class="token url"><SPAN class="token function">url</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string url">"fallback.png"</SPAN><SPAN class="token punctuation">)</SPAN></SPAN> no-repeat center<SPAN class="token punctuation">;</SPAN>
<SPAN class="token property">background-image</SPAN><SPAN class="token punctuation">:</SPAN> <SPAN class="token url"><SPAN class="token function">url</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string url">"image.svg"</SPAN><SPAN class="token punctuation">)</SPAN></SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token property">background-size</SPAN><SPAN class="token punctuation">:</SPAN> contain<SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<P>Like the <CODE>&lt;img&gt;</CODE> method described above, inserting SVGs using CSS background images means that the SVG can't be manipulated with JavaScript, and is also subject to the same CSS limitations.</P>
<P>If your SVGs aren't showing up at all, it might be because your server isn't set up properly. If that's the problem, this <A href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Getting_Started#a_word_on_web_servers_for_.svgz_files"><FONT color=#0066cc>article will point you in the right direction</FONT></A>.</P></DIV></SECTION><SECTION aria-labelledby=how_to_include_svg_code_inside_your_html>
<H3 id=how_to_include_svg_code_inside_your_html><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#how_to_include_svg_code_inside_your_html"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1784">Topic #1,784: How to include SVG code inside your HTML. You can also open up the SVG file in a text editor, copy the SVG code, and paste it into your HTML document &#8212; this is sometimes .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Adding SVG to your pages : </font></strong>
How to include SVG code inside your HTML</FONT></A></H3>
<DIV class=section-content>
<P>You can also open up the SVG file in a text editor, copy the SVG code, and paste it into your HTML document &#8212; this is sometimes called putting your <STRONG>SVG inline</STRONG>, or <STRONG>inlining SVG</STRONG>. Make sure your SVG code snippet begins with an <CODE>&lt;svg&gt;</CODE> start tag and ends with an <CODE>&lt;/svg&gt;</CODE> end tag. Here's a very simple example of what you might paste into your document:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="Ayt+RaQnXrcz6DP3p3yEc0JVEun+hSpaApYIZIzCMaw="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>svg</SPAN> <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>300<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>200<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>rect</SPAN> <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">fill</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>green<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>svg</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<H4 id=pros_2>Pros</H4>
<UL>
<LI>Putting your SVG inline saves an HTTP request, and therefore can reduce your loading time a bit. 
<LI>You can assign <CODE>class</CODE>es and <CODE>id</CODE>s to SVG elements and style them with CSS, either within the SVG or wherever you put the CSS style rules for your HTML document. In fact, you can use any <A href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute#presentation_attributes"><FONT color=#0066cc>SVG presentation attribute</FONT></A> as a CSS property. 
<LI>Inlining SVG is the only approach that lets you use CSS interactions (like <CODE>:focus</CODE>) and CSS animations on your SVG image (even in your regular stylesheet.) 
<LI>You can make SVG markup into a hyperlink by wrapping it in an <A href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"><CODE><FONT color=#0066cc>&lt;a&gt;</FONT></CODE></A> element.</LI></UL>
<H4 id=cons_2>Cons</H4>
<UL>
<LI>This method is only suitable if you're using the SVG in only one place. Duplication makes for resource-intensive maintenance. 
<LI>Extra SVG code increases the size of your HTML file. 
<LI>The browser cannot cache inline SVG as it would cache regular image assets, so pages that include the image will not load faster after the first page containing the image is loaded. 
<LI>You may include fallback in a <A href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject"><CODE><FONT color=#0066cc>&lt;foreignObject&gt;</FONT></CODE></A> element, but browsers that support SVG still download any fallback images. You need to weigh whether the extra overhead is really worthwhile, just to support obsolescent browsers.</LI></UL></DIV></SECTION><SECTION aria-labelledby=how_to_embed_an_svg_with_an_iframe>
<H3 id=how_to_embed_an_svg_with_an_iframe><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#how_to_embed_an_svg_with_an_iframe"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1785">Topic #1,785: How to embed an SVG with an iframe. You can open SVG images in your browser just like webpages. So embedding an SVG document with an <iframe> is done just like we studied in .</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<strong><font color="blue">Adding SVG to your pages : </font></strong>
How to embed an SVG with an <CODE><FONT size=4>iframe</FONT></CODE></FONT></A></H3>
<DIV class=section-content>
<P>You can open SVG images in your browser just like webpages. So embedding an SVG document with an <CODE>&lt;iframe&gt;</CODE> is done just like we studied in <A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies"><FONT color=#0066cc>From &lt;object&gt; to &lt;iframe&gt; &#8212; other embedding technologies</FONT></A>.</P>
<P>Here's a quick review:</P>
<DIV class=code-example>
<DIV class=example-header><SPAN class=language-name>html</SPAN></DIV><PRE class="brush: html notranslate" data-signature="jSJyDVUq5Y3O28c3IAUyfa3+ROqzMcZIF+5jrx5BOhk="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>iframe</SPAN> <SPAN class="token attr-name">src</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>triangle.svg<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>500<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>500<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">sandbox</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>img</SPAN> <SPAN class="token attr-name">src</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>triangle.png<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">alt</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Triangle with three unequal sides<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>iframe</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<P>This is definitely not the best method to choose:</P>
<H4 id=cons_3>Cons</H4>
<UL>
<LI><CODE>iframe</CODE>s do have a fallback mechanism, as you can see, but browsers only display the fallback if they lack support for <CODE>iframe</CODE>s altogether. 
<LI>Moreover, unless the SVG and your current webpage have the same <A href="https://developer.mozilla.org/en-US/docs/Glossary/Origin"><FONT color=#0066cc>origin</FONT></A>, you cannot use JavaScript on your main webpage to manipulate the SVG.</LI></UL></DIV></SECTION><SECTION aria-labelledby=active_learning_playing_with_svg>
<H2 id=active_learning_playing_with_svg><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#active_learning_playing_with_svg"><FONT color=#0066cc>Active Learning: Playing with SVG</FONT></A></H2>
<DIV class=section-content>
<P>In this active learning section we'd like you to have a go at playing with some SVG for fun. In the <EM>Input</EM> section below you'll see that we've already provided you with some samples to get you started. You can also go to the <A href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element"><FONT color=#0066cc>SVG Element Reference</FONT></A>, find out more details about other toys you can use in SVG, and try those out too. This section is all about practising your research skills, and having some fun.</P>
<P>If you get stuck and can't get your code working, you can always reset it using the <EM>Reset</EM> button.</P>
<DIV class=code-example><PRE class="brush: html hidden notranslate" data-signature="BWVzP7shm6gKXuJUhoJsCPnZYlSTRbeI3pGSuCNxS54="><CODE><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Live output<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>output<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 50px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN><SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>Editable code<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>p</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>a11y-label<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  Press Esc to move focus away from the code area (Tab inserts a tab character).
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>p</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>textarea</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>code<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>input<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token special-attr"><SPAN class="token attr-name">style</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN><SPAN class="token value css language-css"><SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 95%<SPAN class="token punctuation">;</SPAN><SPAN class="token property">min-height</SPAN><SPAN class="token punctuation">:</SPAN> 200px<SPAN class="token punctuation">;</SPAN></SPAN><SPAN class="token punctuation">"</SPAN></SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>svg</SPAN> <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>rect</SPAN> <SPAN class="token attr-name">width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">height</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">fill</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>red<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>circle</SPAN> <SPAN class="token attr-name">cx</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">cy</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100%<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">r</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>150<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">fill</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>blue<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">stroke</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>black<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>polygon</SPAN> <SPAN class="token attr-name">points</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>120,0 240,225 0,225<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">fill</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>green<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">/&gt;</SPAN></SPAN>
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>text</SPAN> <SPAN class="token attr-name">x</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>50<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">y</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>100<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">font-family</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Verdana<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">font-size</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>55<SPAN class="token punctuation">"</SPAN></SPAN>
          <SPAN class="token attr-name">fill</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>white<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">stroke</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>black<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">stroke-width</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>2<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
            Hello!
    <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>text</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>svg</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>textarea</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>

<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name">class</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>playable-buttons<SPAN class="token punctuation">"</SPAN></SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Reset<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
  <SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;</SPAN>input</SPAN> <SPAN class="token attr-name">id</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">type</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>button<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">value</SPAN><SPAN class="token attr-value"><SPAN class="token punctuation attr-equals">=</SPAN><SPAN class="token punctuation">"</SPAN>Show solution<SPAN class="token punctuation">"</SPAN></SPAN> <SPAN class="token attr-name">disabled</SPAN> <SPAN class="token punctuation">/&gt;</SPAN></SPAN>
<SPAN class="token tag"><SPAN class="token tag"><SPAN class="token punctuation">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation">&gt;</SPAN></SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: css hidden notranslate" data-signature="rE54QQGFRG3dI9noBugrfixo4OklLJ9Li8khAbWsxOo="><CODE><SPAN class="token selector">html</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-family</SPAN><SPAN class="token punctuation">:</SPAN> sans-serif<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">h2</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 16px<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">.a11y-label</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 0<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">text-align</SPAN><SPAN class="token punctuation">:</SPAN> right<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">font-size</SPAN><SPAN class="token punctuation">:</SPAN> 0.7rem<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">width</SPAN><SPAN class="token punctuation">:</SPAN> 98%<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token selector">body</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token property">margin</SPAN><SPAN class="token punctuation">:</SPAN> 10px<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token property">background</SPAN><SPAN class="token punctuation">:</SPAN> #f5f9fa<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>
</CODE></PRE></DIV>
<DIV class=code-example><PRE class="brush: js hidden notranslate" data-signature="6qxdM65C58B6O1zwAcMWazPboWX5ZRHaf/zP0adC4rE="><CODE><SPAN class="token keyword">const</SPAN> textarea <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"code"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> reset <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"reset"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> solution <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">getElementById</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"solution"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">const</SPAN> output <SPAN class="token operator">=</SPAN> document<SPAN class="token punctuation">.</SPAN><SPAN class="token function">querySelector</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">".output"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> code <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  output<SPAN class="token punctuation">.</SPAN>innerHTML <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

reset<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> code<SPAN class="token punctuation">;</SPAN>
  userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>
  solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

solution<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"click"</SPAN><SPAN class="token punctuation">,</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> solutionEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Hide solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> userEntry<SPAN class="token punctuation">;</SPAN>
    solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">const</SPAN> htmlSolution <SPAN class="token operator">=</SPAN> <SPAN class="token string">""</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token keyword">let</SPAN> solutionEntry <SPAN class="token operator">=</SPAN> htmlSolution<SPAN class="token punctuation">;</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"input"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
window<SPAN class="token punctuation">.</SPAN><SPAN class="token function">addEventListener</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"load"</SPAN><SPAN class="token punctuation">,</SPAN> updateCode<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token comment">// stop tab key tabbing out of textarea and</SPAN>
<SPAN class="token comment">// make it write a tab at the caret position instead</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeydown</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">e</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Tab"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    e<SPAN class="token punctuation">.</SPAN><SPAN class="token function">preventDefault</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
    <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token string">"\t"</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>e<SPAN class="token punctuation">.</SPAN>code <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Escape"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">blur</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>

<SPAN class="token keyword">function</SPAN> <SPAN class="token function">insertAtCaret</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token parameter">text</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token keyword">const</SPAN> scrollPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>scrollTop<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">let</SPAN> caretPos <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>selectionStart<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">const</SPAN> front <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token number">0</SPAN><SPAN class="token punctuation">,</SPAN> caretPos<SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  <SPAN class="token keyword">const</SPAN> back <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN><SPAN class="token function">substring</SPAN><SPAN class="token punctuation">(</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>selectionEnd<SPAN class="token punctuation">,</SPAN>
    textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">,</SPAN>
  <SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>

  textarea<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">=</SPAN> front <SPAN class="token operator">+</SPAN> text <SPAN class="token operator">+</SPAN> back<SPAN class="token punctuation">;</SPAN>
  caretPos <SPAN class="token operator">+=</SPAN> text<SPAN class="token punctuation">.</SPAN>length<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionStart <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>selectionEnd <SPAN class="token operator">=</SPAN> caretPos<SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function">focus</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
  textarea<SPAN class="token punctuation">.</SPAN>scrollTop <SPAN class="token operator">=</SPAN> scrollPos<SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN>

<SPAN class="token comment">// Update the saved userCode every time the user updates the text area code</SPAN>

textarea<SPAN class="token punctuation">.</SPAN><SPAN class="token function-variable function">onkeyup</SPAN> <SPAN class="token operator">=</SPAN> <SPAN class="token keyword">function</SPAN> <SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
  <SPAN class="token comment">// We only want to save the state when the user code is being shown,</SPAN>
  <SPAN class="token comment">// not the solution, so that solution is not saved over the user code</SPAN>
  <SPAN class="token keyword">if</SPAN> <SPAN class="token punctuation">(</SPAN>solution<SPAN class="token punctuation">.</SPAN>value <SPAN class="token operator">===</SPAN> <SPAN class="token string">"Show solution"</SPAN><SPAN class="token punctuation">)</SPAN> <SPAN class="token punctuation">{</SPAN>
    userEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN> <SPAN class="token keyword">else</SPAN> <SPAN class="token punctuation">{</SPAN>
    solutionEntry <SPAN class="token operator">=</SPAN> textarea<SPAN class="token punctuation">.</SPAN>value<SPAN class="token punctuation">;</SPAN>
  <SPAN class="token punctuation">}</SPAN>

  <SPAN class="token function">updateCode</SPAN><SPAN class="token punctuation">(</SPAN><SPAN class="token punctuation">)</SPAN><SPAN class="token punctuation">;</SPAN>
<SPAN class="token punctuation">}</SPAN><SPAN class="token punctuation">;</SPAN>
</CODE></PRE></DIV>
<DIV id=sect6 class=code-example>
<DIV id=sect7 class=example-header></DIV></DIV></DIV></SECTION><SECTION aria-labelledby=summary>
<H2 id=summary><A href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#summary"><FONT color=#0066cc>
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:40 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
