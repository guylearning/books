<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: (((backup of mindx created on 2024-09-15 23-55-25))), Page: Getting started">
<meta http-equiv="keywords" content="SuperMemo, (((backup of mindx created on 2024-09-15 23-55-25))), Getting started">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>(((backup of mindx created on 2024-09-15 23-55-25))): Getting started (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">(((backup of mindx created on 2024-09-15 23-55-25))): Getting started </font></b><br>(2 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="332.htm"> - Next</a> - <a href="330.htm">Previous</a> - <a href="330.htm">Parent</a> - <a href="332.htm">Next sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">MindX</a></li>
<ul>
<li><a href="3.htm">Explor</a></li>
<ul>
<li><a href="330.htm">MDN Front-End Developer</a></li>
<ul>
<li>This page: Getting started</li>
<ol>
<li>1. Soft skills (see <a href="#1237">below)</a>
<li>2. Environment setup (see <a href="#1238">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a name="1237">Topic #1,237: 1. Soft skills</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<H1></H1>
<P class=module-topic>Best Practices</P>
<P class=module-group>Getting started modules</P></HEADER>
<DIV class=section-content>
<P>This module provides recommendations of soft skills that students can aim to get better at while learning web development, and which constitute good traits to have when entering the industry. They will help immensely in developing the right attitudes for learning, researching, and collaborating, and increase the chances of getting hired.</P></DIV><SECTION aria-labelledby=1.1_constant_learning_mindset>
<H2 id=1.1_constant_learning_mindset><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.1_constant_learning_mindset"><FONT color=#0066cc>1.1 Constant learning mindset</FONT></A></H2>
<DIV class=section-content>
<P>Students should get into the mindset of constant learning. The web is constantly evolving and technologies and trends are always changing, and they need to constantly update their knowledge to keep up.</P>
<UL>
<LI>Get into the habit of regularly reading technical news, blogs, and browser release notes. 
<LI>Engage in reading tasks or small research projects semi-regularly. 
<LI>Set aside specific learning time to spend on acquiring new skills. 
<LI>Be curious.</LI></UL>
<P>Recommended news and information sites:</P>
<UL>
<LI><A href="https://developer.mozilla.org/"><FONT color=#0066cc>MDN</FONT></A> 
<LI><A class=external href="https://css-tricks.com/" target=_blank><FONT color=#0066cc>CSS Tricks</FONT></A> 
<LI><A class=external href="https://dev.to/" target=_blank><FONT color=#0066cc>Dev</FONT></A> 
<LI><A class=external href="https://www.freecodecamp.org/" target=_blank><FONT color=#0066cc>freeCodeCamp</FONT></A> 
<LI><A class=external href="https://alistapart.com/" target=_blank><FONT color=#0066cc>A List Apart</FONT></A> 
<LI><A class=external href="https://www.smashingmagazine.com/" target=_blank><FONT color=#0066cc>Smashing Magazine</FONT></A> 
<LI><A class=external href="https://www.codecademy.com/" target=_blank><FONT color=#0066cc>CodeCademy</FONT></A></LI></UL></DIV></SECTION><SECTION aria-labelledby=1.2_open_to_embracing_failure>
<H2 id=1.2_open_to_embracing_failure><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.2_open_to_embracing_failure"><FONT color=#0066cc>1.2 Open to embracing failure</FONT></A></H2>
<DIV class=section-content>
<P>A very common issue that causes students and new developers to shy away from experimentation and taking risks (for example when starting new projects or exploring new ideas) is fear of failure. Spend some time learning about the value that can be gleaned from making mistakes, and the lessons that can be learned and applied in the future in similar situations.</P>
<P>Here are some tips to improve this skill:</P>
<UL>
<LI>Define a safe space/peer group where people are free to ask questions and failure will not be judged harshly. 
<LI>Look to your local community and try to find meetup groups with people who can either give you help and advice or are facing the same issues you are and can provide moral support or experiment together with you. 
<LI>(For educators) Set up the marking schemes for your assessments so that you can still get a reasonable number of marks even if you didn't get the correct result provided the process is well documented. Award extra marks for innovation. 
<LI>Run show 'n' tell or one-on-one sessions part-way through a project with peers and mentors to get feedback and insights into where you are going wrong and get advice on how to get back on the right path. 
<LI>Run retrospective meetings to analyze projects, look at what didn't go so well, and talk about how to improve things next time.</LI></UL></DIV></SECTION><SECTION aria-labelledby=1.3_effective_research>
<H2 id=1.3_effective_research><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.3_effective_research"><FONT color=#0066cc>1.3 Effective research</FONT></A></H2>
<DIV class=section-content>
<P>Web developers spend a lot of time searching for solutions to problems encountered in their work. Students should learn effective strategies for finding answers, and when to use which methods (e.g. don't jump straight to pestering the senior dev every time you hit a roadblock).</P>
<P>These strategies include:</P>
<UL>
<LI>Consulting the documentation. 
<UL>
<LI>When you are stuck with using a tool/product, consult the official documentation first. It is surprising how many people do not think to do this; official docs are often geared towards beginners, so people with experience may not think of them as being suitable for them. 
<LI>Learn about different <A class=external href="https://documentation.divio.com/" target=_blank><FONT color=#0066cc>types of documentation</FONT></A> &#8212; for example, tutorials, references, and other types &#8212; and understand when each type is useful.</LI></UL>
<LI>Using search engines effectively (See <A class=external href="https://www.theguardian.com/technology/2016/jan/15/how-to-use-search-like-a-pro-10-tips-and-tricks-for-google-and-beyond" target=_blank><FONT color=#0066cc>How to use search like a pro: 10 tips and tricks for Google and beyond</FONT></A>). 
<LI>Choosing valid information sources: 
<UL>
<LI>Choose recommended sites such as <A class=external href="https://stackoverflow.com/" target=_blank><FONT color=#0066cc>Stack Overflow</FONT></A> and <A href="https://developer.mozilla.org/"><FONT color=#0066cc>MDN</FONT></A>. 
<LI>Check the dates on articles, and consider whether the techniques discussed are out-of-date. For example, does an article on CSS layout talk about modern approaches like grid and flexbox, or does it still present obsolete techniques like multi-column layouts with floats? Does it still talk about hacks for ancient browsers like Internet Explorer or Netscape 4?</LI></UL>
<LI>Using social media effectively: 
<UL>
<LI>Build a network of folks who can help. 
<LI>Join community groups where you can look for answers. For example: 
<UL>
<LI><A class=external href="https://discord.gg/apa6Rn7uEj" target=_blank><FONT color=#0066cc>The MDN Web Docs community</FONT></A> on Discord 
<LI><A class=external href="https://scrimba.com/?via=mdn" target=_blank><FONT color=#0066cc>Scrimba</FONT></A> <EM>Course partner</EM> 
<LI><A class=external href="https://www.freecodecamp.org/" target=_blank><FONT color=#0066cc>freeCodeCamp</FONT></A> 
<LI><A class=external href="https://www.codenewbie.org/" target=_blank><FONT color=#0066cc>CodeNewbie</FONT></A> 
<LI><A class=external href="https://dev.to/" target=_blank><FONT color=#0066cc>Dev.to</FONT></A></LI></UL>
<LI>Learn to give back as well as take; web developers who reciprocate are much more likely to build strong relationships and keep getting help. 
<LI>When you find a useful answer, write about it. For example, blog about it or share it on a social network. Not only will the process of writing clarify the concepts to you, but you'll also get validation and/or feedback from the community. It could also help you to start making a name for yourself in the industry.</LI></UL>
<LI>Making effective use of an experienced contact's time: 
<UL>
<LI>By "experienced contact", we mean a teacher, mentor, or senior developer. 
<LI>Ask them what communication methods they prefer. 
<LI>Think carefully about what questions to ask them beforehand, consider their time limited and precious. 
<LI>Be sure to do some background research about the topic beforehand and don't ask questions that you can find answers to by searching the web or the official documentation. 
<LI>Timebox the session to say 30 minutes. 
<LI>Prioritize your issues. 
<LI>Set a goal for the session, for example, "try to find a solution to the highest priority issue"; solving the biggest issue may also lead to a fix for other issues.</LI></UL>
<LI><A class=external href="https://wikipedia.org/wiki/Rubber_duck_debugging" target=_blank><FONT color=#0066cc>Rubber ducking</FONT></A> as an effective help mechanism. See also <A class=external href="https://rubberduckdebugging.com/" target=_blank><FONT color=#0066cc>Rubber Duck Debugging</FONT></A>. 
<LI>Using AI to help with coding issues (for example <A class=external href="https://openai.com/blog/chatgpt" target=_blank><FONT color=#0066cc>ChatGPT</FONT></A> or <A class=external href="https://resources.github.com/copilot-for-business/" target=_blank><FONT color=#0066cc>GitHub Copilot</FONT></A>). You should use AI tools with caution, and familiarize yourself with their strengths and weaknesses: 
<UL>
<LI>On the plus side, they can speed up research/searches enormously, and help with structuring code and copy. 
<LI>On the other hand, AI tools have no reasoning skills and frequently provide answers that are misleading or just plain wrong. You shouldn't just assume that AI answers are correct, and test them/verify them with other sources.</LI></UL></LI></UL>
<BLOCKQUOTE class=curriculum-notes>
<P><STRONG>Notes</STRONG>:</P>
<UL>
<LI>There is definitely a balance to knowing the right time to ask for help. Web developers shouldn't constantly pester their peers/colleagues, but equally, they shouldn't soldier on and pretend they know what they are doing when they don't. 
<LI>Consider the value of saying "I don't know" at the right time.</LI></UL></BLOCKQUOTE>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI><A href="https://developer.mozilla.org/docs/Learn/Learning_and_getting_help"><FONT color=#0066cc>Learning and getting help</FONT></A></LI></UL></DIV></SECTION><SECTION aria-labelledby=1.4_collaboration_and_teamwork>
<H2 id=1.4_collaboration_and_teamwork><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.4_collaboration_and_teamwork"><FONT color=#0066cc>1.4 Collaboration and teamwork</FONT></A></H2>
<DIV class=section-content>
<P>As a professional in the web industry, you are going to have to work with other people on projects, and while brainstorming ideas and proposals. Not everyone is born with an innate ability to work in a team, so it is beneficial to start incorporating some best practices early on and putting work into areas where you think you are lacking.</P>
<P>Recommendations:</P>
<UL>
<LI>Learn about empathy, humility, conflict resolution, and cooperation. In all engagements, stay polite and respectful and do not use offensive language. 
<LI>While working in a team in the real world, you will frequently be expected to do peer reviews. Practice how to deliver feedback constructively and respectfully. When receiving feedback, practice how to not take it personally, and focus on the positives and what you can learn. 
<LI>Participate in pair programming, or work in teams on assessments to experience working with other people. 
<LI>Practice running projects like a real software project, with a timeline, plan, and responsibilities. Learn about the software development lifecycle. Pick up some basic project planning skills and tools to be able to estimate and plan your work/project. 
<LI>As part of the course, blog about your work, learnings, and roadblocks, share your code repositories, get peers to critique your work, and offer updates to fix issues in other people's work. 
<LI>Join a Slack channel, Discord, or a similar space, ask peers for help, share resources, and discuss the work to be done (for example, see the <A class=external href="https://discord.me/frontenddevelopers" target=_blank><FONT color=#0066cc>Frontend Developers</FONT></A> Discord server). 
<LI>Practice asking and answering questions. Even if they seem somewhat trivial, always come up with one or two questions to ask when discussing or reviewing peer work. It is essential to practice explaining what you are doing and asking the right questions to find out what you need to know. 
<LI>Help each other, rather than waiting for a teacher or senior dev to go around and help everyone. Less able peers will get help more quickly, and more able peers will become mentors and experience the satisfaction that it brings. 
<LI>Observe and learn from other experienced folks how to engage in discussions as well as how to approach problem-solving/debugging. 
<LI>Join an open-source project to practice the skills you learn, engage with folks in the community, and learn from observing others (see <A class=external href="https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/" target=_blank><FONT color=#0066cc>How to Contribute to Open Source Projects &#8211; A Beginner's Guide</FONT></A> for useful information).</LI></UL></DIV></SECTION><SECTION aria-labelledby=1.5_succeeding_in_job_interviews>
<H2 id=1.5_succeeding_in_job_interviews><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.5_succeeding_in_job_interviews"><FONT color=#0066cc>1.5 Succeeding in job interviews</FONT></A></H2>
<DIV class=section-content>
<P>Technical job interviews can be very demanding, and some have quite specific requirements.</P>
<P>Recommendations:</P>
<UL>
<LI>Learn effective strategies for job searching. For example: 
<UL>
<LI>Attend networking events and job fairs to meet potential employers. 
<LI>Keep an inventory of the people you meet and the companies you apply to. 
<LI>Follow up with any promising leads you meet.</LI></UL>
<LI>Create a portfolio. 
<LI>Build the perfect resum&#233;. 
<LI>Get experience &#8212; build real projects and contribute to open source. 
<LI>Build your online persona. 
<LI>Use sites like <A class=external href="https://www.linkedin.com/" target=_blank><FONT color=#0066cc>LinkedIn</FONT></A> to help with the above. 
<LI>Practice writing answers for coding and design interview questions. 
<LI>Build a collection of anecdotes to use for experience-based interview questions. 
<LI>Be aware of the attributes that hiring managers look for in a candidate and prepare accordingly: 
<UL>
<LI>Someone they can get along with. 
<LI>Positive attitude, respectful, empathic, constructive. 
<LI>Open-minded and works well in a diverse team with diverse viewpoints. 
<LI>Graceful when a decision does not go their way, able to align for the greater good. 
<LI>Good communicator and relationship builder. 
<LI>Tenacious, focused, good problem solver. 
<LI>Having a good portfolio.</LI></UL>
<LI>Be patient. Even the best candidates will get rejections from multiple job applications before they land the job they want.</LI></UL>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI class=curriculum-external-li><A class=external href="https://learntocodewith.me/posts/technical-interview/" target=_blank><FONT color=#0066cc>Technical Interviewing 101: Ultimate Guide to Acing Your Tech Interview</FONT></A>, learntocodewith.me (2022) 
<LI class=curriculum-external-li><A class=external href="https://www.coursera.org/articles/technical-interview-questions" target=_blank><FONT color=#0066cc>30 Technical Interview Questions and Tips for Answering</FONT></A>, Coursera (2023)</LI></UL></DIV></SECTION><SECTION aria-labelledby=1.6_workflows_and_processes>
<H2 id=1.6_workflows_and_processes><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.6_workflows_and_processes"><FONT color=#0066cc>1.6 Workflows and processes</FONT></A></H2>
<DIV class=section-content>
<P>An important aspect of technical projects that beginners often miss out on is an idea of the bigger picture of a project. They might learn an individual tool or language and understand what they need to do, but be unaware of all the other codebases, tools, systems, and job roles that go together to deliver an entire web application. It is useful to understand the following at a high level:</P>
<UL>
<LI>Typical technology combinations and application architectures in common web projects. 
<LI>Typical processes for a technical project, including where different tools are used in those processes. 
<LI>Typical job roles, and where they are involved in those processes. 
<LI>Common work management styles, such as agile and waterfall.</LI></UL>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI class=curriculum-external-li><A class=external href="https://www.mongodb.com/basics/technology-stack" target=_blank><FONT color=#0066cc>What is a Tech Stack and How Do They Work?</FONT></A>, mongodb.com 
<LI class=curriculum-external-li><A class=external href="https://www.truemark.dev/blog/web-development-team-structure-role-process/" target=_blank><FONT color=#0066cc>Website development team structure: roles and processes</FONT></A>, truemark.dev (2017) 
<LI class=curriculum-external-li><A class=external href="https://asana.com/resources/waterfall-agile-kanban-scrum" target=_blank><FONT color=#0066cc>Waterfall vs. Agile vs. Kanban vs. Scrum: What's the difference?</FONT></A>, Asana (2022)</LI></UL></DIV></SECTION><SECTION aria-labelledby=1.7_relevant_contextual_information>
<H2 id=1.7_relevant_contextual_information><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/soft-skills/#1.7_relevant_contextual_information"><FONT color=#0066cc>1.7 Relevant contextual information</FONT></A></H2>
<DIV class=section-content>
<P>While not essential for understanding the technical topics listed in the curriculum, there is a range of contextual information that can help developers gain a well-rounded and flexible perspective.</P>
<P>Recommendations:</P>
<UL>
<LI>To understand why things are the way they are, study the relevant historical context. For example: 
<UL>
<LI>Why was the web designed like it is in terms of data delivery when arguably faster mechanisms exist? 
<LI>Why does the web use a document model with links as a central feature when these days it is largely used to build apps? 
<LI>Why are web standards created like they are, in collaboration, when the process isn't necessarily as efficient as it could be?</LI></UL>
<LI>Study general programming concepts where relevant, for example: 
<UL>
<LI>The purpose of objects, and what they enable in terms of the design of a language like JavaScript and its surrounding APIs. 
<LI>How loops work and why they are needed.
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="1238">Topic #1,238: 2. Environment setup</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
<P class=module-group>Getting started modules</P></HEADER>
<DIV class=section-content>
<P>This module includes topics related to the setup and usage of the computer system that you will use to implement websites/apps. These topics are not directly related to creating web code, but you will benefit greatly from understanding the operating system you are working with.</P>
<P class=curriculum-resources>General resources:</P>
<UL>
<LI class=curriculum-external-li><A class=external href="https://support.microsoft.com/windows" target=_blank><FONT color=#0066cc>Windows help and learning</FONT></A>, Microsoft (2024) 
<LI class=curriculum-external-li><A class=external href="https://support.apple.com/guide/mac-help/welcome/mac" target=_blank><FONT color=#0066cc>macOS User Guide</FONT></A>, Apple (2024) 
<LI class=curriculum-external-li><A class=external href="https://help.ubuntu.com/" target=_blank><FONT color=#0066cc>Official Ubuntu documentation</FONT></A>, ubuntu.com (2024)</LI></UL></DIV><SECTION aria-labelledby=2.1_computer_basics>
<H2 id=2.1_computer_basics><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/environment-setup/#2.1_computer_basics"><FONT color=#0066cc>2.1 Computer basics</FONT></A></H2>
<DIV class=section-content>
<UL>
<LI>Signing into your computer and connecting it to the internet. 
<LI>Using basic system control with keyboard, mouse, and other pointing devices. 
<LI>Installing applications.</LI></UL>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI><A href="https://developer.mozilla.org/docs/Learn/Getting_started_with_the_web/Installing_basic_software"><FONT color=#0066cc>Installing basic software</FONT></A></LI></UL></DIV></SECTION><SECTION aria-labelledby=2.2_file_systems>
<H2 id=2.2_file_systems><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/environment-setup/#2.2_file_systems"><FONT color=#0066cc>2.2 File systems</FONT></A></H2>
<DIV class=section-content>
<UL>
<LI>Basic explorer/finder usage. 
<LI>Standard folder structure. 
<LI>File naming best practices for the web &#8212; no spaces, lowercase, choosing a reasonable separator like a hyphen or underscore. 
<LI>Basic file organization best practices. 
<LI>Creating, moving, and deleting files and folders using Explorer/Finder. 
<LI>Searching for files and folders. 
<LI>Dealing with file extensions (e.g. turning off "Hide extensions for known file types" in Windows, showing dot files (<CODE>.env</CODE>, etc.)). 
<LI>Learning how file types are associated with applications.</LI></UL>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI><A href="https://developer.mozilla.org/docs/Learn/Getting_started_with_the_web/Dealing_with_files"><FONT color=#0066cc>Dealing with files</FONT></A></LI></UL></DIV></SECTION><SECTION aria-labelledby=2.3_browsing_the_web>
<H2 id=2.3_browsing_the_web><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/environment-setup/#2.3_browsing_the_web"><FONT color=#0066cc>2.3 Browsing the web</FONT></A></H2>
<DIV class=section-content>
<UL>
<LI>Available web browsers. 
<LI>Installing a web browser. 
<LI>The difference between a web browser, a website, and a search engine. 
<LI>Basic search engine usage.</LI></UL>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI><A href="https://developer.mozilla.org/docs/Learn/Common_questions/Web_mechanics/Pages_sites_servers_and_search_engines"><FONT color=#0066cc>What is the difference between web page, website, web server, and search engine?</FONT></A> 
<LI class=curriculum-external-li><A class=external href="https://www.theguardian.com/technology/2016/jan/15/how-to-use-search-like-a-pro-10-tips-and-tricks-for-google-and-beyond" target=_blank><FONT color=#0066cc>How to use search like a pro: 10 tips and tricks for Google and beyond</FONT></A>, theguardian.com (2016)</LI></UL></DIV></SECTION><SECTION aria-labelledby=2.4_command_line_basics>
<H2 id=2.4_command_line_basics><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/environment-setup/#2.4_command_line_basics"><FONT color=#0066cc>2.4 Command line basics</FONT></A></H2>
<DIV class=section-content>
<UL>
<LI>Understand what the command line is, and what you can do with it. 
<LI>Understand how to access the command line on different systems: 
<UL>
<LI>On Linux and macOS, you've generally got a built-in terminal ready to go. 
<LI>On Windows, the default command prompt is a bit more limited; you are better off installing something like <A class=external href="https://learn.microsoft.com/windows/wsl/" target=_blank><FONT color=#0066cc>Windows Subsystem for Linux (WSL)</FONT></A>, <A class=external href="https://learn.microsoft.com/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3" target=_blank><FONT color=#0066cc>PowerShell</FONT></A> or Git Bash (part of <A class=external href="https://gitforwindows.org/" target=_blank><FONT color=#0066cc>Git for Windows</FONT></A>) if you want the same commands and power available to macOS/Linux.</LI></UL>
<LI>Shortcuts (e.g. up arrow to access previous commands, tab for autocomplete). 
<LI>Basic commands (e.g. <CODE>cd</CODE>, <CODE>ls</CODE>, <CODE>mkdir</CODE>, <CODE>touch</CODE>, <CODE>grep</CODE>, <CODE>cat</CODE>, <CODE>mv</CODE>, <CODE>cp</CODE>). 
<LI>Command options/flags.</LI></UL>
<P class=curriculum-resources>Resources:</P>
<UL>
<LI><A href="https://developer.mozilla.org/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line"><FONT color=#0066cc>Command line crash course</FONT></A> 
<LI class=curriculum-external-li>Stack Overflow is a good place to find specific solutions to command line problems, for example <A class=external href="https://stackoverflow.com/questions/24102974/how-to-batch-rename-files-in-a-macos-terminal" target=_blank><FONT color=#0066cc>How to Batch Rename Files in a macOS Terminal?</FONT></A></LI></UL>
<BLOCKQUOTE class=curriculum-notes>
<P><STRONG>Notes</STRONG>:</P>
<P>The command line / terminal is intimidating to newcomers &#8212; you just get a blinking cursor, with no obvious signs of what to do next. We are not saying that you should be a command line wizard before you start learning web development, but you should at least understand what it is and know some basics &#8212; you will be surprised how often you come across command line usage in web development tooling.</P></BLOCKQUOTE></DIV></SECTION><SECTION aria-labelledby=2.5_code_editors>
<H2 id=2.5_code_editors><A href="https://developer.mozilla.org/en-US/curriculum/getting-started/environment-setup/#2.5_code_editors"><FONT color=#0066cc>2.5 Code editors</FONT></A></H2>
<DIV class=section-content>
<UL>
<LI>Learn what code editors are available and what is suitable for your purposes: 
<UL>
<LI>Binary file editors like Microsoft Word are unsuitable for editing code. You need something that cleanly handles and outputs plain text. 
<LI>Default OS plain text editors can be OK, for example, TextEdit on macOS, or Notepad on Windows, but they also have limitations. 
<LI>You are better off with a fully-fledged code editor like <A class=external href="https://code.visualstudio.com/" target=_blank><FONT color=#0066cc>VSCode</FONT></A> (multiplatform, free), <A class=external href="https://www.sublimetext.com/" target=_blank><FONT color=#0066cc>Sublime Text</FONT></A> (multiplatform, not free) or <A class=external href="https://notepad-plus-plus.org/" target=_blank><FONT color=#0066cc>Notepad++</FONT></A> (Windows, free). 
<LI>Integrated Development Environments (IDEs) such as <A class=external href="https://visualstudio.microsoft.com/" target=_blank><FONT color=#0066cc>Visual Studio</FONT></A> (Windows, not free), <A class=external href="https://netbeans.apache.org/" target=_blank><FONT color=#0066cc>NetBeans</FONT></A> (multiplatform, free), and <A class=external href="https://www.jetbrains.com/webstorm/" target=_blank><FONT color=#0066cc>WebStorm</FONT></A> (multiplatform, not free) tend to have more features than simple code editors but tend to be more complex than what you need at this stage in your learning journey.</LI></UL>
<LI>Learn what a basic code editor can do for you: 
<UL>
<LI>Open and edit code files. 
<LI>Syntax highlighting. 
<LI>Auto-indentation and other simple syntax fixes. 
<LI>Code completion and help. 
<LI>Find and replace, often with the ability to use regular expressions to make the functionality more powerful (e.g. keep a specific string beginning and end, but replace the substring in between). 
<LI>Integration with version control is often provided (see also <A href="https://developer.mozilla.org/en-US/curriculum/core/version-control/"><FONT color=#0066cc>Version control</FONT></A>)</LI></UL>
<LI>Customize and enhance your code editor with extensions: 
<UL>
<LI>Language-specific extensions such as code completion, highlighting, linting, and debugging. This can apply to specific languages such as JavaScript, Python, or Go, or language/framework abstractions such as <A class=external href="https://www.typescriptlang.org/" target=_blank><FONT color=#0066cc>TypeScript</FONT></A> or <A class=external href="https://react.dev/learn/writing-markup-with-jsx" target=_blank><FONT color=#0066cc>JSX</FONT></A>. 
<LI>GitHub/version control extensions, if not provided by default. 
<LI>Theme and color scheme extensions. 
<LI>Productivity extensions like code snippets and scaffolding generators. 
<LI>AI-powered code suggestion tools such as GitHub Copilot. Be aware that, while useful, AI tools have no reasoning skill, and frequently provide answers that are misleading or just plain wrong. You shouldn't just assume that AI answers are correct, and test them/verify them with other sources.
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: User of SuperMemo</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 10/3/2024 10:20:39 AM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
