<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Learn Enough Ruby to Be Dangerous: Write Programs, Publish Gems, and Develop Sinatra Web Apps with Ruby</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="9780137844111.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><section epub:type="chapter">
<h2 class="h2" id="ch10"><span epub:type="pagebreak" id="page_261"></span>Chapter 10</h2>
<h2 class="h2a">A Live Web Application</h2>
<p class="noindent">In this final chapter, we reach the culmination of this Ruby tutorial: a dynamic web application. Our app will put the custom Ruby gem developed in <a href="ch08.xhtml#ch08">Chapter 8</a> to good use through the development of a web-based <em>palindrome detector</em>. Along the way, we’ll learn how to create dynamic content using <em>embedded Ruby</em> (ERB).</p>
<p class="indent">Detecting palindromes from the Web requires using a back-end web application to handle <em>form submission</em>, and our tool of choice is <em>Sinatra</em>, the micro-framework we met in <a href="ch01.xhtml#sec1_5">Section 1.5</a> and applied further in <a href="ch05.xhtml#sec5_2">Section 5.2</a>. Although simple, Sinatra is not a toy—it’s a production-ready web framework used by <a href="http://sinatrarb.com/wild.html#biz">companies</a> like <a href="https://stripe.com/">Stripe</a>, <a href="https://www.apple.com/">Apple</a>, and <a href="https://www.disney.com/">Disney</a>.<sup><a id="fn10_1" href="ch10.xhtml#fn10_1a">1</a></sup></p>
<p class="footnote"><sup><a id="fn10_1a" href="ch10.xhtml#fn10_1">1</a></sup> As of a few years ago, when I talked with a friend working at <a href="https://en.wikipedia.org/wiki/Walt_Disney_Imagineering">Walt Disney Imagineering</a>, <a href="https://www.disney.com/">disney.com</a> itself was a Sinatra app, while most of the Disney sub-properties were built using Ruby on Rails.</p>
<p class="indent">Our palindrome app will also feature two other pages—Home and About— which will give us an opportunity to learn how to use a Ruby-based site layout. As part of this, we’ll apply and extend the work in <a href="ch08.xhtml#ch08">Chapter 8</a> to write automated tests for our app.</p>
<p class="indent">Finally, as in <a href="ch01.xhtml#sec1_5">Section 1.5</a>, our final step will be to deploy our palindrome app to the live Web. We’ll end with pointers to further resources for Ruby, Sinatra, and other topics like JavaScript and Ruby on Rails.</p>
<section>
<h3 class="h3" id="sec10_1"><span epub:type="pagebreak" id="page_262"></span>10.1 Setup</h3>
<p class="noindent">Our first step is to set up our app as a proof-of-concept and deploy it to production. We’ll start by making a directory for it:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0262-01" id="f0262-01a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <span class="green1"><strong>cd</strong></span> <strong>~/repos</strong>              <span class="blue1"><strong><em># cd ~/environments/repos on the cloud IDE</em></strong></span>
<span class="blue"><strong>$</strong></span> <strong>mkdir palindrome_app</strong>
<span class="blue"><strong>$</strong></span> <span class="green1"><strong>cd</strong></span> <strong>palindrome_app/</strong></pre>
</div>
<p class="indent">The app itself will live in the file <code><span class="green"><strong>app.rb</strong></span></code>, and we’ll also need a <code><span class="green"><strong>Gemfile</strong></span></code>:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>touch app.rb Gemfile</strong></pre>
</div>
<p class="noindent">In addition to the <code>sinatra</code> and <code>puma</code> gems, we’ll also include <code>rerun</code>, which will let us see changes to the app without quitting and restarting the local server, as shown in <a href="ch10.xhtml#ch10ex01">Listing 10.1</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex01"><strong>Listing 10.1:</strong> Defining the gems for our app.<br/><code><em>Gemfile</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0262-02" id="f0262-02a">Click here to view code image</a></p>
<pre><strong>source</strong> <span class="brown1"><strong>'https://rubygems.org'</strong></span>

<strong>ruby</strong> <span class="brown1"><strong>'3.1.1'</strong></span>   <span class="blue1"><strong><em># Change this line if you're using a different Ruby version.</em></strong></span>

<strong>gem</strong>  <span class="brown1"><strong>'sinatra'</strong></span><strong>,</strong> <span class="brown1"><strong>'2.2.0'</strong></span>
<strong>gem</strong>  <span class="brown1"><strong>'puma'</strong></span><strong>,</strong>    <span class="brown1"><strong>'5.6.4'</strong></span>
<strong>gem</strong>  <span class="brown1"><strong>'rerun'</strong></span><strong>,</strong>   <span class="brown1"><strong>'0.13.1'</strong></span></pre>
</div>
<p class="noindent">We can then install the gems using <code><span class="green"><strong>bundle install</strong></span></code>:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>bundle _2.3.10_ install</strong></pre>
</div>
<p class="indent">To get started with the app itself, let’s write “hello, world!”, as shown in <a href="ch10.xhtml#ch10ex02">Listing 10.2</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex02"><span epub:type="pagebreak" id="page_263"></span><strong>Listing 10.2:</strong> Getting to “hello”<br/><code><em>app.rb</em></code></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>

<strong>get</strong>  <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="brown1"><strong>'hello, world!'</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="indent">To run the app, I recommend opening a new terminal tab and then using the <code><span class="green"><strong>rerun</strong></span></code> command, as shown in <a href="ch10.xhtml#ch10ex03">Listing 10.3</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex03"><strong>Listing 10.3:</strong> Using <code><span class="green"><strong>rerun</strong></span></code> to run a Sinatra app.</p>
<p class="codelink"><a href="ch10_images.xhtml#f0263-01" id="f0263-01a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rerun app.rb</strong>

<span class="green1"><strong>12:10:10 [rerun] Palindrome_app launched</strong></span>
<span class="green1"><strong>12:10:10 [rerun] Rerun (79556) running Palindrome_app (79575)</strong></span>
<span class="green1"><strong>== Sinatra has taken the stage on 4567 for development</strong></span>
<span class="bg-o"><span class="green1"><strong>Listening on localhost:4567, CTRL+C to stop</strong></span></span></pre>
</div>
<p class="noindent">As with running a Sinatra app using <code><span class="green"><strong>ruby</strong></span></code> (e.g., <a href="ch01.xhtml#ch01ex09">Listing 1.9</a>), <a href="ch10.xhtml#ch10ex03">Listing 10.3</a> runs the app on a local port, where the exact number can be read in the log output. The exact results may be system-dependent, but on my system the log says something like “Sinatra has taken the stage on 4567” (the highlighted line in <a href="ch10.xhtml#ch10ex03">Listing 10.3</a>), meaning that the site can be accessed at localhost:4567. The result appears in <a href="ch10.xhtml#ch10fig01">Figure 10.1</a>.</p>
<figure class="figure" id="ch10fig01">
<img src="graphics/f0264-01.jpg" alt="Images" width="879" height="682"/>
<figcaption>
<p class="title-f">Figure 10.1: Our initial app running with <code><span class="green"><strong>rerun</strong></span></code>.</p>
</figcaption>
</figure>
<p class="indent">Now let’s see what happens if we make a change to our app, as shown in <a href="ch10.xhtml#ch10ex04">Listing 10.4</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex04"><strong>Listing 10.4:</strong> Time to say “goodbye”.<br/><em>app.rb</em></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>

<strong>get</strong>  <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="brown1"><strong>'goodbye, world!'</strong></span>
<span class="green1"><strong>end</strong></span><span epub:type="pagebreak" id="page_264"></span></pre>
</div>
<p class="noindent"><span epub:type="pagebreak" id="page_265"></span>In <a href="ch05.xhtml#sec5_2">Section 5.2</a>, we had to quit and restart the server in order to see changes to the app, but thanks to the <code><span class="green"><strong>rerun</strong></span></code> in <a href="ch10.xhtml#ch10ex03">Listing 10.3</a>, the app is updated automatically (though we still do have to refresh the browser by hand). The result should look something like <a href="ch10.xhtml#ch10fig02">Figure 10.2</a>.</p>
<figure class="figure" id="ch10fig02">
<img src="graphics/f0265-01.jpg" alt="Images" width="879" height="682"/>
<figcaption>
<p class="title-f">Figure 10.2: An auto-updated Sinatra app.</p>
</figcaption>
</figure>
<p class="indent">Finally, following our practice to deploy early and often, we’ll put our project under version control with Git in preparation for deploying to Heroku:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0265-02" id="f0265-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>git init</strong>
<span class="blue"><strong>$</strong></span> <strong>git add -A</strong>
<span class="blue"><strong>$</strong></span> <strong>git commit -m</strong> <span class="brown1"><strong>"Initialize repository"</strong></span></pre>
</div>
<p class="indent"><span epub:type="pagebreak" id="page_266"></span>As in <a href="ch01.xhtml#sec1_5_1">Section 1.5.1</a>, we need to add a configuration file for Heroku’s sake:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>touch config.ru</strong></pre>
</div>
<p class="noindent">The contents are shown in <a href="ch10.xhtml#ch10ex05">Listing 10.5</a> (which apart from the app name is identical to <a href="ch01.xhtml#ch01ex012">Listing 1.12</a>).</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex05"><strong>Listing 10.5:</strong> The configuration file for production deployment.<br/><code><em>palindrome_app/config.ru</em></code></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'./app'</strong></span>
<strong>run</strong> <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span></pre>
</div>
<p class="indent">At this point, we’re ready to deploy (the first line may or may not be necessary, but it does no harm to include it):</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0266-02" id="f0266-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle _2.3.10_ lock --add-platform x86_64-linux</strong>
<span class="blue"><strong>$</strong></span> <strong>git add -A</strong>
<span class="blue"><strong>$</strong></span> <strong>git commit -m</strong>  <span class="brown1"><strong>"Add a config file"</strong></span>
<span class="blue"><strong>$</strong></span> <strong>heroku create</strong>
<span class="blue"><strong>$</strong></span> <strong>git push heroku main</strong></pre>
</div>
<p class="noindent">The result is a working app in production, as seen in <a href="ch10.xhtml#ch10fig03">Figure 10.3</a>.</p>
<figure class="figure" id="ch10fig03">
<img src="graphics/f0267-01.jpg" alt="Images" width="879" height="681"/>
<figcaption>
<p class="title-f">Figure 10.3: Our initial app in production.</p>
</figcaption>
</figure>
<section>
<h4 class="h4" id="sec10_1_1">10.1.1 Exercises</h4>
<ol class="num">
<li><p class="num">Change the app back to read “hello, world!”, and deploy the update to production. <em>Note</em>: The second time you deploy, you can leave off <code><span class="green"><strong>main</strong></span></code>, and just type <code><span class="green"><strong>git push heroku</strong></span></code>.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec10_2">10.2 Site Pages</h3>
<p class="noindent">We’ll start by making three pages for our site: Home, About, and Palindrome Detector. In contrast to our previous Sinatra apps, which have operated by simply returning strings in response to <code>GET</code> requests, for our full app we’ll use a more powerful technique known as <em>views</em>, which consist of code that gets converted to HTML and sent to the browser.<span epub:type="pagebreak" id="page_267"></span></p>
<p class="indent"><span epub:type="pagebreak" id="page_268"></span>Initially, these views will actually just be static HTML, but we’ll see starting in <a href="ch10.xhtml#sec10_4">Section 10.4</a> how to use them to generate HTML dynamically. The key to Sinatra views is the <code><span class="green"><strong>erb</strong></span></code> function, which stands for “embedded Ruby” (itself often abbreviated as ERB). The argument to <em>erb</em> is a Ruby symbol (<a href="ch04.xhtml#sec4_4_1">Section 4.4.1</a>) with the name of the view. For example to render the index page on the root url /, we can write</p>
<div class="sidebar">
<pre><strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:index</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">This code causes Sinatra to look for a file called <code><span class="green"><strong>index.erb</strong></span></code> in the <code><span class="green"><strong>views</strong></span></code> directory. (The <code><span class="green"><strong>.erb</strong></span></code> extension indicates that the file is to be processed with the <code><span class="green"><strong>erb</strong></span></code> function.)</p>
<p class="indent">Because the code for all three views is basically the same, we’ll add them all at the same time, as shown in <a href="ch10.xhtml#ch10ex06">Listing 10.6</a>. The main difference is, in place of the root URL /, the other two pages define named URLs: /about and /palindrome, respectively.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex06"><strong>Listing 10.6:</strong> Rendering three views.<br/><code><em>app.rb</em></code></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:index</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/about'</strong></span> <span class="green1"><strong>do</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:about</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span> <span class="green1"><strong>do</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:palindrome</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent"><span epub:type="pagebreak" id="page_269"></span>The file in <a href="ch10.xhtml#ch10ex06">Listing 10.6</a> is in effect a <em>controller</em>, which coordinates between different parts of the application, defines the URLs (or <em>routes</em>) supported by the app, responds to requests, etc. Together, the views and controllers are two-thirds of the <a href="https://www.railstutorial.org/book/beginning#sec-mvc"><em>Model-View-Controller</em> architecture</a> for developing web applications, also known as <em>MVC</em>. (We won’t get to the Model part of MVC in this tutorial, but the <em><a href="https://www.railstutorial.org/">Ruby on Rails Tutorial</a></em> discusses all three parts of MVC in depth.)</p>
<p class="indent">To get the three view renderings in <a href="ch10.xhtml#ch10ex06">Listing 10.6</a> to work, we have to create the three view files themselves:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0269-01" id="f0269-01a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>mkdir views</strong>
<span class="blue"><strong>$</strong></span> <span class="green1"><strong>cd</strong></span> <strong>views</strong>
<span class="blue"><strong>$</strong></span> <strong>touch index.erb about.erb palindrome.erb</strong>
<span class="blue"><strong>$</strong></span> <span class="green1"><strong>cd</strong></span> <strong>..</strong></pre>
</div>
<p class="noindent">We then fill the three ERB files with HTML; this is straightforward but tedious, so I suggest you copy and paste from <a href="ch10.xhtml#ch10ex07">Listing 10.7</a>, <a href="ch10.xhtml#ch10ex08">Listing 10.8</a>, and <a href="ch10.xhtml#ch10ex09">Listing 10.9</a>. (The indentation of the material inside the <code><span class="green"><strong>body</strong></span></code> tags is at the wrong depth, but we’ll see in <a href="ch10.xhtml#sec10_3">Section 10.3</a> why this is.)</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex07"><strong>Listing 10.7:</strong> The initial Home (index) view.<br/><code><em>views/index.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0269-02" id="f0269-02a">Click here to view code image</a></p>

<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Sample Sinatra App&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<span epub:type="pagebreak" id="page_270"></span><strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>This is the sample Sinatra app for
  &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.learnenough.com/ruby-tutorial"</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby
  to Be Dangerous&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;. Learn more on the</strong> <span class="green1"><strong>&lt;a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/about"</strong></span><strong>&gt;About&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt; page.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>Click the</strong> <span class="green1"><strong>&lt;a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://en.wikipedia.org/wiki/Sator_Square"</strong></span><strong>&gt;Sator
  Square&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt; below to run the custom</strong> <span class="green1"><strong>&lt;a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/palindrome"</strong></span><strong>&gt;Palindrome
  Detector&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"sator-square"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/palindrome"</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/sator_square.jpg"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Sator Square"</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;</strong>
      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex08"><strong>Listing 10.8:</strong> The initial About view.<br/><em>views/about.<code>erb</code></em></p>
<p class="codelink"><a href="ch10_images.xhtml#f0270-02" id="f0270-02a">Click here to view code image</a></p>

<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;About&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>This site is the final application in
  &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.learnenough.com/ruby-tutorial"</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby
  to Be Dangerous&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
  by</strong> <span class="green1"><strong>&lt;a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.michaelhartl.com/"</strong></span><strong>&gt;Michael Hartl&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;,
  a tutorial introduction to the
  &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.ruby-lang.org/en/"</strong></span><strong>&gt;Ruby programming language&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt; that
  is part of</strong>
<span epub:type="pagebreak" id="page_271"></span>  <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.learnenough.com/"</strong></span><strong>&gt;LearnEnough.com&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby to Be Dangerous&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; is a natural prerequisite to
  the</strong> <span class="green1"><strong>&lt;a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.railstutorial.org/"</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Ruby on Rails
  Tutorial&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;, a book and video series that is one of the leading
  introductions to web development. &lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; is also an
  excellent choice &lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;after&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; the &lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Rails Tutorial&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; for those who
  prefer to start with the latter first.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex09"><strong>Listing 10.9:</strong> The initial Palindrome Detector view.<br/><em>views/palindrome.<code>erb</code></em></p>
<p class="codelink"><a href="ch10_images.xhtml#f0271-02" id="f0271-02a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Detector&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;This will be the palindrome detector.&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<p class="indent">Visiting localhost:4567 or the equivalent causes Sinatra to serve up the default (index) page, as shown in <a href="ch10.xhtml#ch10fig04">Figure 10.4</a>. To get to the About page, we can <span epub:type="pagebreak" id="page_272"></span>type <a href="http://localhost:4567/about">localhost:4567/about</a> into the browser address bar, as seen in <a href="ch10.xhtml#ch10fig05">Figure 10.5</a>.</p>
<figure class="figure" id="ch10fig04">
<img src="graphics/f0272-01.jpg" alt="Images" width="879" height="682"/>
<figcaption>
<p class="title-f">Figure 10.4: The initial Home page.</p>
</figcaption>
</figure>
<figure class="figure" id="ch10fig05">
<img src="graphics/f0273-01.jpg" alt="Images" width="879" height="712"/>
<figcaption>
<p class="title-f">Figure 10.5: The initial About page.</p>
</figcaption>
</figure>
<p class="indent"><a href="ch10.xhtml#ch10fig04">Figure 10.4</a> and <a href="ch10.xhtml#ch10fig05">Figure 10.5</a> show that the pages are basically working, but <a href="ch10.xhtml#ch10ex07">Listing 10.7</a> and subsequent listings include both images and a CSS file, which aren’t currently present on the local system. We can change this situation by downloading the needed files from the Learn Enough CDN and putting them in the <code><span class="green"><strong>public</strong></span></code> directory, which is where Sinatra looks for them by default.</p>
<p class="indent">The way to do this is to use <code><span class="green"><strong>curl</strong></span></code> to fetch a <em><a href="https://en.wikipedia.org/wiki/Tar_(computing)">tarball</a></em>, which is similar to a <a href="https://en.wikipedia.org/wiki/Zip_(file_format)">ZIP file</a> and is common on Unix-compatible systems:<span epub:type="pagebreak" id="page_273"></span></p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0274-01" id="f0274-01a">Click here to view code image</a></p>
<pre><span epub:type="pagebreak" id="page_274"></span><span class="blue"><strong>$</strong></span> <strong>curl -OL https://cdn.learnenough.com/le_ruby_palindrome_public.tar.gz</strong></pre>
</div>
<p class="noindent">This kind of file is created by <code><span class="green"><strong>tar</strong></span></code>, or “tape archive”, whose name is an old-school throwback to the time when external tapes were routinely used for large backups. Meanwhile, the <code><span class="green"><strong>gz</strong></span></code> extension refers to the important <em><a href="https://en.wikipedia.org/wiki/Gzip">gzip</a></em> method for compressing files.</p>
<p class="indent">The way to unzip the file is to use <code><span class="green"><strong>tar zxvf</strong></span></code>, which stands for “<strong>t</strong>ape <strong>ar</strong>chive g<strong>z</strong>ip e<strong>x</strong>tract <strong>v</strong>erbose <strong>f</strong>ile”:<sup><a id="fn10_2" href="ch10.xhtml#fn10_2a">2</a></sup></p>
<p class="footnote"><sup><a id="fn10_2a" href="ch10.xhtml#fn10_2">2</a></sup>I created this tarball using the command <code><span class="green"><strong>tar zcf &lt;filename&gt;.tar.gz</strong></span></code>, where <code><span class="green"><strong>c</strong></span></code> stands for <strong><span class="green">c</span></strong> reate.</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0274-02" id="f0274-02a">Click here to view code image</a></p>
<pre><span class="bg-o"><span class="blue"><strong>$</strong></span> <strong>tar zxvf le_ruby_palindrome_public.tar.gz</strong></span>
<span class="green"><strong>x public/
x public/images/
x public/stylesheets/
x public/stylesheets/main.css
x public/images/sator_square.jpg
x public/images/logo_b.png</strong></span>
<span class="bg-o"><span class="blue"><strong>$</strong></span> <strong>rm -f le_ruby_palindrome_public.tar.gz</strong></span></pre>
</div>
<p class="noindent">With experience, you may prefer to omit the <code><span class="green"><strong>v</strong></span></code> flag, but initially I suggest using verbose output so that you can see what’s going on during the extraction process. By the way, note that <code><span class="green"><strong>tar</strong></span></code> flags are just letters by themselves, with no preceding hyphens as in most other Unix commands. On many systems, you can in fact use hyphens, as in <code><span class="green"><strong>tar -z -x -v -f &lt;filename&gt;</strong></span></code>, but for reasons unknown to me the usual convention with <code><span class="green"><strong>tar</strong></span></code> is to omit them.</p>
<p class="indent">As seen from the verbose output above, unzipping the file has created a <code><span class="green"><strong>public</strong></span></code> directory:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>ls public/</strong>
<span class="green"><strong>images      stylesheets</strong></span></pre>
</div>
<p class="noindent">Refreshing the About page confirms that the logo image and CSS are now working (<a href="ch10.xhtml#ch10fig06">Figure 10.6</a>). The improvement on the Home page is even more dramatic, as seen in <a href="ch10.xhtml#ch10fig07">Figure 10.7</a>.<span epub:type="pagebreak" id="page_275"></span></p>
<figure class="figure" id="ch10fig06">
<img src="graphics/f0275-01.jpg" alt="Images" width="878" height="712"/>
<figcaption>
<p class="title-f">Figure 10.6: A nicer-looking About page.</p>
</figcaption>
</figure>
<span epub:type="pagebreak" id="page_276"></span>
<figure class="figure" id="ch10fig07">
<img src="graphics/f0276-01.jpg" alt="Images" width="879" height="682"/>
<figcaption>
<p class="title-f">Figure 10.7: A much-improved Home page.</p>
</figcaption>
</figure>
<section>
<h4 class="h4" id="sec10_2_1"><span epub:type="pagebreak" id="page_277"></span>10.2.1 Exercises</h4>
<ol class="num">
<li><p class="num">Visit the /palindrome URL and confirm that the CSS and images are working.</p></li>
<li><p class="num">Make a commit and deploy the changes.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec10_3">10.3 Layouts</h3>
<p class="noindent">At this point, our app is looking pretty good, but there are two significant blemishes: The HTML code for the three pages is highly repetitive, and navigating by hand from page to page is rather cumbersome. We’ll fix the first blemish in this section, and the second in <a href="ch10.xhtml#sec10_4">Section 10.4</a>. (And of course our app doesn’t yet detect palindromes, which is the subject of <a href="ch10.xhtml#sec10_5">Section 10.5</a>.)</p>
<p class="indent">If you followed <em><a href="https://www.learnenough.com/css-and-layout">Learn Enough CSS &amp; Layout to Be Dangerous</a></em>, you’ll know that the <em>Layout</em> in the title referred to page layout generally—using Cascading Style Sheets to move elements around on the page, align them properly, etc.— but we also <a href="https://www.learnenough.com/r/learn_enough_css/struct-layout#cha-struct-layout">saw</a> that doing this properly requires defining <em>layout templates</em> that capture common patterns and eliminate duplication.</p>
<p class="indent">In the present case, each of our site’s pages has the same basic structure, as shown in <a href="ch10.xhtml#ch10ex010">Listing 10.10</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex010"><strong>Listing 10.10:</strong> The HTML structure of our site’s pages.</p>
<p class="codelink"><a href="ch10_images.xhtml#f0277-01" id="f0277-01a">Click here to view code image</a></p>

<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>clas</strong></span><span class="gray"><strong>s</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>
<span epub:type="pagebreak" id="page_278"></span>
<span class="bg-o">        <span class="blue1"><strong><em>&lt;!-- page-specific content --&gt;</em></strong></span></span>
      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">Everything except the page-specific content (indicated by the highlighted HTML comment) is the same on each page. In <em><a href="https://www.learnenough.com/css-and-layout">Learn Enough CSS &amp; Layout to Be Dangerous</a></em>, we eliminated this duplication using <a href="https://www.learnenough.com/r/learn_enough_css/struct-layout/jekyll-templates#sec-jekyll-templates">Jekyll templates</a>; in this tutorial, we’ll use <em>Sinatra layouts</em> instead.</p>
<p class="indent">Now, our site is currently working, in the sense that each page has the proper content at this stage of development. We’re about to make a change that involves moving around and deleting a bunch of HTML, and we’d like to do this without breaking the site. Does that sound like something we’ve seen before?</p>
<p class="indent">It does indeed. This is exactly the kind of problem we faced in <a href="ch08.xhtml#ch08">Chapter 8</a> when we developed and then refactored the palindrome gem. In that case, we wrote automated tests to catch any regressions, and in this case we’re going to do the same. (I started making websites long before automated testing of web applications was possible, much less the norm, and believe me, automated tests are a <em>huge</em> improvement over testing web apps by hand.)</p>
<p class="indent">To get started, we’ll add some more gems to our <code><span class="green"><strong>Gemfile</strong></span></code>, this time in a <em>group</em> called <code><span class="green"><strong>:test</strong></span></code> that indicates gems that are needed only for tests. The result appears in <a href="ch10.xhtml#ch10ex011">Listing 10.11</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex011"><strong>Listing 10.11:</strong> Adding gems for testing.<br/><code><em>Gemfile</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0278-02" id="f0278-02a">Click here to view code image</a></p>

<pre><strong>source</strong> <span class="brown1"><strong>'https://rubygems.org'</strong></span>

<strong>ruby</strong> <span class="brown1"><strong>'3.1.1'</strong></span>   <span class="blue1"><strong><em># Change this line if you're using a different Ruby version.</em></strong></span>

<strong>gem</strong> <span class="brown1"><strong>'sinatra'</strong></span><strong>,</strong> <span class="brown1"><strong>'2.2.0'</strong></span>
<strong>gem</strong> <span class="brown1"><strong>'puma'</strong></span><strong>,</strong>    <span class="brown1"><strong>'5.6.4'</strong></span>
<strong>gem</strong> <span class="brown1"><strong>'rerun'</strong></span><strong>,</strong>   <span class="brown1"><strong>'0.13.1'</strong></span>

<strong>group</strong> <span class="blue"><strong>:test</strong></span> <span class="green1"><strong>do</strong></span>
   <strong>gem</strong> <span class="brown1"><strong>'minitest'</strong></span><strong>,</strong>             <span class="brown1"><strong>'5.15.0'</strong></span>
   <strong>gem</strong> <span class="brown1"><strong>'minitest-reporters'</strong></span><strong>,</strong>   <span class="brown1"><strong>'1.5.0'</strong></span>
   <strong>gem</strong> <span class="brown1"><strong>'rack-test'</strong></span><strong>,</strong>            <span class="brown1"><strong>'1.1.0'</strong></span>
<span epub:type="pagebreak" id="page_279"></span>
   <strong>gem</strong> <span class="brown1"><strong>'rake'</strong></span><strong>,</strong>                 <span class="brown1"><strong>'13.0.6'</strong></span>
   <strong>gem</strong> <span class="brown1"><strong>'nokogiri'</strong></span><strong>,</strong>             <span class="brown1"><strong>'1.13.3'</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">We then install the gems as usual:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span>  <strong>bundle _2.3.10_ install</strong></pre>
</div>
<p class="noindent">If you encounter an error while installing <code>nokogiri</code> (which is unfortunately common), you’ll have to apply your technical sophistication (<a href="ch01.xhtml#box1_1">Box 1.1</a>) to resolve the issue; I especially recommend the “Google the error message” algorithm for this case.</p>
<p class="indent">We’ll factor out common elements needed in all tests into a test helper file, while also creating a file for our initial site pages tests:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0279-02" id="f0279-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>mkdir</strong> <span class="green1"><strong>test</strong></span>
<span class="blue"><strong>$</strong></span> <strong>touch test/test_helper.rb test/site_pages_test.rb</strong></pre>
</div>
<p class="noindent">The test helper requires all the necessary gems, and also includes the app itself using <code><span class="green"><strong>require_relative</strong></span></code>, which requires files relative to the current directory. The result appears in <a href="ch10.xhtml#ch10ex012">Listing 10.12</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex012"><strong>Listing 10.12:</strong> The initial test helper.<br/><code><em>test/test_helper.rb</em></code></p>
<pre><span class="brown"><strong>ENV</strong></span><span class="gray"><strong>[</strong></span><span class="brown1"><strong>'RACK_ENV'</strong></span><span class="gray"><strong>] =</strong></span> <span class="brown1"><strong>'test'</strong></span>

<strong>require_relative</strong> <span class="brown1"><strong>'../app'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'rack/test'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'nokogiri'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'minitest/autorun'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'minitest/reporters'</strong></span>
<span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Reporters</strong></span><span class="gray"><strong>.</strong></span><strong>use!</strong></pre>
</div>
<p class="indent">We then need to create a <code><span class="green"><strong>Rakefile</strong></span></code> to tell the <code><span class="green"><strong>rake</strong></span></code> utility how to run the tests:</p>
<div class="sidebar">
<pre><span epub:type="pagebreak" id="page_280"></span><span class="blue"><strong>$</strong></span> <strong>touch Rakefile</strong></pre>
</div>
<p class="noindent">The contents are shown in <a href="ch10.xhtml#ch10ex013">Listing 10.13</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex013"><strong>Listing 10.13:</strong> Configuring <code><span class="green"><strong>rake</strong></span></code> to run tests.<br/><code><em>Rakefile</em></code></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'rake/testtask'</strong></span>

<span class="brown"><strong>Rake</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>TestTask</strong></span><span class="gray"><strong>.</strong></span><strong>new</strong> <span class="green1"><strong>do</strong></span> <span class="gray"><strong>|</strong></span><strong>t</strong><span class="gray"><strong>|</strong></span>
  <strong>t</strong><span class="gray"><strong>.</strong></span><strong>pattern</strong> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'test/*_test.rb'</strong></span>
  <strong>t</strong><span class="gray"><strong>.</strong></span><strong>warning</strong> <span class="gray"><strong>=</strong></span> <span class="green1"><strong>false</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>task</strong> <span class="blue"><strong>:default</strong></span> <span class="gray"><strong>=&gt; [</strong></span><span class="blue"><strong>:test</strong></span><span class="gray"><strong>]</strong></span></pre>
</div>
<p class="indent">We’ll put the result of <a href="ch10.xhtml#ch10ex013">Listing 10.13</a> to good use in a moment, but first we need to write some tests. We’ll start with super-basic tests so that the app serves up <em>something</em>, as indicated by the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status">HTTP response code</a> <code>200 (OK)</code>, which we can do like this:</p>
<div class="sidebar">
<pre><span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
  <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
  <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?</strong>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">Here we use the <code><span class="green"><strong>get</strong></span></code> command in the test to issue a <code>GET</code> request to the root URL /, which automatically creates an object called <code><span class="green"><strong>last_response</strong></span></code> as a side effect. We can then use a minitest assertion (<a href="ch08.xhtml#sec8_2">Section 8.2</a>) using the boolean method <code><span class="green"><strong>ok?</strong></span></code>, which is also available automatically. The result is a test that makes sure the server responded properly to the request.</p>
<p class="indent">Applying the above discussion to the About and Palindrome Detector pages as well, and combining them with configuration code pulled right from the <a href="http://sinatrarb.com/testing.html">official Sinatra documentation on tests</a>, we arrive at our initial test suite, shown in <a href="ch10.xhtml#ch10ex014">Listing 10.14</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex014"><span epub:type="pagebreak" id="page_281"></span><strong>Listing 10.14:</strong> Our initial test suite. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>test/site_pages_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0281-01" id="f0281-01a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
    <strong>assert last_response<span class="gray"><strong>.</strong></span>ok?</strong>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_about</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/about'</strong></span>
    <strong>assert last_response<span class="gray"><strong>.</strong></span>ok?</strong>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?</strong>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
<p class="indent">With the setup in <a href="ch10.xhtml#ch10ex013">Listing 10.13</a>, we can use <code><span class="green"><strong>rake</strong></span></code> to execute the test suite as follows:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex015"><strong>Listing 10.15:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0281-02" id="f0281-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 3 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="noindent">Also note that <a href="ch10.xhtml#ch10ex013">Listing 10.13</a> has followed the common Ruby convention of making running the test suite the default (an indication of how important tests are in the Ruby community), so we can actually just run <code><span class="green"><strong>rake</strong></span></code> by itself:<sup><a id="fn10_3" href="ch10.xhtml#fn10_3a">3</a></sup></p>
<p class="footnote"><sup><a id="fn10_3a" href="ch10.xhtml#fn10_3">3</a></sup>If you set up the <code><span class="green"><strong>bundle exec</strong></span></code> alias suggested in <a href="ch08.xhtml#sec8_1">Section 8.1</a>, you can thus run the compact command <code><strong><span class="green">be rake</span></strong></code> to execute the full test suite.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex016"><span epub:type="pagebreak" id="page_282"></span><strong>Listing 10.16:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0282-01" id="f0282-01a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong>
<span class="green"><strong>3 tests, 3 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="noindent">We’ll continue to use <code><span class="green"><strong>rake test</strong></span></code> for clarity, but it’s good to know about this alternative convention.</p>
<p class="indent">The tests in <a href="ch10.xhtml#ch10ex014">Listing 10.14</a> are a fine start, but they really only check if the pages are there at all. It would be nice to have a slightly more stringent test of the HTML content, though not <em>too</em> stringent—we don’t want our tests to make it hard to make changes in the future. As a middle ground, we’ll check that each page in the site has an <code><span class="green"><strong>h1</strong></span></code> tag somewhere in the document.</p>
<p class="indent">In order to do this, we’ll write a short function in <code><span class="green"><strong>test_helper.rb</strong></span></code> to return a <code><span class="green"><strong>doc</strong></span></code> object, akin to the <code><span class="green"><strong>document</strong></span></code> <a href="https://www.learnenough.com/r/learn_enough_javascript/dom_manipulation/event_listeners#sec-event_listeners">object</a> in JavaScript. We actually already know pretty much how to make it based on our work in <a href="ch09.xhtml#sec9_3">Section 9.3</a>, where we saw how to use Nokogiri to create a document from HTML, like this:</p>
<div class="sidebar">
<pre><span class="brown"><strong>Nokogiri</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>HTML</strong></span><strong>(html)</strong></pre>
</div>
<p class="noindent">The only extra ingredient is the knowledge that Sinatra’s HTTP response objects always have a <code><span class="green"><strong>body</strong></span></code> attribute representing the HTML body (the full page, not just the <code><span class="green"><strong>body</strong></span></code> tag). This means we can define <code><span class="green"><strong>doc</strong></span></code> as shown in <a href="ch10.xhtml#ch10ex017">Listing 10.17</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex017"><strong>Listing 10.17:</strong> <a href="https://youtu.be/pwLn_His9Yw">What’s up, Doc?</a><br/><code><em>test/test_helper.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0282-02" id="f0282-02a">Click here to view code image</a></p>
<pre><span class="brown"><strong>ENV</strong></span><span class="gray"><strong>[</strong></span><span class="brown1"><strong>'RACK_ENV'</strong></span><span class="gray"><strong>] =</strong></span> <span class="brown1"><strong>'test'</strong></span>

<strong>require_relative</strong> <span class="brown1"><strong>'../app'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'rack/test'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'nokogiri'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'minitest/autorun'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'minitest/reporters'</strong></span>
<span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Reporters</strong></span><span class="gray"><strong>.</strong></span><strong>use!</strong>

<span class="bg-o"><span class="blue1"><strong><em># Returns the document.</em></strong></span></span>
<span class="bg-o"><span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>doc</strong></span><strong>(response)</strong></span>

<span class="bg-o">  <span class="brown"><strong>Nokogiri</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>HTML</strong></span><strong>(response</strong><span class="gray"><strong>.</strong></span><strong>body)</strong></span>
<span class="bg-o"><span class="green1"><strong>end</strong></span></span></pre>
</div>
<p class="indent"><span epub:type="pagebreak" id="page_283"></span>Now we’re ready to use <code><span class="green"><strong>doc</strong></span></code> to find the <code><span class="green"><strong>h1</strong></span></code> (if any) on the page. One possibility would be to use <code><span class="green"><strong>doc.css</strong></span></code> as in, e.g., <a href="ch09.xhtml#ch09ex012">Listing 9.12</a>:</p>
<div class="sidebar">
<pre><strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong></pre>
</div>
<p class="noindent">In the present case, though, we only need to see if there’s <em>any</em> <code><span class="green"><strong>h1</strong></span></code> tag, so we only need the first element:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0283-02" id="f0283-02a">Click here to view code image</a></p>
<pre><strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>first</strong></pre>
</div>
<p class="noindent">This would work fine, but this is such a common case that Nokogiri has a special method for it, called <code><span class="green"><strong>at_css</strong></span></code>:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0283-03" id="f0283-03a">Click here to view code image</a></p>
<pre><strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong></pre>
</div>
<p class="noindent">Because this will be <code><span class="green"><strong>nil</strong></span></code> if there’s no <code><span class="green"><strong>h1</strong></span></code> and non-<code><span class="green"><strong>nil</strong></span></code> otherwise, we can use a simple assertion, like this:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0283-04" id="f0283-04a">Click here to view code image</a></p>
<pre><strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong></pre>
</div>
<p class="noindent">Adding this to each page in our site yields the updated test suite shown in <a href="ch10.xhtml#ch10ex018">Listing 10.18</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex018"><strong>Listing 10.18:</strong> Adding assertions for the presence of an <code><span class="green"><strong>h1</strong></span></code> tag. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>test/site_pages_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0283-05" id="f0283-05a">Click here to view code image</a></p>

<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

<span epub:type="pagebreak" id="page_284"></span>
  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?</strong>
<span class="bg-o">    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_about</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/about'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?</strong>
<span class="bg-o">    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?</strong>
<span class="bg-o">    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong></span>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
<p class="noindent">By the way, some programmers adopt the convention of only ever having one assertion per test, whereas in <a href="ch10.xhtml#ch10ex018">Listing 10.18</a> we have two. In my experience, the overhead associated with setting up the right state (e.g., duplicating the calls to <code><span class="green"><strong>get</strong></span></code>) makes this convention inconvenient, and I’ve never run into any trouble from including multiple assertions in a test.</p>
<p class="indent">The tests in <a href="ch10.xhtml#ch10ex018">Listing 10.18</a> should now be <span class="smallcaps"><span class="green1">GREEN</span></span> as required:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex019"><strong>Listing 10.19:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0284-02" id="f0284-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 6 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent">At this point, we’re ready to use a Sinatra layout to eliminate duplication. Our first step is to remove the extraneous material from our pages, leaving only the core content, as shown in <a href="ch10.xhtml#ch10ex020">Listing 10.20</a>, <a href="ch10.xhtml#ch10ex021">Listing 10.21</a>, and <a href="ch10.xhtml#ch10ex022">Listing 10.22</a>. (This is why the body content wasn’t fully indented before.)</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex020"><strong>Listing 10.20:</strong> The core Home (index) view.<br/><code><em>views/index.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0284-03" id="f0284-03a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Sample Sinatra App&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<span epub:type="pagebreak" id="page_285"></span>
<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>This is the sample Sinatra app for</strong>
  <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.learnenough.com/ruby-tutorial"</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby
  to Be Dangerous&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;. Learn more on the &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/about"</strong></span><strong>&gt;About&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt; page.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>Click the &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://en.wikipedia.org/wiki/Sator_Square"</strong></span><strong>&gt;Sator
  Square&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt; below to run the custom &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/palindrome"</strong></span><strong>&gt;Palindrome
  Detector&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"sator-square"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/palindrome"</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/sator_square.jpg"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Sator Square"</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;</strong></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex021"><strong>Listing 10.21:</strong> The core About view.<br/><code><em>views/about.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0285-02" id="f0285-02a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;About&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>This site is the final application in
  &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.learnenough.com/ruby-tutorial"</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby
  to Be Dangerous&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
  by &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.michaelhartl.com/"</strong></span><strong>&gt;Michael Hartl&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;,
  a tutorial introduction to the
  &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.ruby-lang.org/en/"</strong></span><strong>&gt;Ruby programming language&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt; that
  is part of
  &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.learnenough.com/"</strong></span><strong>&gt;LearnEnough.com&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby to Be Dangerous&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; is a natural prerequisite to
  the &lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://www.railstutorial.org/"</strong></span><strong>&gt;</strong><span class="green1"><strong>&lt;em</strong></span><strong>&gt;Ruby on Rails
  Tutorial&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;, a book and video series that is one of the leading
  introductions to web development. &lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Learn Enough Ruby&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; is also an
  excellent choice &lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;after&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; the &lt;</strong><span class="green1"><strong>em</strong></span><strong>&gt;Rails Tutorial&lt;/</strong><span class="green1"><strong>em</strong></span><strong>&gt; for those who
  prefer to start with the latter first.
&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex022"><strong>Listing 10.22:</strong> The core Palindrome Detector view.<br/><code><em>views/palindrome.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0285-03" id="f0285-03a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Detector&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;This will be the palindrome detector.&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong></pre>
</div>
<p class="indent"><span epub:type="pagebreak" id="page_286"></span>Having stripped all the layout material from our pages, we’ll now create a file called <code><span class="green"><strong>layout.erb</strong></span></code> in the <code><span class="green"><strong>views</strong></span></code> directory that restores it:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>touch views/layout.erb</strong></pre>
</div>
<p class="noindent">Let’s start by filling it with the same content as the schematic HTML structure we saw in <a href="ch10.xhtml#ch10ex010">Listing 10.10</a>, as seen in <a href="ch10.xhtml#ch10ex023">Listing 10.23</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex023"><strong>Listing 10.23:</strong> Using an initial (incorrect) schematic layout. <span class="smallcaps"><span class="redr">RED</span></span><br/><code><em>views/layout.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0286-01" id="f0286-01a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>
<span class="bg-o">        <span class="blue1"><strong><em>&lt;!-- page-specific content --&gt;</em></strong></span></span>
      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">As indicated in the caption to <a href="ch10.xhtml#ch10ex023">Listing 10.23</a>, this layout breaks our test suite:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex024"><strong>Listing 10.24:</strong> <span class="smallcaps"><span class="redr">RED</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0286-02" id="f0286-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 6 assertions, 3 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="noindent">The <code><span class="green"><strong>ok?</strong></span></code> assertions in <a href="ch10.xhtml#ch10ex018">Listing 10.18</a> are passing, but the <code><span class="green"><strong>h1</strong></span></code> assertions are failing. This is because the site is now a bare layout, as shown in <a href="ch10.xhtml#ch10fig08">Figure 10.8</a>.<span epub:type="pagebreak" id="page_287"></span></p>
<figure class="figure" id="ch10fig08">
<img src="graphics/f0287-01.jpg" alt="Images" width="879" height="682"/>
<figcaption>
<p class="title-f">Figure 10.8: The bare layout, with no content.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_288"></span>To get the tests to pass and restore our site to full functionality, all we need to do is replace the HTML comment</p>
<div class="sidebar">
<pre><span class="blue1"><strong><em>&lt;!-- page-specific content --&gt;</em></strong></span></pre>
</div>
<p class="noindent">with some special Ruby code:</p>
<div class="sidebar">
<pre><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="green1"><strong>yield</strong></span> <span class="oranger"><strong><em>%&gt;</em></strong></span></pre>
</div>
<p class="noindent">This is our first example of <em>embedded Ruby</em>, which we’ll learn more about in <a href="ch10.xhtml#sec10_4">Section 10.4</a>. The special <code><span class="green"><strong>&lt;%= ... %&gt;</strong></span></code> notation arranges to evaluate the code represented by <code><span class="green"><strong>...</strong></span></code> and insert it into the site.</p>
<p class="indent">In this case, that code is <code><span class="green"><strong>yield</strong></span></code>, the keyword used in <a href="ch05.xhtml#sec5_4_1">Section 5.4.1</a> to yield content to a block, but the truth is that I don’t know offhand exactly how this works or precisely why a block is involved. Indeed, I encourage you to think of <code><span class="green"><strong>&lt;%= yield %&gt;</strong></span></code> as meaning “special code that inserts the page content into a layout”, and not worry about the details. (If you do much Ruby web development, you’ll soon get used to it—the exact same code is used in Ruby on Rails application layouts.)</p>
<p class="indent">Making the replacement suggested above yields (heh) the layout shown in <a href="ch10.xhtml#ch10ex025">Listing 10.25</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex025"><strong>Listing 10.25:</strong> Inserting content into the site layout. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>views/layout.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0288-01" id="f0288-01a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;</strong>
<span epub:type="pagebreak" id="page_289"></span>
      <strong>&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
      &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
        <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>
<span class="bg-o">          <span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="green1"><strong>yield</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></span>
        <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
      &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">With that, our layout is working, the horrible repeated code has been eliminated, and our tests are <span class="smallcaps"><span class="green1">GREEN</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex026"><strong>Listing 10.26:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0289-02" id="f0289-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 6 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="noindent">A quick check in the browser confirms that things are working as expected (<a href="ch10.xhtml#ch10fig09">Figure 10.9</a>).</p>
<figure class="figure" id="ch10fig09">
<img src="graphics/f0290-01.jpg" alt="Images" width="879" height="682"/>
<figcaption>
<p class="title-f">Figure 10.9: Our Home page, now created using a layout.</p>
</figcaption>
</figure>
<p class="indent">By the way, it’s worth noting that we could have used a layout file called, say, <code><span class="green"><strong>views/page.erb</strong></span></code>, in which case we would have had to update <code><span class="green"><strong>app.rb</strong></span></code> with an explicit hash option telling each page to use that file for the layout:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0289-03" id="f0289-03a">Click here to view code image</a></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <strong>erb</strong> <span class="blue"><strong>:index</strong></span><strong>,</strong> <span class="blue"><strong>:layout</strong></span> <span class="gray"><strong>=&gt;</strong></span> <span class="blue"><strong>:page</strong></span></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/about'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <strong>erb</strong> <span class="blue"><strong>:about</strong></span><strong>,</strong> <span class="blue"><strong>:layout</strong></span> <span class="gray"><strong>=&gt;</strong></span> <span class="blue"><strong>:page</strong></span></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <strong>erb</strong> <span class="blue"><strong>:palindrome</strong></span><strong>,</strong> <span class="blue"><strong>:layout</strong></span> <span class="gray"><strong>=&gt;</strong></span> <span class="blue"><strong>:page</strong></span></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">(Note that Ruby allows us to omit curly braces on hashes when they’re the last argument to a function.) When the layout file has the special name <code><span class="green"><strong>layout.-erb</strong></span></code>, though, Sinatra knows to look for it by default, so we can omit it in the app file. This sort of practice foreshadows the “<a href="https://rubyonrails.org/doctrine/#convention-over-configuration">convention over configuration</a>” philosophy adopted and <a href="https://rubyonrails.org/doctrine/">popularized</a> by Ruby on Rails.<span epub:type="pagebreak" id="page_290"></span></p>
<section>
<h4 class="h4" id="sec10_3_1"><span epub:type="pagebreak" id="page_291"></span>10.3.1 Exercises</h4>
<ol class="num">
<li><p class="num">As you can confirm by running the source of any page through an <a href="https://validator.w3.org/">HTML validator</a>, the current pages are valid HTML, but there’s a warning with a suggestion to add a <code><span class="green"><strong>lang</strong></span></code> (language) attribute to the <code><span class="green"><strong>html</strong></span></code> tag. Add the attribute <code><span class="green"><strong>lang="en"</strong></span></code> (for “English”) to the <code><span class="green"><strong>html</strong></span></code> tag in <a href="ch10.xhtml#ch10ex025">Listing 10.25</a> and confirm using a web inspector that it appears correctly on all three pages.</p></li>
<li><p class="num">Make a commit and deploy the changes.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec10_4">10.4 Embedded Ruby</h3>
<p class="noindent">Now that we’ve defined a proper layout, in this section we’ll use embedded Ruby (seen ever-so-briefly in <a href="ch10.xhtml#sec10_3">Section 10.3</a>) to add a couple of nice refinements to our site: <em>variable titles</em> and <em>navigation</em>. Variable titles are HTML <code><span class="green"><strong>title</strong></span></code> tag contents that vary from page to page, giving each page a nice polish of customization. Navigation, meanwhile, saves us the hassle of having to type each sub-page in by hand—certainly not the kind of user experience we’re trying to create.</p>
<p class="indent">Our variable titles will combine a <em>base title</em>, which is the same on each page, with a piece that varies based on the page’s name. In particular, for our Home, About, and Palindrome Detector pages, we want the titles to look something like this:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0291-01" id="f0291-01a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App <span class="gray">|</span> Home&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;</strong></pre>
</div>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0291-02" id="f0291-02a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App <span class="gray">|</span> About&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;</strong></pre></div>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0291-03" id="f0291-03a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App <span class="gray">|</span> Palindrome Detector&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;</strong></pre></div>
<p class="noindent">Our strategy has three steps:</p>
<ol class="num">
<li><p class="num"><span epub:type="pagebreak" id="page_292"></span>Write <span class="smallcaps"><span class="green1">GREEN</span></span> tests for the current page title.</p></li>
<li><p class="num">Write <span class="smallcaps"><span class="redr">RED</span></span> tests for the variable titles.</p></li>
<li><p class="num">Get to <span class="smallcaps"><span class="green1">GREEN</span></span> by adding the variable component of the title.</p></li>
</ol>
<p class="noindent">Note that Steps 2 &amp; 3 constitute TDD—writing the tests for the variable title is easier than getting them to pass, which is one of the cases for TDD described in <a href="ch08.xhtml#box8_1">Box 8.1</a>.</p>
<p class="indent">To get started with Step 1, we’ll use the <code><span class="green"><strong>doc</strong></span></code> helper introduced in <a href="ch10.xhtml#ch10ex017">Listing 10.17</a> to extract the <code><span class="green"><strong>text</strong></span></code> component of the <code><span class="green"><strong>title</strong></span></code> tag. Recalling from <a href="ch10.xhtml#ch10ex018">Listing 10.18</a> that we can use <code><span class="green"><strong>doc.at_css(&lt;tagname&gt;)</strong></span></code> to select the first tag with a given tag name, we can find the <code><span class="green"><strong>title</strong></span></code> tag as follows:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0292-01" id="f0292-01a">Click here to view code image</a></p>
<pre><strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong></pre></div>
<p class="noindent">We can then find the title content using the <a href="https://www.rubydoc.info/github/sparklemotion/nokogiri/Nokogiri/XML/Node#content-instance_method">Nokogiri</a> <code><span class="green"><strong>content</strong></span></code> <a href="https://www.rubydoc.info/github/sparklemotion/nokogiri/Nokogiri/XML/Node#content-instance_method">method</a>:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0292-02" id="f0292-02a">Click here to view code image</a></p>
<pre><strong>title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong></pre>
</div>
<p class="noindent">This lets us add assertions for the title content to the tests in <a href="ch10.xhtml#ch10ex018">Listing 10.18</a>, using the same <code><span class="green"><strong>assert_equal</strong></span></code> method we saw in <a href="ch08.xhtml#ch08ex021">Listing 8.21</a>. The result appears in <a href="ch10.xhtml#ch10ex027">Listing 10.27</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex027"><strong>Listing 10.27:</strong> Adding assertions for the base title content. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>test/site_pages_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0292-03" id="f0292-03a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
<span epub:type="pagebreak" id="page_293"></span>
    <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong>
<span class="bg-o">    <strong>title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong></span>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_about</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/about'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong>
<span class="bg-o">    <strong>title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong></span>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)</strong>
<span class="bg-o">    <strong>title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong></span>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
<p class="indent">As required, the tests are <span class="smallcaps"><span class="green1">GREEN</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex028"><strong>Listing 10.28:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0293-02" id="f0293-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 9 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="noindent">Now we’re ready for Step 2—all we need to do is add the vertical bar <code><span class="green"><strong>|</strong></span></code> and the page-specific titles, as shown in <a href="ch10.xhtml#ch10ex029">Listing 10.29</a>. Note that we’ve broken the Palindrome Detector assertion into two lines, in accordance with the 80-column rule (<a href="ch02.xhtml#box2_2">Box 2.2</a>). (Improving this by adding an instance variable to eliminate the duplication of the base title is left as an exercise (<a href="ch10.xhtml#sec10_4_1">Section 10.4.1</a>).)</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex029"><strong>Listing 10.29:</strong> Adding assertions for the variable title content. <span class="smallcaps"><span class="redr">RED</span></span><br/><code><em>test/site_pages_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0293-03" id="f0293-03a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>
<span epub:type="pagebreak" id="page_294"></span>
<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App | Home"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_about</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/about'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App | About"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App | Palindrome Detector"</strong></span><strong>,</strong></span>
<span class="bg-o">                 <strong>title_content</strong></span>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
<p class="noindent">Because we haven’t updated the application code, the tests are now <span class="smallcaps"><span class="redr">RED</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex030"><strong>Listing 10.30:</strong> <span class="smallcaps"><span class="redr">RED</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0294-02" id="f0294-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 9 assertions, 3 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent">Now for Step 3. The trick is to use an instance variable (<a href="ch07.xhtml#sec7_1">Section 7.1</a>) together with embedded Ruby to add the variable component of the title to the site layout, as shown in <a href="ch10.xhtml#ch10ex031">Listing 10.31</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex031"><span epub:type="pagebreak" id="page_295"></span><strong>Listing 10.31:</strong> Adding a variable component to the title. <span class="smallcaps"><span class="redr">RED</span></span><br/><code><em>views/layout.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0295-01" id="f0295-01a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;</strong>
<span class="bg-o">    <strong>&lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App |</strong><span class="oranger"> <strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@title</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;</strong></span>
    <strong>.
    .
    .</strong></pre>
</div>
<p class="noindent">As noted briefly in <a href="ch10.xhtml#sec10_3">Section 10.3</a>, the <code><span class="green"><strong>&lt;%= ... %&gt;</strong></span></code> syntax evaluates the code represented by <code><span class="green"><strong>...</strong></span></code> and inserts it into the site at that point. In this case, that content is simply <code><span class="green"><strong>@title</strong></span></code>.</p>
<p class="indent">But what is <code><span class="green"><strong>@title</strong></span></code>, and where does it come from? It turns out that in Sinatra (and also in Rails), instance variables defined in controllers are automatically available in views. This means that we can define an <code><span class="green"><strong>@title</strong></span></code> variable for each of our pages, and it will automatically show up in the title thanks to <a href="ch10.xhtml#ch10ex031">Listing 10.31</a>. The result appears in <a href="ch10.xhtml#ch10ex032">Listing 10.32</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex032"><strong>Listing 10.32:</strong> Adding <code><span class="green"><strong>@title</strong></span></code> variables to each page. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>app.rb</em></code></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Home'</strong></span></span>
  <strong>erb</strong> <span class="blue"><strong>:index</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/about'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'About'</strong></span></span>
  <strong>erb</strong> <span class="blue"><strong>:about</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Palindrome Detector'</strong></span></span>
  <strong>erb</strong> <span class="blue"><strong>:palindrome</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="indent">With that, our tests are passing!</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex033"><span epub:type="pagebreak" id="page_296"></span><strong>Listing 10.33:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0296-02" id="f0296-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 9 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="noindent">Of course, it’s probably a good idea to double-check in the browser, just to make sure (<a href="ch10.xhtml#ch10fig10">Figure 10.10</a>).</p>
<figure class="figure" id="ch10fig10">
<img src="graphics/f0296-01.jpg" alt="Images" width="879" height="679"/>
<figcaption>
<p class="title-f">Figure 10.10: Confirming the correct variable titles in the browser.</p>
</figcaption>
</figure>
<p class="indent">Now that we have a proper layout file, adding navigation to every page is easy. The nav code appears in <a href="ch10.xhtml#ch10ex034">Listing 10.34</a>, with the result shown in <a href="ch10.xhtml#ch10fig11">Figure 10.11</a>.</p>
<figure class="figure" id="ch10fig11">
<img src="graphics/f0298-01.jpg" alt="Images" width="879" height="679"/>
<figcaption>
<p class="title-f">Figure 10.11: The site navigation.</p>
</figcaption>
</figure>
<div class="ex-box">
<p class="ex-caption" id="ch10ex034"><span epub:type="pagebreak" id="page_297"></span><strong>Listing 10.34:</strong> Adding site navigation.<br/><code><em>views/layout.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0297-01" id="f0297-01a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App |</strong><span class="oranger"> <strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@title</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
<span class="bg-o">      <strong>&lt;</strong><span class="green1"><strong>header</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header"</strong></span><strong>&gt;</strong></span>
<span class="bg-o">           <strong>&lt;</strong><span class="green1"><strong>nav</strong></span><strong>&gt;</strong></span>
<span class="bg-o">             <strong>&lt;</strong><span class="green1"><strong>ul</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-nav"</strong></span><strong>&gt;</strong></span>
<span class="bg-o">               <strong>&lt;</strong><span class="green1"><strong>li</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span><strong>&gt;Home&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>li</strong></span><strong>&gt;</strong></span>
<span class="bg-o">               <strong>&lt;</strong><span class="green1"><strong>li</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/palindrome"</strong></span><strong>&gt;Is It a Palindrome?&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>li</strong></span><strong>&gt;</strong></span>
<span class="bg-o">               <strong>&lt;</strong><span class="green1"><strong>li</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/about"</strong></span><strong>&gt;About&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>li</strong></span><strong>&gt;</strong></span>
<span class="bg-o">             <strong>&lt;/</strong><span class="green1"><strong>ul</strong></span><strong>&gt;</strong></span>
<span class="bg-o">           <strong>&lt;/</strong><span class="green1"><strong>nav</strong></span><strong>&gt;</strong></span>
<span class="bg-o">      <strong>&lt;/</strong><span class="green1"><strong>header</strong></span><strong>&gt;</strong></span>
      &lt;<span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>
        <span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="green1"><strong>yield</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>
      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<p class="indent">As a final flourish, we’ll factor the navigation from <a href="ch10.xhtml#ch10ex034">Listing 10.34</a> into a separate file, sometimes called a <em>partial</em>. This will lead to a nicely clean and tidy layout page.</p>
<p class="indent">Because this involves refactoring the site, we’ll add a simple test (per <a href="ch08.xhtml#box8_1">Box 8.1</a>) to catch any regressions. Because the navigation appears on the site layout, we could use any page to test for its presence, and for convenience we’ll use the index page. As shown in <a href="ch10.xhtml#ch10ex035">Listing 10.35</a>, all we need to do is assert the existence of a <code><span class="green"><strong>nav</strong></span></code> tag.<span epub:type="pagebreak" id="page_298"></span></p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex035"><span epub:type="pagebreak" id="page_299"></span><strong>Listing 10.35:</strong> Testing the navigation. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>test/site_pages_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0299-01" id="f0299-01a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content
    assert_equal</strong> <span class="brown1"><strong>"Learn Enough Ruby Sample App | Home"</strong></span><strong>, title_content</strong>
<span class="bg-o">    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'nav'</strong></span><strong>)</strong></span>
  <span class="green1"><strong>end</strong></span>
  <span class="gray"><strong>.
  .
  .</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">Because the nav was already added, the tests should be <span class="smallcaps"><span class="green1">GREEN</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex036"><strong>Listing 10.36:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0299-02" id="f0299-02a">Click here to view code image</a></p>
<pre><strong>$ bundle exec rake test
3 tests, 10 assertions, 0 failures, 0 errors, 0 skips</strong></pre>
</div>
<p class="indent">It’s a good practice to watch the tests change to <span class="smallcaps"><span class="redr">RED</span></span> to make sure we’re testing the right thing, so we’ll start by cutting the navigation (<a href="ch10.xhtml#ch10ex037">Listing 10.37</a>) and pasting it into a separate file, which we’ll call <code><span class="green"><strong>navigation.erb</strong></span></code> (<a href="ch10.xhtml#ch10ex038">Listing 10.38</a>):</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>touch views/navigation.erb</strong></pre></div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex037"><span epub:type="pagebreak" id="page_300"></span><strong>Listing 10.37:</strong> Cutting the navigation. <span class="smallcaps"><span class="redr">RED</span></span><br/><code><em>views/layout.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0300-01" id="f0300-01a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App |</strong><span class="oranger"> <strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@title</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>

      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>
        <span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="green1"><strong>yield</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>
      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex038"><strong>Listing 10.38:</strong> Adding a navigation partial. <span class="smallcaps"><span class="redr">RED</span></span><br/><code><em>views/navigation.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0300-02" id="f0300-02a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>header</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header"</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>nav</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>ul</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-nav"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>li</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span><strong>&gt;Home&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>li</strong></span><strong>&gt;
      &lt;</strong><span class="green1"><strong>li</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/palindrome"</strong></span><strong>&gt;Is It a Palindrome?&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>li</strong></span><strong>&gt;
      &lt;</strong><span class="green1"><strong>li</strong></span><strong>&gt;&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/about"</strong></span><strong>&gt;About&lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>li</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>ul</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>nav</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>header</strong></span><strong>&gt;</strong></pre>
</div>
<p class="indent">You should confirm that the tests are now <span class="smallcaps"><span class="redr">RED</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex039"><strong>Listing 10.39:</strong> <span class="smallcaps"><span class="redr">RED</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0300-03" id="f0300-03a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 10 assertions, 1 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent"><span epub:type="pagebreak" id="page_301"></span>To restore the navigation, we can use embedded Ruby to evaluate the same <code><span class="green"><strong>erb</strong></span></code> function we’ve been using in <code><span class="green"><strong>app.rb</strong></span></code>:</p>
<div class="sidebar">
<pre><span class="oranger"><strong><em>&lt;%=</em></strong></span> <strong>erb</strong> <span class="blue"><strong>:navigation</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></pre>
</div>
<p class="noindent">This code automatically looks for a file in <code><span class="green"><strong>views/navigation.erb</strong></span></code>, evaluates the result, and inserts the return value where it was called.</p>
<p class="indent">Putting this code into the layout gives <a href="ch10.xhtml#ch10ex040">Listing 10.40</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex040"><strong>Listing 10.40:</strong> Evaluating the nav partial in the layout. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>views/layout.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0301-01" id="f0301-01a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;!DOCTYPE html&gt;</em></strong></span>
<strong>&lt;</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>head</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>meta</strong></span> <span class="greenr1"><strong>charset</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"utf-8"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>title</strong></span><strong>&gt;Learn Enough Ruby Sample App |</strong><span class="oranger"> <strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@title</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>&lt;/</strong><span class="green1"><strong>title</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"text/css"</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/stylesheets/main.css"</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>link</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"https://fonts.googleapis.com/css?family=Open+Sans:300,400"</strong></span>
          <span class="greenr1"><strong>rel</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"stylesheet"</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>head</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>body</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>a</strong></span> <span class="greenr1"><strong>href</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/"</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"header-logo"</strong></span><strong>&gt;</strong>
      <strong>&lt;</strong><span class="green1"><strong>img</strong></span> <span class="greenr1"><strong>src</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/images/logo_b.png"</strong></span> <span class="greenr1"><strong>alt</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"Learn Enough logo"</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>a</strong></span><strong>&gt;
    &lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"container"</strong></span><strong>&gt;</strong>
<span class="bg-o">      <span class="oranger"><strong><em>&lt;%=</em></strong></span> <strong>erb</strong> <span class="blue"><strong>:navigation</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></span>
      <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"content"</strong></span><strong>&gt;</strong>
        <span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="green1"><strong>yield</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>
      <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
    &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>body</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>html</strong></span><strong>&gt;</strong></pre>
</div>
<p class="indent">With the code in <a href="ch10.xhtml#ch10ex040">Listing 10.40</a>, our test suite is once again <span class="smallcaps"><span class="green1">GREEN</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex041"><strong>Listing 10.41:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0301-02" id="f0301-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>3 tests, 10 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent">A quick click over to the About page confirms that the navigation is working (<a href="ch10.xhtml#ch10fig12">Figure 10.12</a>). Sweet!</p>
<span epub:type="pagebreak" id="page_302"></span>
<figure class="figure" id="ch10fig12">
<img src="graphics/f0302-01.jpg" alt="Images" width="879" height="685"/>
<figcaption>
<p class="title-f">Figure 10.12: The navigation menu on the About page.</p>
</figcaption>
</figure>
<section>
<h4 class="h4" id="sec10_4_1"><span epub:type="pagebreak" id="page_303"></span>10.4.1 Exercises</h4>
<ol class="num">
<li><p class="num">We can eliminate some duplication in <a href="ch10.xhtml#ch10ex029">Listing 10.29</a> by creating a <code><span class="green"><strong>setup</strong></span></code> method (which is automatically run before each test) that defines an instance variable for the base title, as shown in <a href="ch10.xhtml#ch10ex042">Listing 10.42</a>. Confirm that this code still gives a <span class="smallcaps"><span class="green1">GREEN</span></span> test suite.</p></li>
<li><p class="num">Use embedded Ruby to include a call to <code><span class="green"><strong>Time.now</strong></span></code> (<a href="ch04.xhtml#sec4_2">Section 4.2</a>) somewhere on the index page. What happens when you refresh the browser?</p></li>
<li><p class="num">Make a commit and deploy the changes. (If you did the previous exercise, undo those changes first.)</p></li>
</ol>
<div class="ex-box">
<p class="ex-caption" id="ch10ex042"><strong>Listing 10.42:</strong> Adding a <code><span class="green"><strong>setup</strong></span></code> method to eliminate some duplication. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>test/site_pages_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0303-01" id="f0303-01a">Click here to view code image</a></p>

<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

<span class="bg-o">  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>setup</strong></span></span>
<span class="bg-o">    <span class="blue"><strong>@base_title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>"Learn Enough Ruby Sample App"</strong></span></span>
<span class="bg-o">  <span class="green1"><strong>end</strong></span></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_index</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"</strong></span><span class="pinkr"><strong>#</strong>{</span><span class="blue"><strong>@base_title</strong></span><span class="pinkr"><strong>}</strong></span> <span class="brown1"><strong>| Home"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_about</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/about'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong>
<span class="bg-o">    <strong>assert_equal</strong> <span class="brown1"><strong>"</strong></span><span class="pinkr"><strong>#{</strong></span><span class="blue"><strong>@base_title</strong></span><span class="pinkr"><strong>}</strong></span> <span class="brown1"><strong>| About"</strong></span><strong>, title_content</strong></span>
  <span epub:type="pagebreak" id="page_304"></span><span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert last_response</strong><span class="gray"><strong>.</strong></span><strong>ok?
    assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'h1'</strong></span><strong>)
    title_content</strong> <span class="gray"><strong>=</strong></span> <strong>doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'title'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content</strong>
<span class="bg-o">    <strong>assert_equal</strong> <span class="pinkr"><strong>"#</strong>{</span><span class="blue"><strong>@base_title</strong></span><span class="pinkr"><strong>}</strong></span> <span class="brown1"><strong>| Palindrome Detector"</strong></span><strong>, title_content</strong></span>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
</section>
</section>
<section>
<h3 class="h3" id="sec10_5">10.5 Palindrome Detector</h3>
<p class="noindent">In this section, we’ll complete the sample Sinatra app by adding a working palindrome detector. This will involve putting the Ruby gem developed in <a href="ch08.xhtml#ch08">Chapter 8</a> to good use. We’ll also see the first truly working HTML <em>form</em> in the <a href="https://www.learnenough.com/courses">Learn Enough introductory sequence</a>.</p>
<p class="indent">Our first step is to add a palindrome gem. I recommend using your own, but if for any reason you didn’t publish one you can use mine, which is shown in <a href="ch10.xhtml#ch10ex043">Listing 10.43</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex043"><strong>Listing 10.43:</strong> Adding a palindrome gem.<br/><code><em>Gemfile</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0304-02" id="f0304-02a">Click here to view code image</a></p>
<pre><strong>source</strong> <span class="brown1"><strong>'https://rubygems.org'</strong></span>

<strong>ruby</strong> <span class="brown1"><strong>'3.1.1'</strong></span>   <span class="blue1"><strong><em># Change this line if you're using a different Ruby version.</em></strong></span>

<strong>gem</strong> <span class="brown1"><strong>'sinatra'</strong></span><strong>,</strong>           <span class="brown1"><strong>'2.2.0'</strong></span>
<strong>gem</strong> <span class="brown1"><strong>'puma'</strong></span><strong>,</strong>              <span class="brown1"><strong>'5.6.4'</strong></span>
<strong>gem</strong> <span class="brown1"><strong>'rerun'</strong></span><strong>,</strong>             <span class="brown1"><strong>'0.13.1'</strong></span>
<span class="bg-o"><strong>gem</strong> <span class="brown1"><strong>'mhartl_palindrome'</strong></span><strong>,</strong> <span class="brown1"><strong>'0.1.0'</strong></span></span>

<strong>group</strong> <span class="blue"><strong>:test</strong></span> <span class="green1"><strong>do</strong></span>

  <strong>gem</strong> <span class="brown1"><strong>'minitest'</strong></span><strong>,</strong>           <span class="brown1"><strong>'5.15.0'</strong></span>
  <strong>gem</strong> <span class="brown1"><strong>'minitest-reporters'</strong></span><strong>,</strong> <span class="brown1"><strong>'1.5.0'</strong></span>
  <strong>gem</strong> <span class="brown1"><strong>'rack-test'</strong></span><strong>,</strong>          <span class="brown1"><strong>'1.1.0'</strong></span>
  <strong>gem</strong> <span class="brown1"><strong>'rake'</strong></span><strong>,</strong>               <span class="brown1"><strong>'13.0.6'</strong></span>
  <strong>gem</strong> <span class="brown1"><strong>'nokogiri'</strong></span><strong>,</strong>           <span class="brown1"><strong>'1.13.3'</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent"><span epub:type="pagebreak" id="page_305"></span>Then we install as usual:</p>
<div class="sidebar">
<pre><code><span class="blue"><strong>$</strong></span> <strong>bundle _2.3.10_ install</strong></code></pre>
</div>
<p class="noindent">We also need to include the palindrome gem in our app (<a href="ch10.xhtml#ch10ex044">Listing 10.44</a>).</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex044"><strong>Listing 10.44:</strong> Adding the palindrome gem to the app.<br/><code><em>app.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0305-02" id="f0305-02a">Click here to view code image</a></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>
<span class="bg-o"><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'mhartl_palindrome'</strong></span></span>

<strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Home'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:index</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/about'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'About'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:about</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Palindrome Detector'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:palindrome</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="indent">With that prep work done, we’re now ready to add a form to our Palindrome Detector page, which is currently just a placeholder (<a href="ch10.xhtml#ch10fig13">Figure 10.13</a>). The form consists of three principal parts: a <code><span class="green"><strong>form</strong></span></code> tag to define the form, a <code><span class="green"><strong>textarea</strong></span></code> for entering a phrase, and a button for submitting the phrase to the server.</p>
<figure class="figure" id="ch10fig13">
<img src="graphics/f0306-01.jpg" alt="Images" width="878" height="679"/>
<figcaption>
<p class="title-f">Figure 10.13: The current state of the palindrome page.</p>
</figcaption>
</figure>
<p class="indent">Let’s work inside out. The <code><span class="green"><strong>button</strong></span></code> has two attributes: a CSS class for styling and a <code><span class="green"><strong>type</strong></span></code> indicating that it’s designed to submit information:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0305-01" id="f0305-01a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>button</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"form-submit"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"submit"</strong></span><strong>&gt;Is it a palindrome?&lt;/</strong><span class="green1"><strong>button</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">The <code><span class="green"><strong>textarea</strong></span></code> has three attributes: a <code><span class="green"><strong>name</strong></span></code> attribute, which as we’ll see in a moment passes important information back to the server, along with <code><span class="green"><strong>rows</strong></span></code> and <code><span class="green"><strong>cols</strong></span></code> to define the size of the textarea box:<span epub:type="pagebreak" id="page_306"></span></p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0307-01" id="f0307-01a">Click here to view code image</a></p>
<pre><span epub:type="pagebreak" id="page_307"></span><strong>&lt;</strong><span class="green1"><strong>textarea</strong></span> <span class="greenr1"><strong>name</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"phrase"</strong></span> <span class="greenr1"><strong>rows</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"10"</strong></span> <span class="greenr1"><strong>cols</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"60"</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>textarea</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">The <code><span class="green"><strong>textarea</strong></span></code> tag’s content is the default text displayed in the browser, which in this case is just blank.</p>
<p class="indent">Finally, the <code><span class="green"><strong>form</strong></span></code> tag itself has three attributes: a CSS <code><span class="green"><strong>id</strong></span></code>, which isn’t used here but is conventional to include; an <code><span class="green"><strong>action</strong></span></code>, which specifies the action to take when submitting the form; and a <code><span class="green"><strong>method</strong></span></code> indicating the <a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods">HTTP request method</a> to use:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0307-02" id="f0307-02a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>form</strong></span> <span class="greenr1"><strong>id</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"palindrome_tester"</strong></span> <span class="greenr1"><strong>action</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/check"</strong></span> <span class="greenr1"><strong>method</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"post"</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">We saw as early as <a href="ch01.xhtml#ch01ex08">Listing 1.8</a> how Sinatra apps define responses to URLs:</p>
<div class="sidebar">
<pre><strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="brown1"><strong>'hello, world!'</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">Here <code><span class="green"><strong>get</strong></span></code> is a Sinatra function specifying how to respond when someone hits the root URL / with a <code>GET</code> request, which is the kind of request a web browser sends for an ordinary click. In contrast, a <code>POST</code> request is the kind of request typically submitted by a form. (As you might guess, there’s a corresponding Sinatra function called <code><span class="green"><strong>post</strong></span></code> for handling this kind of request, as we’ll see in a moment.)</p>
<p class="indent">Putting the above discussion together (and adding a <code><span class="green"><strong>br</strong></span></code> tag to add a line break) yields the form shown in <a href="ch10.xhtml#ch10ex045">Listing 10.45</a>. Our updated Palindrome Detector page appears in <a href="ch10.xhtml#ch10fig14">Figure 10.14</a>.</p>
<figure class="figure" id="ch10fig14">
<img src="graphics/f0308-01.jpg" alt="Images" width="878" height="679"/>
<figcaption>
<p class="title-f">Figure 10.14: The new palindrome form.</p>
</figcaption>
</figure>
<div class="ex-box">
<p class="ex-caption" id="ch10ex045"><strong>Listing 10.45:</strong> Adding a form to the palindrome page.<br/><code><em>views/palindrome.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0307-03" id="f0307-03a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Detector&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<strong>&lt;</strong><span class="green1"><strong>form</strong></span> <span class="greenr1"><strong>id</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"palindrome_tester"</strong></span> <span class="greenr1"><strong>action</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/check"</strong></span> <span class="greenr1"><strong>method</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"post"</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>textarea</strong></span> <span class="greenr1"><strong>name</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"phrase"</strong></span> <span class="greenr1"><strong>rows</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"10"</strong></span> <span class="greenr1"><strong>cols</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"60"</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>textarea</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>br</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>button</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"form-submit"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"submit"</strong></span><strong>&gt;Is it a palindrome?&lt;/</strong><span class="green1"><strong>button</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>form</strong></span><strong>&gt;</strong></pre><span epub:type="pagebreak" id="page_308"></span></div>
<p class="indent"><span epub:type="pagebreak" id="page_309"></span>The form in <a href="ch10.xhtml#ch10ex045">Listing 10.45</a> is, apart from cosmetic details, identical to the <a href="https://www.learnenough.com/r/learn_enough_javascript/dom_manipulation/form_handling#code-form_tag">analogous form</a> developed in <em><a href="https://www.learnenough.com/javascript">Learn Enough JavaScript to Be Dangerous</a></em>:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0309-01" id="f0309-01a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>form</strong></span> <span class="greenr1"><strong>id</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"palindromeTester"</strong></span><strong>&gt;</strong>
  <strong>&lt;</strong><span class="green1"><strong>textarea</strong></span> <span class="greenr1"><strong>name</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"phrase"</strong></span> <span class="greenr1"><strong>rows</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"10"</strong></span> <span class="greenr1"><strong>cols</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"30"</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>textarea</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>br</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>button</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"submit"</strong></span><strong>&gt;Is it a palindrome?&lt;/</strong><span class="green1"><strong>button</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>form</strong></span><strong>&gt;</strong></pre>
</div>
<p class="noindent">In that case, though, we “cheated” by using a JavaScript event listener to <a href="https://www.learnenough.com/r/learn_enough_javascript/dom_manipulation/form_handling#code-form_event_target">intercept</a> the submit request from the form, and no information ever got sent from the client (browser) to the server. (It’s important to understand that, when developing web applications on a local computer, the client and server are the same physical machine, but in general they are different.)</p>
<p class="indent">This time, we won’t cheat: The request will really go all the way to the server, which means we’ll have to handle the <code>POST</code> request on the back-end. As hinted above, the way to do this is with the <code><span class="green"><strong>post</strong></span></code> function:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0309-02" id="f0309-02a">Click here to view code image</a></p>
<pre><strong>post</strong> <span class="brown1"><strong>'/check'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue1"><strong><em># Do something to handle the submission</em></strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">Here the name of the URL path, <code><span class="green"><strong>/check</strong></span></code>, matches the value of the <code><span class="green"><strong>action</strong></span></code> parameter in the form (<a href="ch10.xhtml#ch10ex045">Listing 10.45</a>).</p>
<p class="indent">To get our first hint of what form submission does, we’ll use one of my favorite heavy-handed debugging tricks (<a href="ch05.xhtml#box5_1">Box 5.1</a>), which is to <code><span class="green"><strong>raise</strong></span></code> an exception right in <code><span class="green"><strong>app.rb</strong></span></code>. In this case, we’ll <code><span class="green"><strong>raise</strong></span></code> the contents of a special object called <code><span class="green"><strong>params</strong></span></code>, called using <code><span class="green"><strong>inspect</strong></span></code> to ensure that the result is a proper string. The code appears in <a href="ch10.xhtml#ch10ex046">Listing 10.46</a>, while the result of submitting “Madam, I’m Adam.” in the form appears in <a href="ch10.xhtml#ch10fig15">Figure 10.15</a>.</p>
<figure class="figure" id="ch10fig15">
<img src="graphics/f0311-01.jpg" alt="Images" width="879" height="679"/>
<figcaption>
<p class="title-f">Figure 10.15: The result of a <code><span class="green"><strong>raise</strong></span></code> after form submission.</p>
</figcaption>
</figure>
<div class="ex-box">
<p class="ex-caption" id="ch10ex046"><strong>Listing 10.46:</strong> Investigating the effects of a form submission.<br/><code><em>app.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0309-03" id="f0309-03a">Click here to view code image</a></p>

<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'mhartl_palindrome'</strong></span>

<span epub:type="pagebreak" id="page_310"></span><strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Home'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:index</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/about'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'About'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:about</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Palindrome Detector'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:palindrome</strong></span>
<span class="green1"><strong>end</strong></span>

<span class="bg-o"><strong>post</strong> <span class="brown1"><strong>'/check'</strong></span> <span class="green1"><strong>do</strong></span>
<span class="bg-o">  <strong><span class="green1">raise</span></strong></span> <strong>params</strong><span class="gray"><strong>.</strong></span><strong>inspect</strong></span>
<span class="bg-o"><span class="green1"><strong>end</strong></span></span></pre>
</div>
<p class="indent">As seen in <a href="ch10.xhtml#ch10fig15">Figure 10.15</a>, <code><span class="green"><strong>params</strong></span></code> is a hash (<a href="ch04.xhtml#sec4_4">Section 4.4</a>), with key <code><span class="green"><strong>"phrase"</strong></span></code> and value <code><span class="green"><strong>"Madam, I'm Adam."</strong></span></code>:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0310-02" id="f0310-02a">Click here to view code image</a></p>
<pre><strong>{</strong> <span class="brown1"><strong>"phrase"</strong></span> <span class="gray"><strong>=&gt;</strong></span> <span class="brown1"><strong>"Madam, I'm Adam."</strong></span> <strong>}</strong></pre>
</div>
<p class="noindent">This <code><span class="green"><strong>params</strong></span></code> hash is created automatically by Sinatra according to the key–value pairs in the form (<a href="ch10.xhtml#ch10ex045">Listing 10.45</a>). In this case, we have only one such pair, with key given by the <code><span class="green"><strong>name</strong></span></code> attribute of the <code><span class="green"><strong>textarea</strong></span></code> (<code><span class="green"><strong>"phrase"</strong></span></code>) and value given by the string entered by the user. By the way, inside the application code it’s possible to use a symbol key instead, and indeed this is the more common convention, so that</p>
<div class="sidebar">
<pre><strong>params</strong><span class="gray"><strong>[</strong></span><span class="blue"><strong>:phrase</strong></span><span class="gray"><strong>]</strong></span></pre>
</div>
<p class="noindent">extracts the value of the phrase.</p>
<p class="indent">Now that we know about the existence and contents of <code><span class="green"><strong>params</strong></span></code>, detecting a palindrome is easy: Just extract the phrase and call <code><span class="green"><strong>palindrome?</strong></span></code> on it. If we put the phrase into an instance variable called <code><span class="green"><strong>@phrase</strong></span></code>, our code would look something like this in plain Ruby:<span epub:type="pagebreak" id="page_311"></span></p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex047"><span epub:type="pagebreak" id="page_312"></span><strong>Listing 10.47:</strong> What our palindrome results might look like in plain Ruby.</p>
<p class="codelink"><a href="ch10_images.xhtml#f0312-01" id="f0312-01a">Click here to view code image</a></p>
<pre><span class="green1"><strong>if</strong></span> <span class="blue"><strong>@phrase</strong></span><span class="gray"><strong>.</strong></span><strong>palindrome?</strong>
  <span class="green1"><strong>puts</strong></span> <span class="brown1"><strong>"\"</strong></span><span class="pinkr"><strong>#{</strong></span><span class="blue"><strong>@phrase</strong></span><span class="pinkr"><strong>}</strong></span><span class="brown1"><strong>\"</strong></span> <span class="brown1"><strong>is a palindrome!"</strong></span>
<span class="green1"><strong>else
  puts</strong></span> <span class="brown1"><strong>"\"</strong></span><span class="pinkr"><strong>#{</strong></span><span class="blue"><strong>@phrase</strong></span><span class="pinkr"><strong>}</strong></span><span class="brown1"><strong>\ "isn't a palindrome."</strong></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="noindent">We can do the same basic thing using embedded Ruby (<a href="ch10.xhtml#sec10_4">Section 10.4</a>), only using <code><span class="green"><strong>&lt;%= ... %&gt;</strong></span></code> instead of interpolation, and surrounding any other code in <code><span class="green"><strong>&lt;% ... %&gt;</strong></span></code> tags. This is the same syntax we’ve seen before, only without an equals sign <code><span class="green"><strong>=</strong></span></code>, which tells ERB to evaluate the code but <em>not</em> to insert it into the page. Schematically, it looks something like <a href="ch10.xhtml#ch10ex048">Listing 10.48</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex048"><strong>Listing 10.48:</strong> Schematic code for the palindrome result.</p>
<p class="codelink"><a href="ch10_images.xhtml#f0312-02" id="f0312-02a">Click here to view code image</a></p>
<pre><span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>if</strong></span> <span class="blue"><strong>@phrase</strong></span><span class="gray"><strong>.</strong></span><strong>palindrome?</strong><span class="oranger"> <strong><em>%&gt;</em></strong></span>
   <strong>"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" is a palindrome!</strong>
<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>else</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>
    <strong>"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" isn't a palindrome!</strong>
<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>end</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></pre>
</div>
<p class="indent">We’ll create a file called <code><span class="green"><strong>result.erb</strong></span></code>:</p>
<div class="sidebar">
<pre><span class="blue"><strong>$</strong></span> <strong>touch views/result.erb</strong></pre>
</div>
<p class="noindent">The code itself is an expanded version of <a href="ch10.xhtml#ch10ex048">Listing 10.48</a> with a few more HTML tags for a better appearance, as shown in <a href="ch10.xhtml#ch10ex049">Listing 10.49</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex049"><strong>Listing 10.49:</strong> Displaying the palindrome result using ERB.<br/><code><em>views/result.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0312-03" id="f0312-03a">Click here to view code image</a></p>

<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Result&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<span class="bg-o"><span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>if</strong></span> <span class="blue"><strong>@phrase</strong></span><span class="gray"><strong>.</strong></span><strong>palindrome?</strong><span class="oranger"> <strong><em>%&gt;</em></strong></span></span>
  <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"result result-success"</strong></span><strong>&gt;</strong>
<span class="bg-o">    <strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" is a palindrome!&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong></span>
  <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;</strong>
<span epub:type="pagebreak" id="page_313"></span>
<span class="bg-o"><span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>else</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></span>
  <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"result result-fail"</strong></span><strong>&gt;</strong>
<span class="bg-o">    <strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" isn't a palindrome!&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;</strong></span>
  <strong>&lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;</strong>
<span class="bg-o"><span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>end</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></span></pre>
</div>
<p class="indent">All that’s left now is handling the submission, putting the value of <code><span class="green"><strong>params[:phrase]</strong></span></code> in <code><span class="green"><strong>@phrase</strong></span></code>, and rendering the result. Since the form issues an HTTP <code>POST</code> request, the trick is to use the <code><span class="green"><strong>post</strong></span></code> function in place of the <code><span class="green"><strong>get</strong></span></code> function we’ve used on every page so far. The URL itself is <code><span class="green"><strong>'/check'</strong></span></code>, as indicated by the value of the <code><span class="green"><strong>action</strong></span></code> attribute in <a href="ch10.xhtml#ch10ex045">Listing 10.45</a>. The result appears in <a href="ch10.xhtml#ch10ex050">Listing 10.50</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex050"><strong>Listing 10.50:</strong> Handling a palindrome form submission.<br/><code><em>app.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0313-02" id="f0313-02a">Click here to view code image</a></p>
<pre><span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'sinatra'</strong></span>
<span class="green1"><strong>require</strong></span> <span class="brown1"><strong>'mhartl_palindrome'</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Home'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:index</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/about'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'About'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:about</strong></span>
<span class="green1"><strong>end</strong></span>

<strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span> <span class="green1"><strong>do</strong></span>
  <span class="blue"><strong>@title</strong></span> <span class="gray"><strong>=</strong></span> <span class="brown1"><strong>'Palindrome Detector'</strong></span>
  <strong>erb</strong> <span class="blue"><strong>:palindrome</strong></span>
<span class="green1"><strong>end</strong></span>

<span class="bg-o"><strong>post</strong> <span class="brown1"><strong>'/check'</strong></span> <span class="green1"><strong>do</strong></span></span>
<span class="bg-o">  <span class="blue"><strong>@phrase</strong></span> <span class="gray"><strong>=</strong></span> <strong>params</strong><span class="gray"><strong>[</strong></span><span class="blue"><strong>:phrase</strong></span><span class="gray"><strong>]</strong></span></span>
<span class="bg-o">  <strong>erb</strong> <span class="blue"><strong>:result</strong></span></span>
<span class="bg-o"><span class="green1"><strong>end</strong></span></span></pre>
</div>
<p class="indent">With that, our palindrome detector should be working! Let’s see if it can correctly identify one of the most ancient palindromes, the so-called <a href="https://en.wikipedia.org/wiki/Sator_Square">Sator Square</a> first found in the ruins of <a href="https://en.wikipedia.org/wiki/Pompeii">Pompeii</a> (<a href="ch10.xhtml#ch10fig16">Figure 10.16</a>).<sup><a id="fn10_4" href="ch10.xhtml#fn10_4a">4</a></sup> (Authorities differ on the <span epub:type="pagebreak" id="page_314"></span>exact meaning of the Latin words in the square, but the likeliest translation is “The sower [farmer] Arepo holds the wheels with effort.”)</p>
<figure class="figure" id="ch10fig16">
<img src="graphics/f0315-01.jpg" alt="Images" width="891" height="882"/>
<figcaption>
<p class="title-f">Figure 10.16: A Latin palindrome from the lost city of Pompeii.</p>
</figcaption>
</figure>
<p class="footnote"><sup><a id="fn10_4a" href="ch10.xhtml#fn10_4">4</a></sup>Image courtesy of CPA Media Pte Ltd/Alamy Stock Photo.</p>
<p class="indent">Entering the text “SATOR AREPO TENET OPERA ROTAS” (<a href="ch10.xhtml#ch10fig17">Figure 10.17</a>) and submitting it leads to the result shown in <a href="ch10.xhtml#ch10fig18">Figure 10.18</a>.</p>
<figure class="figure" id="ch10fig17">
<img src="graphics/f0316-01.jpg" alt="Images" width="891" height="713"/>
<figcaption>
<p class="title-f">Figure 10.17: A Latin palindrome?</p>
</figcaption>
</figure>
<figure class="figure" id="ch10fig18">
<img src="graphics/f0317-01.jpg" alt="Images" width="892" height="529"/>
<figcaption>
<p class="title-f">Figure 10.18: A Latin palindrome!</p>
</figcaption>
</figure>
<section>
<h4 class="h4" id="sec10_5_1">10.5.1 Form Tests</h4>
<p class="noindent">Our application is now working, but note that testing a <em>second</em> palindrome requires clicking on “IS IT A PALINDROME?” It would be more convenient if we included the same submission form on the result page as well.</p>
<p class="indent">To do this, we’ll first add a simple test for the presence of a <code><span class="green"><strong>form</strong></span></code> tag on the palindrome page. Because the tests we’ll be adding are specific to that page, we’ll create a new test file to contain them:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0314-01" id="f0314-01a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>touch test/palindrome_test.rb</strong></pre>
</div>
<p class="noindent">The test itself is closely analogous to the <code><span class="green"><strong>h1</strong></span></code> test in <a href="ch10.xhtml#ch10ex018">Listing 10.18</a>, as shown in <a href="ch10.xhtml#ch10ex051">Listing 10.51</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex051"><strong>Listing 10.51:</strong> Testing for the presence of a form tag. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>palindrome_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0314-02" id="f0314-02a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

<span class="bg-o">  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_form_presence</strong></span></span>
<span class="bg-o">    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span></span>
<span class="bg-o">    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'form'</strong></span><strong>)</strong></span>
<span class="bg-o">  <span class="green1"><strong>end</strong></span></span>
<span class="green1"><strong>end</strong></span></pre>
</div>
<p class="indent">Now we’ll add tests for the existing form submission for both non-palindromes and palindromes. Just as <code><span class="green"><strong>get</strong></span></code> in tests issues a <code>GET</code> request, <code><span class="green"><strong>post</strong></span></code> in tests issues a <code>POST</code> request. The first argument of <code><span class="green"><strong>post</strong></span></code> is the URL, and the second is the <code><span class="green"><strong>params</strong></span></code> hash:<span epub:type="pagebreak" id="page_315"></span><span epub:type="pagebreak" id="page_316"></span><span epub:type="pagebreak" id="page_317"></span></p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0318-01" id="f0318-01a">Click here to view code image</a></p>
<pre><span epub:type="pagebreak" id="page_318"></span><strong>post</strong> <span class="brown1"><strong>'/check'</strong></span><strong>,</strong> <span class="blue"><strong>phrase</strong></span><strong>:</strong> <span class="brown1"><strong>"Not a palindrome"</strong></span></pre>
</div>
<p class="noindent">(Note that this uses the more compact <code><span class="green"><strong>key: value</strong></span></code> hash notation mentioned in <a href="ch04.xhtml#sec4_4">Section 4.4</a>; per the note near the end of <a href="ch10.xhtml#sec10_3">Section 10.3</a>, we have also omitted the curly braces.)</p>
<p class="indent">To test the response, we’ll verify that the text in the page’s paragraph tag includes the right result. The most elegant way to do this is with <code><span class="green"><strong>assert_-includes</strong></span></code> from the <a href="http://ruby-doc.org/stdlib-2.0.0/libdoc/minitest/rdoc/MiniTest/Assertions.html#method-i-assert_includes">minitest assertions</a>, where</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0318-02" id="f0318-02a">Click here to view code image</a></p>
<pre><strong>assert_includes result, substring</strong></pre>
</div>
<p class="noindent">is effectively equivalent to</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0318-03" id="f0318-03a">Click here to view code image</a></p>
<pre><strong>assert result</strong><span class="gray"><strong>.</strong></span><strong>include?(substring)</strong></pre>
</div>
<p class="noindent">using the <code><span class="green"><strong>String#include?</strong></span></code> method discussed in <a href="ch02.xhtml#sec2_5">Section 2.5</a>. (As with <code><span class="green"><strong>assert_equal</strong></span></code>, using the native assertion is generally more convenient because the failing messages are more descriptive.) For a non-palindrome, the assertion would look something like this:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0318-04" id="f0318-04a">Click here to view code image</a></p>
<pre><strong>assert_includes doc(last_response</strong>)<span class="gray"><strong>.</strong></span><strong>at_css(</strong><span class="brown1"><strong>'p'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content,</strong> <span class="brown1"><strong>"isn't a palindrome"</strong></span></pre>
</div>
<p class="indent">Taking the ideas above and applying them to both non-palindromes and palindromes gives the tests shown in <a href="ch10.xhtml#ch10ex052">Listing 10.52</a> (with only inner lines highlighted for brevity).</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex052"><span epub:type="pagebreak" id="page_319"></span><strong>Listing 10.52:</strong> Adding tests for form submission. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>palindrome_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0319-01" id="f0319-01a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_form_presence</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'form'</strong></span><strong>)</strong>
<span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_non_palindrome_submission</strong></span>
<span class="bg-o">    <strong>post</strong> <span class="brown1"><strong>'/check'</strong></span><strong>,</strong> <span class="blue"><strong>phrase</strong></span><strong>:</strong> <span class="brown1"><strong>"Not a palindrome"</strong></span></span>
<span class="bg-o">    <strong>assert_includes doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'p'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content,</strong> <span class="brown1"><strong>"isn't a palindrome"</strong></span></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome_submission</strong></span>
<span class="bg-o">    <strong>post</strong> <span class="brown1"><strong>'/check'</strong></span><strong>,</strong> <span class="blue"><strong>phrase</strong></span><strong>:</strong> <span class="brown1"><strong>"Able was I, ere I saw Elba."</strong></span></span>
<span class="bg-o">    <strong>assert_includes doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'p'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content,</strong> <span class="brown1"><strong>"is a palindrome"</strong></span></span>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
<p class="indent">Because we were testing existing functionality, our tests should already be <span class="smallcaps"><span class="green1">GREEN</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex053"><strong>Listing 10.53:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0319-02" id="f0319-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>6 tests, 15 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent">As a capstone to our development, we’ll now add a form on the result page using the <span class="smallcaps"><span class="redr">RED</span></span>, <span class="smallcaps"><span class="green1">GREEN</span></span>, refactor cycle that is a hallmark of TDD. Without loss of generality, we’ll work in the non-palindrome test; all we need to do is add a <code><span class="green"><strong>form</strong></span></code> test identical to the one in <a href="ch10.xhtml#ch10ex051">Listing 10.51</a>, as shown in <a href="ch10.xhtml#ch10ex054">Listing 10.54</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex054"><span epub:type="pagebreak" id="page_320"></span><strong>Listing 10.54:</strong> Adding a test for a form on the result page. <span class="smallcaps"><span class="redr">RED</span></span><br/><code><em>palindrome_test.rb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0320-01" id="f0320-01a">Click here to view code image</a></p>
<pre><strong>require_relative</strong> <span class="brown1"><strong>'test_helper'</strong></span>

<span class="green1"><strong>class</strong></span> <span class="blue1r"><strong>PalindromeAppTest</strong></span> <span class="gray"><strong>&lt;</strong></span> <span class="brown"><strong>Minitest</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span>
  <span class="green1"><strong>include</strong></span> <span class="brown"><strong>Rack</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Test</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Methods</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>app</strong></span>
    <span class="brown"><strong>Sinatra</strong></span><span class="gray"><strong>::</strong></span><span class="brown"><strong>Application</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_form_presence</strong></span>
    <strong>get</strong> <span class="brown1"><strong>'/palindrome'</strong></span>
    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'form'</strong></span><strong>)</strong>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_non_palindrome_submission</strong></span>
    <strong>post</strong> <span class="brown1"><strong>'/check'</strong></span><strong>,</strong> <span class="blue"><strong>phrase</strong></span><strong>:</strong> <span class="brown1"><strong>"Not a palindrome"</strong></span>
    <strong>assert_includes doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'p'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content,</strong> <span class="brown1"><strong>"isn't a palindrome"</strong></span>
<span class="bg-o">    <strong>assert doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'form'</strong></span><strong>)</strong></span>
  <span class="green1"><strong>end</strong></span>

  <span class="green1"><strong>def</strong></span> <span class="blue1r"><strong>test_palindrome_submission</strong></span>
    <strong>post</strong> <span class="brown1"><strong>'/check'</strong></span><strong>,</strong> <span class="blue"><strong>phrase</strong></span><strong>:</strong> <span class="brown1"><strong>"Able was I, ere I saw Elba."</strong></span>
    <strong>assert_includes doc(last_response)</strong><span class="gray"><strong>.</strong></span><strong>at_css</strong>(<span class="brown1"><strong>'p'</strong></span><strong>)</strong><span class="gray"><strong>.</strong></span><strong>content,</strong> <span class="brown1"><strong>"is a palindrome"</strong></span>
  <span class="green1"><strong>end
end</strong></span></pre>
</div>
<p class="noindent">As required, the test suite is now <span class="smallcaps"><span class="redr">RED</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex055"><strong>Listing 10.55:</strong> <span class="smallcaps"><span class="redr">RED</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0320-02" id="f0320-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>6 tests, 16 assertions, 1 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent">We can get the tests to <span class="smallcaps"><span class="green1">GREEN</span></span> again by copying the form from <code><span class="green"><strong>palindrome.erb</strong></span></code> and pasting it into <code><span class="green"><strong>result.erb</strong></span></code>, as shown in <a href="ch10.xhtml#ch10ex056">Listing 10.56</a>.</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex056"><strong>Listing 10.56:</strong> Adding a form to the result page. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>views/result.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0321-01" id="f0321-01a">Click here to view code image</a></p>
<pre><span epub:type="pagebreak" id="page_321"></span><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Result&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>if</strong></span> <span class="blue"><strong>@phrase</strong></span><span class="gray"><strong>.</strong></span><strong>palindrome?</strong><span class="oranger"> <strong><em>%&gt;</em></strong></span>
  <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"result result-success"</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" is a palindrome!&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;</strong>
<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>else</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>
  <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"result result-fail"</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" isn't a palindrome!&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;</strong>
<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>end</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>

<span class="bg-o"><strong>&lt;</strong><span class="green1"><strong>h2</strong></span><strong>&gt;Try another one!&lt;/</strong><span class="green1"><strong>h2</strong></span><strong>&gt;</strong></span>

<span class="bg-o"><strong>&lt;</strong><span class="green1"><strong>form</strong></span> <span class="greenr1"><strong>id</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"palindrome_tester"</strong></span> <span class="greenr1"><strong>action</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/check"</strong></span> <span class="greenr1"><strong>method</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"post"</strong></span><strong>&gt;</strong></span>
<span class="bg-o">  <strong>&lt;</strong><span class="green1"><strong>textarea</strong></span> <span class="greenr1"><strong>name</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"phrase"</strong></span> <span class="greenr1"><strong>rows</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"10"</strong></span> <span class="greenr1"><strong>cols</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"60"</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>textarea</strong></span><strong>&gt;</strong></span>
<span class="bg-o">  <strong>&lt;</strong><span class="green1"><strong>br</strong></span><strong>&gt;</strong></span>
<span class="bg-o">  <strong>&lt;</strong><span class="green1"><strong>button</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"form-submit"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"submit"</strong></span><strong>&gt;Is it a palindrome?&lt;/</strong><span class="green1"><strong>button</strong></span><strong>&gt;</strong></span>
<span class="bg-o"><strong>&lt;/</strong><span class="green1"><strong>form</strong></span><strong>&gt;</strong></span></pre>
</div>
<p class="noindent">This gets our tests to <span class="smallcaps"><span class="green1">GREEN</span></span>:</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex057"><strong>Listing 10.57:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0321-02" id="f0321-02a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>6 tests, 16 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent">That cut-and-paste should have set your programmer <a href="https://en.wiktionary.org/wiki/Spidey-sense">Spidey-sense</a> tingling though: It’s repetition! Pasting in content is a clear violation of the Don’t Repeat Yourself (DRY) principle. Happily, we saw how to eliminate such duplication in the case of the site navigation by refactoring the code to use a partial (<a href="ch10.xhtml#ch10ex040">Listing 10.40</a>), which we can apply to this case as well. As with the nav, we’ll first create a separate file for the form HTML:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0321-03" id="f0321-03a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>touch views/palindrome_form.erb</strong></pre>
</div>
<p class="noindent">Then we can fill it with the form (<a href="ch10.xhtml#ch10ex058">Listing 10.58</a>), while replacing the form with an ERB rendering on the result page (<a href="ch10.xhtml#ch10ex059">Listing 10.59</a>) and on the main palindrome page itself (<a href="ch10.xhtml#ch10ex060">Listing 10.60</a>).</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex058"><span epub:type="pagebreak" id="page_322"></span><strong>Listing 10.58:</strong> A partial for the palindrome form. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>views/palindrome_form.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0322-01" id="f0322-01a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>form</strong></span> <span class="greenr1"><strong>id</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"palindrome_tester"</strong></span> <span class="greenr1"><strong>action</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"/check"</strong></span> <span class="greenr1"><strong>method</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"post"</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>textarea</strong></span> <span class="greenr1"><strong>name</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"phrase"</strong></span> <span class="greenr1"><strong>rows</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"10"</strong></span> <span class="greenr1"><strong>cols</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"60"</strong></span><strong>&gt;&lt;/</strong><span class="green1"><strong>textarea</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>br</strong></span><strong>&gt;
  &lt;</strong><span class="green1"><strong>button</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"form-submit"</strong></span> <span class="greenr1"><strong>type</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"submit"</strong></span><strong>&gt;Is it a palindrome?&lt;/</strong><span class="green1"><strong>button</strong></span><strong>&gt;
&lt;/</strong><span class="green1"><strong>form</strong></span><strong>&gt;</strong></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex059"><strong>Listing 10.59:</strong> Rendering the form partial on the result page. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>views/result.erb</em></code></p>
<p class="codelink"><a href="ch10_images.xhtml#f0322-02" id="f0322-02a">Click here to view code image</a></p>
<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Result&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>if</strong></span> <span class="blue"><strong>@phrase</strong></span><span class="gray"><strong>.</strong></span><strong>palindrome?</strong><span class="oranger"> <strong><em>%&gt;</em></strong></span>
  <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"result result-success"</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" is a palindrome!&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;</strong>
<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>else</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>
  <strong>&lt;</strong><span class="green1"><strong>div</strong></span> <span class="greenr1"><strong>class</strong></span><span class="gray"><strong>=</strong></span><span class="brown1"><strong>"result result-fail"</strong></span><strong>&gt;</strong>
    <strong>&lt;</strong><span class="green1"><strong>p</strong></span><strong>&gt;"</strong><span class="oranger"><strong><em>&lt;%=</em></strong></span> <span class="blue"><strong>@phrase</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span><strong>" isn't a palindrome!&lt;/</strong><span class="green1"><strong>p</strong></span><strong>&gt;
  &lt;/</strong><span class="green1"><strong>div</strong></span><strong>&gt;</strong>
<span class="oranger"><strong><em>&lt;%</em></strong></span> <span class="green1"><strong>end</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span>

<strong>&lt;</strong><span class="green1"><strong>h2</strong></span><strong>&gt;Try another one!&lt;/</strong><span class="green1"><strong>h2</strong></span><strong>&gt;</strong>

<span class="bg-o"><span class="oranger"><strong><em>&lt;%=</em></strong></span> <strong>erb</strong> <span class="blue"><strong>:palindrome_form</strong></span> <span class="oranger"><em><strong>%&gt;</strong></em></span></span></pre>
</div>
<div class="ex-box">
<p class="ex-caption" id="ch10ex060"><strong>Listing 10.60:</strong> Rendering the form partial on the main palindrome page. <span class="smallcaps"><span class="green1">GREEN</span></span><br/><code><em>views/palindrome.erb</em></code></p>
<pre><strong>&lt;</strong><span class="green1"><strong>h1</strong></span><strong>&gt;Palindrome Detector&lt;/</strong><span class="green1"><strong>h1</strong></span><strong>&gt;</strong>

<span class="bg-o"><span class="oranger"><strong><em>&lt;%=</em></strong></span> <strong>erb</strong> <span class="blue"><strong>:palindrome_form</strong></span><span class="oranger"> <strong><em>%&gt;</em></strong></span></span></pre>
</div>
<p class="indent">As required for a refactoring, the tests are still <span class="smallcaps"><span class="green1">GREEN</span></span>!</p>
<div class="ex-box">
<p class="ex-caption" id="ch10ex061"><strong>Listing 10.61:</strong> <span class="smallcaps"><span class="green1">GREEN</span></span></p>
<p class="codelink"><a href="ch10_images.xhtml#f0322-03" id="f0322-03a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>bundle</strong> <span class="green1"><strong>exec</strong></span> <strong>rake</strong> <span class="green1"><strong>test</strong></span>
<span class="green"><strong>6 tests, 16 assertions, 0 failures, 0 errors, 0 skips</strong></span></pre>
</div>
<p class="indent"><span epub:type="pagebreak" id="page_323"></span>Submitting the Sator Square palindrome shows that the form on the result page is rendering properly, as shown in <a href="ch10.xhtml#ch10fig19">Figure 10.19</a>.</p>
<figure class="figure" id="ch10fig19">
<img src="graphics/f0324-01.jpg" alt="Images" width="891" height="968"/>
<figcaption>
<p class="title-f">Figure 10.19: The form on the result page.</p>
</figcaption>
</figure>
<p class="indent">Filling the textarea with one of my favorite looooong palindromes (<a href="ch10.xhtml#ch10fig20">Figure 10.20</a>) gives the result shown in <a href="ch10.xhtml#ch10fig21">Figure 10.21</a>.<sup><a id="fn10_5" href="ch10.xhtml#fn10_5a">5</a></sup></p>
<figure class="figure" id="ch10fig20">
<img src="graphics/f0325-01.jpg" alt="Images" width="892" height="966"/>
<figcaption>
<p class="title-f">Figure 10.20: Entering a long string in the form’s textarea field.</p>
</figcaption>
</figure>
<figure class="figure" id="ch10fig21">
<img src="graphics/f0326-01.jpg" alt="Images" width="891" height="1104"/>
<figcaption>
<p class="title-f">Figure 10.21: That long string is a palindrome!</p>
</figcaption>
</figure>
<p class="footnote"><sup><a id="fn10_5a" href="ch10.xhtml#fn10_5">5</a></sup> The amazingly long palindrome in <a href="ch10.xhtml#ch10fig20">Figure 10.20</a> was created in 1983 by pioneering computer scientist <a href="https://en.wikipedia.org/wiki/Guy_L._Steele_Jr">Guy Steele</a> with the aid of a custom program.</p>
<p class="indent">And with that—“A man, a plan, a canoe, pasta, heros, rajahs, a coloratura, maps, snipe, percale, macaroni, a gag, a banana bag, a tan, a tag, a banana bag again (or a camel), a crepe, pins, Spam, a rut, a Rolo, cash, a jar, sore hats, a peon, a canal—Panama!”—we’re done with our palindrome detector web application. Whew!</p>
<p class="indent">The only thing left is to commit and deploy:</p>
<div class="sidebar">
<p class="codelink"><a href="ch10_images.xhtml#f0323-01" id="f0323-01a">Click here to view code image</a></p>
<pre><span class="blue"><strong>$</strong></span> <strong>git add -A</strong>
<span class="blue"><strong>$</strong></span> <strong>git commit -am</strong> <span class="brown1"><strong>"Finish working palindrome detector"</strong></span>
<span class="blue"><strong>$</strong></span> <strong>git push heroku</strong></pre>
</div>
<p class="noindent">Note that, after pushing once, we can omit the branch name (<code><span class="green"><strong>main</strong></span></code>) and just type <code><span class="green"><strong>git push heroku</strong></span></code>. The result is a palindrome application working in production (<a href="ch10.xhtml#ch10fig22">Figure 10.22</a>)! (To learn how to host a Heroku site using a custom domain instead of a <a href="http://herokuapp.com">herokuapp.com</a> subdomain, see the free tutorial <em><a href="https://www.learnenough.com/custom-domains">Learn Enough Custom Domains to Be Dangerous</a></em>.)</p>
<figure class="figure" id="ch10fig22">
<img src="graphics/f0327-01.jpg" alt="Images" width="878" height="677"/>
<figcaption>
<p class="title-f">Figure 10.22: Our palindrome detector working on the live Web.</p>
</figcaption>
</figure>
</section>
<section>
<h4 class="h4" id="sec10_5_2">10.5.2 Exercises</h4>
<ol class="num">
<li><p class="num">Confirm by submitting an empty textarea that the palindrome detector currently returns <code><span class="green"><strong>true</strong></span></code> for the empty string, which is a flaw in the palindrome gem itself. What happens if you submit a bunch of spaces?</p></li>
<li><p class="num">In the palindrome gem, write a test asserting that a string of spaces <em>isn’t</em> a palindrome (<span class="smallcaps"><span class="redr">RED</span></span>). Then write the application code necessary to get that test to <span class="smallcaps"><span class="green1">GREEN</span></span>. Bump the version number and publish your gem as in <a href="ch08.xhtml#sec8_5_1">Section 8.5.1</a>. (You can refer to <a href="https://github.com/mhartl/mhartl_palindrome">my version</a> if you’d like some help.)<span epub:type="pagebreak" id="page_324"></span><span epub:type="pagebreak" id="page_325"></span><span epub:type="pagebreak" id="page_326"></span><span epub:type="pagebreak" id="page_327"></span></p></li>
<li><p class="num"><span epub:type="pagebreak" id="page_328"></span>After waiting a few minutes for RubyGems to update, bump the version number in the <code><span class="green"><strong>Gemfile</strong></span></code> (<a href="ch10.xhtml#ch10ex043">Listing 10.43</a>), update the gems using <span class="green"> <code><strong>bundle update</strong></code></span>, and confirm that an empty submission is no longer a palindrome, both locally and (after redeploying) in production.</p></li>
<li><p class="num">Make a commit and deploy the changes.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec10_6">10.6 Conclusion</h3>
<p class="noindent">Congratulations! You now know enough Ruby to be <em>dangerous</em>.</p>
<p class="indent">With the skills developed in this tutorial, you now have the preparation to go in multiple different directions. The most natural follow-on is the <em><a href="https://www.railstutorial.org/">Ruby on Rails Tutorial</a></em>, which teaches you how to make professional-grade web applications using the Ruby on Rails web framework:</p>
<ul>
<li><p class="bull"><em><a href="https://www.railstutorial.org/">Ruby on Rails Tutorial</a></em></p></li>
</ul>
<p class="noindent"><em>Learn Enough Ruby to Be Dangerous</em> is perfect preparation for the <em><a href="https://www.railstutorial.org/">Ruby on Rails Tutorial</a></em>; in particular, you will find that the background in Sinatra will make learning Rails much easier than it would be otherwise.</p>
<p class="indent">If you haven’t followed it already, I also recommend learning the basics of JavaScript:</p>
<ul>
<li><p class="bull"><em><a href="https://www.learnenough.com/javascript">Learn Enough JavaScript to Be Dangerous</a></em></p></li>
</ul>
<p class="noindent">You can get surprisingly far with Ruby alone, but JavaScript’s unique ability to be run in the browser means everyone who makes web apps should learn it eventually.</p>
<p class="indent">For more about Ruby (and programming generally), I recommend these fine titles:</p>
<ul>
<li><p class="bull"><em><a href="https://pine.fm/LearnToProgram/">Learn to Program</a></em> by Chris Pine (Pragmatic Bookshelf, 2021)</p></li>
<li><p class="bull"><em><a href="https://pragprog.com/titles/ruby4/">Programming Ruby</a></em> by Dave Thomas (Pragmatic Bookshelf, 2013)</p></li>
</ul>
<p class="noindent"><span epub:type="pagebreak" id="page_329"></span>Finally, for people who want the most solid foundation possible in technical sophistication, <a href="https://www.learnenough.com/all-access">Learn Enough All Access</a> is a subscription service that has special online versions of all the Learn Enough books and over 40 hours of streaming video tutorials. We hope you’ll <a href="https://www.learnenough.com/all-access">check it out</a>!</p>
</section>
</section>
</div>
</div>
</body>
</html>