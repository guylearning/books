<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" lang="en-US" xml:lang="en-US">
	<head>
		<title>Chapter 4.1: Define the Problem, Clear Thinking</title>
		<link href="../css/prh_resets.css" rel="stylesheet" type="text/css"/>
		<link href="../css/9780593086124_style.css" rel="stylesheet" type="text/css"/>
		<meta charset="utf-8"/>
<meta content="urn:uuid:5dc26c30-d197-4148-9aa8-1f60ca2c259c" name="Adept.expected.resource"/>
	</head>
	<body id="x9780593086124_EPUB-25" lang="en-US" xml:lang="en-US">
		<div>
			<h2 class="x03-Chapter-Number" id="_idParaDest-46"><span epub:type="pagebreak" id="page_125" role="doc-pagebreak" title="125"/>CHAPTER 4.1</h2>
			<h2 class="x03-Chapter-Title" id="_idParaDest-47">Define the Problem</h2>
			<p class="x03-CO-Body-Text">The first principle of decision-making is that the decider needs to define the problem.<a class="Footnote-Reference" epub:type="noteref" href="76_Footnote.xhtml#footnote_1" id="footnote-037-backlink" role="doc-noteref" title="footnote">[*]</a> If you’re not the one making the decision, you can suggest the problem that needs to be solved, but you don’t get to define it. Only the person responsible for the outcome does. The decision-maker can take input from anywhere—bosses, subordinates, colleagues, experts, etc. However, the responsibility to get to the bottom of the problem—to sort fact from opinion and determine what’s really happening—rests with them.</p>
			<p class="x04-Body-Text">Defining the problem starts with identifying two things: (1) what you want to achieve, and (2) what obstacles stand in the way of getting it.</p>
			<p class="x04-Body-Text">Unfortunately, people too often end up solving the wrong problem.</p>
			<p class="x04-Body-Text"><span epub:type="pagebreak" id="page_126" role="doc-pagebreak" title="126"/>Perhaps you can relate to this scenario, which I’ve seen thousands of times over the years. A decision-maker assembles a diverse team to solve a critical and time-sensitive problem. There are ten people in the room all giving input about what’s happening—each from a different perspective. Within a few minutes someone announces what they think the problem is, the room goes silent for a microsecond . . . and then everyone starts discussing possible solutions.</p>
			<p class="x04-Body-Text">Often the first plausible description of the situation defines the problem that the team will try to solve.<a class="Footnote-Reference" epub:type="noteref" href="77_Footnote.xhtml#footnote_2" id="footnote-036-backlink" role="doc-noteref" title="footnote">[*]</a> Once the group comes up with a solution, the decision-maker feels good. That person then allocates resources toward the idea and expects the problem to be solved. But it isn’t. Because the first lens into an issue rarely reveals what the real problem is, so the real problem doesn’t get solved.</p>
			<p class="x04-Body-Text">What’s happening here?</p>
			<p class="x04-Body-Text">The social default prompts us to accept the first definition people agree on and move forward. Once someone states a problem, the team shifts into “solution” mode without considering whether the problem has even been correctly defined. This is what happens when you put a bunch of smart, type A people together and tell them to solve a problem. Most of the time, they end up missing the real problem and merely addressing a symptom of it. They react without reasoning.</p>
			<p class="x04-Body-Text">Many of us have been taught that solving problems is how we add value. In school, teachers give us problems to solve, and at work our bosses do the same. We’ve been taught our whole lives to solve problems.</p>
			<p class="x04-Body-Text">But when it comes to defining problems, we have less <span epub:type="pagebreak" id="page_127" role="doc-pagebreak" title="127"/>experience. Things are often uncertain. We seldom have all the information. Sometimes, there are competing ideas about what the problem is, competing proposals to solve it, and then lots of interpersonal friction. So we’re much less comfortable defining problems than solving them, and the social default uses that discomfort. It encourages us to react instead of reason, in order to prove we’re adding value. Just solve a problem—<i>any problem</i>!</p>
			<p class="x04-Body-Text">The result: organizations and individuals waste a lot of time solving the wrong problems. It’s so much easier to treat the symptoms than find the underlying disease, to put out fires rather than prevent them, or to simply punt things into the future. The problem with this approach is that the fires never burn out, they flare up repeatedly. And when you punt something into the future, the future eventually arrives.</p>
			<p class="x04-Body-Text">We’re busier than ever at work, but most of the time what we’re busy doing is putting out fires—fires that started with a poor initial decision made years earlier, which should’ve been prevented in the first place.</p>
			<p class="x04-Body-Text">And because there are so many fires and so many demands on our time, we tend to focus on just putting out the flames. Yet as any experienced camper knows, putting out flames doesn’t put out the fire. Since all our time is spent running around and putting out the flames, we have no time to think about today’s problems, which can create the kindling for tomorrow’s fires.</p>
			<p class="x04-Body-Text">The best decision-makers know that the way we define a problem shapes everyone’s perspective about it and determines the solutions. The most critical step in any decision-making process is to get the problem right. This part of the process offers invaluable insight. Since you can’t solve a problem you don’t understand, defining the problem is a chance to take in <span epub:type="pagebreak" id="page_128" role="doc-pagebreak" title="128"/>lots of relevant information. Only by talking to the experts, seeking the opinions of others, hearing their different perspectives, and sorting out what’s real from what’s not can the decision-maker understand the real problem.</p>
			<p class="x04-Body-Text">When you really understand a problem, the solution seems obvious. Later, we’ll talk about the tells that reveal when people are solving a problem they don’t fully understand.</p>
			<p class="x04-Body-Text">These two principles follow the example of the best decision-makers:</p>
			<aside>
				<p class="x10-Sidebar-Box-Text"><span class="_0-Sidebar-Box-Run-in">the definition principle:</span> Take responsibility for defining the problem. Don’t let someone define it for you. Do the work to understand it. Don’t use jargon to describe or explain it.</p>
				<p class="x10-Sidebar-Box-Text"><span class="_0-Sidebar-Box-Run-in">the root cause principle:</span> Identify the root cause of the problem. Don’t be content with simply treating its symptoms.</p>
			</aside>
			<p class="x04-Body-Text-FL">I once took over a department where the software would regularly freeze. Solving the problem required physically rebooting the server. (The drawback of working in a top secret facility was our lack of connectivity to the outside world.)</p>
			<p class="x04-Body-Text">Almost every weekend, one of the people on my team would be called into work to fix the problem. Without fail, he’d have the system back up and running quickly. The outage was small, the impact minimal. Problem solved. Or was it?</p>
			<p class="x04-Body-Text">At the end of the first month, I received the overtime bill to sign. Those weekend visits were costing a small fortune. We were addressing the symptom without solving the problem. Fixing the real problem required a few weeks of work, instead of a few minutes on the weekend. No one wanted to solve the <span epub:type="pagebreak" id="page_129" role="doc-pagebreak" title="129"/>real problem because it was painful. So we just kept putting out flames and letting the fire reignite.</p>
			<p class="x04-Body-Text">A handy tool for identifying the root cause of a problem is to ask yourself, “What would have to be true for this problem not to exist in the first place?” Here’s another example of this tool put to use:</p>
			<p class="x04-Body-Text">The ASPCA is one of the largest animal-welfare groups in the United States. It estimates that more than 3 million dogs enter shelters each year and are put up for adoption. Roughly 1.4 million of them are successfully adopted, but that leaves more than 1 million unadopted dogs in the US each year.<a class="Footnote-Reference" epub:type="noteref" href="78_Footnote.xhtml#footnote_3" id="footnote-035-backlink" role="doc-noteref" title="footnote">[*]</a></p>
			<p class="x04-Body-Text">There are only so many people willing to adopt a pet, and only so many pets a given family can handle, so the question facing most shelters is, “How can we get more people to adopt?” But answering that question doesn’t make any progress toward a long-term solution.</p>
			<p class="x04-Body-Text">One shelter took a different approach. The founder of Downtown Dog Rescue in Los Angeles, Lori Weise, asked instead, “What would have to be true for there to be fewer dogs to adopt in the first place?”<a class="Endnote-Reference" href="40_Notes.xhtml#EndnoteNumber32" id="SuperscriptNumber32" role="doc-noteref" title="note">[1]</a> Weise dug into the data and found that 30 percent of dogs entering a shelter were owner surrenders—pets voluntarily given up by their owners. She found that many times caring owners surrendered their pets because they couldn’t afford to feed them and thought someone else could better care for the animal. With this insight, a better and more permanent solution became apparent.</p>
			<p class="x04-Body-Text">Weise started a new program: Whenever a family came in to surrender a pet, the staff asked if they would prefer to keep <span epub:type="pagebreak" id="page_130" role="doc-pagebreak" title="130"/>the pet. If the answer was yes, the staff used their network to help resolve the problem—whether it was just a matter of a ten-dollar rabies shot, or long-term access to pet food. Weise and her team found that it was actually cheaper to help a family feed and keep a pet than to house it at the shelter. More important, the program enabled 75 percent of the families who came in intending to surrender pets to keep them permanently instead.</p>
			<p class="x04-Body-Text">Identifying the root cause of a problem applies in business too. A company might think that its problem is getting too few new sales, so it marshals resources to get new leads. But what if getting new sales isn’t the root of the problem? What if there’s an issue with, say, the product itself? The root cause of any problem like this is customer satisfaction, and that’s not necessarily the same as getting new customers. It could also be keeping existing customers happy. The way you define a problem changes what you see.</p>
			<p class="x04-Body-Text">Your defaults are always present, and despite your efforts to follow the Definition Principle and the Root Cause Principle, it’s still possible to get sidetracked.</p>
			<h3 class="x05-Head-A">How to Safeguard the Problem-Defining Stage</h3>
			<p class="x04-Body-Text-FL">There are two ways to safeguard this stage of the decision process against our defaults: create a firewall and use time to your advantage.</p>
			<aside>
				<p class="x10-Sidebar-Box-Text"><span class="_0-Sidebar-Box-Run-in">safeguard:</span> <i class="TG-ITAL">Build a problem-solution firewall.</i> Separate the problem-defining phase of the decision-making process from the problem-solving phase.</p>
			</aside>
			<p class="x04-Body-Text-FL">A mentor of mine once taught me that the best way to avoid finding the perfect solution to the wrong problem at work, when <span epub:type="pagebreak" id="page_131" role="doc-pagebreak" title="131"/>time allows, is to hold two separate meetings: one to define the problem, and one to come up with the solution.</p>
			<p class="x04-Body-Text">The most precious resources in any organization are time and the brainpower of your best employees. Asking for two separate meetings to come up with a solution to a problem that seemed obvious to everyone is not an easy sell. But it’s worth it. I’ve used this safeguard for many years, and I’ve seen it used over and over by people who consistently make good decisions. As soon as they start implementing it, they learn that having a single meeting for both tasks only makes them vulnerable to the social default—either their action-oriented teams will likely spend only a moment or two defining the problem and the rest of the meeting trying to solve it, or everyone will start suggesting solutions to their version of the problem. Either way the meeting won’t be as useful as it should be.</p>
			<p class="x04-Body-Text">When you spend time trying to understand the problem, you realize that you have a room full of people who have insight that you don’t have. One way to keep meetings short and avoid the signaling that comes from repeating information that everyone knows is simply asking everyone, “What do you know about this problem that other people in the room don’t know?”</p>
			<p class="x04-Body-Text">That question makes people think. They stop filling the air with ideas everyone already knows and start explaining how they think about the problem.</p>
			<p class="x04-Body-Text">Not only do you start learning from each other, but you come to understand the problem at a deeper level because you start to see (and hopefully appreciate) different perspectives. Later, when you reconvene at the second meeting, the solutions often become obvious to everyone. And because everyone understands the problem, each person knows how to move their part of the organization in a way that solves it for everyone, <span epub:type="pagebreak" id="page_132" role="doc-pagebreak" title="132"/>not just themselves. An apocryphal quote often attributed to the philosopher Ludwig Wittgenstein sums up this idea: “To understand is to know what to do.”<a class="Footnote-Reference" epub:type="noteref" href="79_Footnote.xhtml#footnote_4" id="footnote-034-backlink" role="doc-noteref" title="footnote">[*]</a></p>
			<p class="x04-Body-Text">People go fast in operational environments. If you insert too much process into decisions, you miss the expiring windows of opportunity. But fast-paced environments are a feast for defaults. You need to slow down—but not too much—and use a combination of judgment, principles, and safeguards to make sure you’re getting to the best answer possible and thinking clearly. Probing and asking deeper questions slows down the process just enough to dramatically improve your chances of solving the right problem.</p>
			<p class="x04-Body-Text">Creating space between the definition of a problem and the solution to it works at a personal level too. Give yourself time to get clear on what the problem is before you jump into solving it. More often than not, you’ll discover that your first attempt to define the underlying issue is rarely the most accurate.</p>
			<aside>
				<p class="x10-Sidebar-Box-Text"><span class="_0-Sidebar-Box-Run-in">tip:</span> Remember that writing out the problem makes the invisible visible. Write down what you think the problem is, and then look at it the next day. If you find yourself using jargon in your description, it’s a sign that you don’t fully understand the problem. And if you don’t understand it, you shouldn’t be making a decision about it.</p>
			</aside>
			<p class="x04-Body-Text"><span epub:type="pagebreak" id="page_133" role="doc-pagebreak" title="133"/>Let’s move on to the second way of safeguarding this stage of the decision-making process.</p>
			<aside>
				<p class="x10-Sidebar-Box-Text"><span class="_0-Sidebar-Box-Run-in">safeguard:</span> <i class="TG-ITAL">Use the test of time.</i> Test whether you’re addressing the root cause of a problem, rather than merely treating a symptom, by asking yourself whether it will stand the test of time. Will this solution fix the problem permanently, or will the problem return in the future? If it seems like the latter, then chances are you’re only treating a symptom.</p>
			</aside>
			<p class="x04-Body-Text-FL">Suppose, for example, that Downtown Dog Rescue in Los Angeles had tried to solve its problem with overcrowding by hosting a spring dog-adoption campaign, rather than addressing one of the root causes: pet owners’ inability to continue caring for their dogs. The campaign might have succeeded in reducing the number of dogs the rescue housed at the time, but only temporarily. A few months later, the facility would have once again been overcrowded.</p>
			<p class="x04-Body-Text">Short-term solutions might make sense in the moment, but they never win in the long term. You feel like you’re moving forward when you’re actually just going in circles. People gravitate toward them because finding a short-term fix signals to others that they’re doing something. That’s the social default at work. It fools people into mistaking action for progress, the loudest voice for the right one, and confidence for competence. Time eventually reveals short-term solutions to be Band-Aids that cover deeper problems. Don’t be fooled!</p>
			<p class="x04-Body-Text">You can put your energy into short-term solutions or long-term solutions but not both. Any energy that’s channeled toward short-term solutions depletes energy that could be put into finding a long-term fix.<a class="Endnote-Reference" href="40_Notes.xhtml#EndnoteNumber33" id="SuperscriptNumber33" role="doc-noteref" title="note">[2]</a> Sometimes short-term solutions <span epub:type="pagebreak" id="page_134" role="doc-pagebreak" title="134"/>are necessary to create space for long-term solutions. Just make sure you’re not putting out flames in the present that will reignite in the future. When the same problem returns again and again, people end up exhausted and discouraged because they never seem to make real progress. Extinguish the fire today so it can’t burn you tomorrow.</p>
			<p class="x04-Body-Text">These principles, safeguards, and tips will keep you from jumping at the social default’s whim.</p>
		</div>
	</body>
</html>