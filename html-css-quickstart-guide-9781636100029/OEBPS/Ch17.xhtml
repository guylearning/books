<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:ibooks="http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0" epub:prefix="ibooks: http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0                z3998: http://www.daisy.org/z3998/2012/vocab/structure/#" lang="en-US" xml:lang="en-US">

<head>
  <title>htmlcss_epub-23</title>
  <link href="css/idGeneratedStyles.css" rel="stylesheet" type="text/css"/>
<meta content="urn:uuid:e0000000-0000-0000-0000-000006605679" name="Adept.expected.resource"/>
</head>

<body id="htmlcss_epub-23" lang="en-US">

  <div>

    <h2 class="Chapter--" id="idParaDest-155"><a id="idTextAnchor446"/>| 17 | </h2>

    <p class="Chapter-Title" id="idParaDest-156"><a id="idTextAnchor447"/>What’s Next?</p>

    <div class="chapterOverview-wrap">

      <h3 class="chapterOverview-title"><b>Chapter Overview</b></h3>

      <ul class="marked">

        <li>

          <p class="marked-list-item">PHP, Python, and other backend languages process data.</p>

        </li>

        <li>

          <p class="marked-list-item">Web design is a dynamic field that constantly changes.</p>

        </li>

      </ul>

    </div>

    <p class="IntroParagraph">The web is full of emergent technologies, and no book can hope to cover everything about even the most current tools and frameworks. Now that you’ve learned about HTML and CSS and common workflows, it’s time to discuss a few specific technologies that are in use now and can empower you with resources and techniques to integrate new technologies as they are developed. </p>

    <p class="H2_Body">It’s important to note that most of the topics covered in this chapter are related to HTML and CSS but are vast subjects, and thorough coverage of them is beyond the scope of this book.</p>

    <h3 class="H2" id="idParaDest-157"><a id="idTextAnchor448"/>WordPress</h3>

    <p class="H2_Body">WordPress is a very popular and extremely powerful content management system. We’ve discussed it several times throughout the book, and in chapter 15 we covered the basics of how to add posts and pages and edit the template. Exploring the concepts and techniques of WordPress-centric web design is beyond the scope of this book, but you will likely use or at least encounter WordPress in your web design career, so it’s essential to have a good familiarity with its functionality.</p>

    <p class="H2_Body">While most users can add pages and posts using the simple editor in the administration panel, web designers will be able to edit the HTML and CSS used in the pages’ theme. WordPress themes have become expansive in their capabilities and customizations, but I’ve found that even in the most configurable themes, a few lines of CSS are still needed to achieve the look and feel I’m trying to achieve.</p>

    <h3 class="H2" id="idParaDest-158"><a id="idTextAnchor449"/>JavaScript and jQuery</h3>

    <p class="H2_Body">JavaScript is a flexible and powerful programming language that your browser fully understands and can use to automate, process, and extend the functionality of HTML and CSS.</p>

    <p class="H2_Body">We’ve discussed where JavaScript lives in your overall website structure (usually in .js files in a <code class="CODE">js</code> folder, or sometimes in an <code class="CODE">assets</code> folder) and some of its capabilities. Like the other technologies in this chapter, we could easily fill several books covering JavaScript.</p>

    <p class="H2_Body">jQuery is a JavaScript framework that helps developers write clear, concise JavaScript code that works well on all major browsers. Before modern JavaScript frameworks, developers had to adjust for the variations in the implementation of JavaScript in each browser.</p>

    <p class="CODE_heading">CSS</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">17-01.css</p>

      <pre class="CODE_body">   #sale { color: red; }</pre>

    </div>

    <p class="CODE_heading">HTML</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">17-02.html</p>

      <pre class="CODE_body">   &lt;p id="sale"&gt;SALE STARTS TODAY&lt;/p&gt;</pre>

    </div>

    <p class="CODE_heading">JavaScript</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">17-03.js</p>

      <pre class="CODE_body">   // Show the sale paragraph</pre>

      <pre class="CODE_body">   $("sale").show();</pre>

      <pre class="CODE_body">   // Or hide it!</pre>

      <pre class="CODE_body">   $("sale").hide();</pre>

      <pre class="CODE_body">   // Change it to blue text</pre>

      <pre class="CODE_body">   $("sale").css("color", "blue");</pre>

    </div>

    <p class="H2_Body">This JavaScript code showcases a small sliver of functionality from jQuery. In each line, the paragraph with the id of sale is addressed as an object. An object is a programming term for an instance of a collection of related program variables and functions. Those functions related to that object (that is, show, hide, and css), allow you to show, hide, and change CSS elements of that paragraph.</p>

    <p class="H2_Body">Each of these lines of code can be bound to a particular event on the page. For example, jQuery can monitor when a user clicks a button.</p>

    <p class="CODE_heading">HTML</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">17-04.html</p>

      <pre class="CODE_body">   &lt;input id="toggle" type="button" name="toggle" value="Toggle Sale"&gt;</pre>

    </div>

    <p class="CODE_heading">JavaScript</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">17-05.js</p>

      <pre class="CODE_body">   $("#toggle").click(function() {</pre>

      <pre class="CODE_body">   $("#sale").toggle();</pre>

      <pre class="CODE_body">   });</pre>

    </div>

    <p class="H2_Body">In this example, when the user clicks the “Toggle Sale” button, the “toggle” function on the “sale” object is called, triggering the element to display if it is currently hidden and hide if it is presently shown.</p>

    <h3 class="H2" id="idParaDest-159"><a id="idTextAnchor455"/>Backend Languages Like PHP and Python</h3>

    <p class="H2_Body">We’ve hinted at the power of backend languages like PHP and Python. Let’s explore them in more detail.</p>

    <p class="H3">PHP</p>

    <p class="H3_Body">For a long time, PHP was an extremely popular backend programming language. It still is, especially since it powers popular CMS software like WordPress. PHP lets WordPress process user input and retrieve content from a MySQL database.</p>

    <p class="H3_Body">PHP has a relatively straightforward syntax that can be easily mixed with HTML code, making it a popular choice for web designers. PHP code is contained within <code class="CODE">&lt;?php</code> and <code class="CODE">?&gt;</code> marks in a .php file, but HTML code can be used outside of those delimiters.</p>

    <p class="H3_Body">Form input fields can be accessed and used easily:</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">17-06.php</p>

      <pre class="CODE_body">   Your name is &lt;?php echo $_REQUEST['name']; ?&gt;.</pre>

    </div>

    <p class="H3_Body">If a contact form has a name input box and the action is set to a file with this code with a .php extension, the text “Your name is David” will appear (provided you enter “David” in the input box called “name.”</p>

    <p class="H3_Body">Coding a form in this way requires PHP on the web server, but many web servers, especially Linux-based web servers, already have this installed.</p>

    <p class="H3">Python</p>

    <p class="H3_Body">Python is a modern, object-oriented programming language. An object-oriented language uses special structures called <span class="italic idGenCharOverride-2">classes</span> (not to be confused with HTML/CSS classes). When we discussed jQuery, we referenced the sale paragraph as an object. In programming languages like Python and JavaScript, classes act like templates for objects, allowing developers to organize variables and functionality logically. </p>

    <p class="H3_Body">Python has a cleaner syntax and a wide assortment of modules that can be integrated into the language to extend its functionality. It also requires proper indentation in code, enforcing readable source.</p>

    <p class="H3_Body">Unlike PHP, Python requires a bit more than just a .py file in order to run on a web server. Special configuration is needed to either spawn the Python script when the visitor accesses the code or run the program and have it listen for requests from the web server. A web host specializing in Python will be able to configure this for you.</p>

    <h3 class="H2" id="idParaDest-160"><a id="idTextAnchor457"/>David’s Perfect Cup</h3>

    <p class="H2_Body">You have dramatically improved the ClydeBank Coffee Shop website over the course of this book.</p>

    <p class="H2_Body">As I may have mentioned a few chapters back, the hard work and dedication you have undoubtedly shown by learning HTML and CSS has motivated me to take a crack at redesigning the ClydeBank Coffee Shop website. I threw in some extra little bells and whistles that you can explore on your own time. I’ve put all of my web design files in a repository called “David’s Perfect Cup.” You can find it on our GitHub site here: <a href="https://github.com/clydebankmedia/davids-perfect-cup">www.github.com/clydebankmedia/davids-perfect-cup</a>.</p>

    <p class="H2_Body">As a final exercise, why not brew your own perfect coffee shop website? You can use mine as a guide or let your creativity run wild and do something completely unique. The choice is yours.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">We want to see your work. Please share your HTML and CSS creations with us on social media using the hashtag #CBM-HTML. </p>

    </div>

    <div class="chapterRecap-wrap">

      <h2 class="chapterRecap-title"><b>Chapter Recap</b></h2>

      <ul class="marked">

        <li>

          <p class="marked-list-item margin-bottom-s">Backend languages like PHP and Python help process data, interface with a database, and display dynamic content.</p>

        </li>

        <li>

          <p class="marked-list-item margin-bottom-s">Web design, like most topics in information technology, is an exciting field that encourages never-ending learning.</p>

        </li>

      </ul>

    </div>

  </div>

</body>

</html>