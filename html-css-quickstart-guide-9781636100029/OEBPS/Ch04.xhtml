<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:ibooks="http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0" epub:prefix="ibooks: http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0                z3998: http://www.daisy.org/z3998/2012/vocab/structure/#" lang="en-US" xml:lang="en-US">

<head>
  <title>htmlcss_epub-8</title>
  <link href="css/idGeneratedStyles.css" rel="stylesheet" type="text/css"/>
<meta content="urn:uuid:e0000000-0000-0000-0000-000006605679" name="Adept.expected.resource"/>
</head>

<body id="htmlcss_epub-8" lang="en-US">

  <div>

    <h2 class="Chapter--" id="idParaDest-40"><a id="idTextAnchor037"/>| 4 | </h2>

    <p class="Chapter-Title" id="idParaDest-41"><a id="idTextAnchor038"/>HTML Structure</p>

    <div class="chapterOverview-wrap">

      <h3 class="chapterOverview-title"><b>Chapter Overview</b></h3>

      <ul class="marked">

        <li>

          <p class="marked-list-item">HTML elements have tags and attributes.</p>

        </li>

        <li>

          <p class="marked-list-item">Comments do not render on the page.</p>

        </li>

        <li>

          <p class="marked-list-item">Elements are nested.</p>

        </li>

      </ul>

    </div>

    <p class="IntroParagraph">Before we begin creating an HTML document, let’s look at the components that make up an HTML page. As previously mentioned, HTML documents are essentially text documents that contain content marked up to give instructions to the browser.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">Hopefully, by now, you have chosen your preferred text editor and web browser. As we venture into part II of this book, be sure to have these tools handy. It is best to practice these skills as you learn them!</p>

    </div>

    <h3 class="H2" id="idParaDest-42"><a id="idTextAnchor039"/>Elements</h3>

    <p class="H2_Body">In our breakdown of HTML structure presented in chapter 1, we looked at the fundamental building block of HTML, the element (figure 36).</p>

    <div class="whitebox">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img alt="" class="w-100" src="image/graphicLogo036.jpg"/>

        <img alt="" class="w-60" src="image/23.jpg"/>

      </figure>

    </div>

    <p class="H2_Body">Elements can be easily added to fit the needs of our website. For example, if our page had a lot of text, we would have multiple elements for different sections, articles, headers, and footers. On more graphical sites, we would have image elements, embedded sound, and possibly video elements as well. Any content we have on the page will be placed within opening and closing tags that identify the content inside them.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">You may see some HTML elements you don’t recognize in some of our examples. Don’t worry—we’ll address them. For now, they serve to illustrate the point in this section.</p>

    </div>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-01.html</p>

      <pre class="CODE_body">&lt;!DOCTYPE html&gt;</pre>

      <pre class="CODE_body">&lt;html&gt;</pre>

      <pre class="CODE_body">   &lt;body&gt;</pre>

      <pre class="CODE_body">   &lt;h1&gt;This is a Heading&lt;/h1&gt;</pre>

      <pre class="CODE_body">   &lt;p&gt;And this is a paragraph of text.&lt;/p&gt;</pre>

      <pre class="CODE_body">   &lt;section&gt;</pre>

      <pre class="CODE_body">      &lt;h2&gt;Here is a Section Heading&lt;/h2.&gt;</pre>

      <pre class="CODE_body">      &lt;p&gt;And here is a paragraph within a section.&lt;/p&gt;</pre>

      <pre class="CODE_body">   &lt;/section&gt;</pre>

      <pre class="CODE_body">   &lt;/body&gt;</pre>

      <pre class="CODE_body">   &lt;/html&gt;</pre>

    </div>

    <div class="whitebox">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img alt="" class="w-100" src="image/graphicLogo037.jpg"/>

        <img alt="" class="w-100" src="image/Figure37.jpg"/>

      </figure>

    </div>

    <p class="H3">Tags</p>

    <p class="H3_Body">As we see in figure 37, every element is composed of opening and closing tags that define the beginning and end of the element. The content of an element depends on the type.</p>

    <p class="H3_Body">Regardless of the content, most elements will have an opening tag and a closing tag.</p>

    <p class="H3_Body">For example, let’s look at the <code class="CODE">&lt;html&gt;</code> element. All other HTML elements are listed inside the <code class="CODE">&lt;html&gt;</code> element. It is therefore considered the “highest level” element on the HTML page. As with every other element, the <code class="CODE">&lt;html&gt;</code> tag is enclosed between “&lt;” and “&gt;” brackets. The opening tag is <code class="CODE">&lt;html&gt;</code>, and the closing tag is identical except for the use of a “/” to designate the end of a block, like this: <code class="CODE">&lt;/html&gt;</code>. All the content of the <code class="CODE">&lt;html&gt;</code> element (including whole other elements) exists inside of these tags. </p>

    <div class="whitebox">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img alt="" class="w-100" src="image/graphicLogo038.jpg"/>

        <img alt="" class="w-100" src="image/24.jpg"/>

      </figure>

    </div>

    <p class="H3_Body">As seen in figure 38, “html” tags, <code class="CODE">&lt;html&gt;</code> and <code class="CODE">&lt;/html&gt;</code>, define the beginning and end of all content on an HTML page. In other words, everything on an HTML page falls between these two tags (except for the <code class="CODE">DOCTYPE</code> tag, which we will cover later in this chapter).</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">While HTML is not case-sensitive (browsers don’t care whether a word is typed in upper or lowercase letters), it is good practice to use a consistent style. It is considered best practice for most element types to be written in lowercase. In general, most developers agree that lowercase is easier to read and easier to type. While the <code class="CODE">DOCTYPE</code> tag is often found typed in all caps, there’s no hard-and-fast rule underlying this trend. Sometimes you may see elements written in camel case (e.g., camelCase), but most of the time that is reserved for other programming elements on a page, such as JavaScript. It is highly recommended that you use lowercase element types.</p>

    </div>

    <p class="H3">Attributes</p>

    <p class="H3_Body">Many elements need additional information, which we call <span class="glossaryterm idGenCharOverride-1">attributes</span>. Attributes allow coders to assign additional options to a tag. We say <span class="italic idGenCharOverride-2">tag</span> and not <span class="italic idGenCharOverride-2">element</span> because attributes are applied to the opening tag of an element, not the ending tag. If we think of a sentence as being composed of a subject, a verb, and an object, we can think of attributes as adjectives or adverbs; they are descriptive of a tag. Even though we only insert attributes in the opening tag, those attributes apply to the entire element.</p>

    <p class="H3_Body">Let’s use our <code class="CODE">&lt;html&gt;</code> tag as an example and add a language attribute:</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-02.html</p>

      <pre class="CODE_body">   &lt;html lang="en"&gt;</pre>

      <pre class="CODE_body">   &lt;/html&gt;</pre>

    </div>

    <p class="H3_Body">Here we state that the HTML document will be in English. This is not a required attribute, because English is defined by default, but this is how one would indicate that an HTML document is in a different language.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">You can find abbreviations for other languages, and what to do when multiple languages are used, on the World Wide Web Consortium at <a href="https://www.w3.org/">www.w3.org</a>. </p>

    </div>

    <p class="H3_Body">Attribute tags can also set the class or id of an element. The HTML tag <code class="CODE">&lt;div&gt;&lt;/div&gt;</code>, short for “division,” is used to define and delineate special sections of HTML. </p>

    <p class="H3_Body">In this example…</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-03.html</p>

      <pre class="CODE_body">   &lt;div class="callout"&gt;</pre>

      <pre class="CODE_body">   &lt;/div&gt;</pre>

    </div>

    <p class="H3_Body">…the class of the div is “callout.”</p>

    <p class="H3_Body">All attribute tags take the following format: <code class="CODE">name="value"</code>, where name is the name of the attribute (in this case, “class”) and “value” is the value given to the element.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/rememberLogo.png"/>

      </figure>

      <p class="Note">You can name classes whatever you wish, but for easy future reference it is a good idea to give them meaningful names that fit their intended purpose. </p>

    </div>

    <h3 class="H2" id="idParaDest-43"><a id="idTextAnchor040"/>Comments</h3>

    <p class="H2_Body">Often you will want to leave notes or comments for your own reference in your HTML text editor. These notes may relate to the handling of the project, coding strategies, or future follow-up tasks. You want the notes to be visible to you and your team members, but you obviously do not want them visible on the web page itself. </p>

    <p class="H2_Body">Comments can be entered by enclosing them in <code class="CODE">&lt;!-- --&gt;</code></p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-05.html</p>

      <pre class="CODE_body">&lt;p&gt;</pre>

      <pre class="CODE_body">  This text will show on the page inside a paragraph.</pre>

      <pre class="CODE_body">  &lt;!-- This is a comment and will not show on the page --&gt;</pre>

      <pre class="CODE_body">  This will appear. </pre>

      <pre class="CODE_body">&lt;/p&gt;</pre>

    </div>

    <p class="H2_Body">Comments are particularly helpful when one is working with a team.</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-06.html</p>

      <pre class="CODE_body">   &lt;!-- Sarah will code this section on Friday, and Jason will code the following section next week. Remember to consult the HTML CSS QuickStart Guide while you work. It’s a great tool! --&gt; </pre>

    </div>

    <p class="H2_Body">Comments can also help you distinguish between sections of the page.</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-07.html</p>

      <pre class="CODE_body">&lt;!-- We will feature our fall products in this section --&gt;</pre>

    </div>

    <h3 class="H2" id="idParaDest-44"><a id="idTextAnchor041"/>HTML Document Format (Basic Structure)</h3>

    <p class="H2_Body">HTML pages are generally built with a consistent structure with a few main sections. The first item you will encounter when looking at an HTML page is a declaration known as <code class="CODE">&lt;!DOCTYPE html&gt;</code>. A “declaration” is a statement included at the beginning of a piece of code that tells the browser (or compiler in the case of other coding languages) useful information about the nature of the following code. In this case, the DOCTYPE declaration tells a browser to expect an HTML5 document. This is followed by the <code class="CODE">&lt;html&gt;</code> designation, which contains all useful information about the page as well as any content.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">Past versions of HTML had differently worded DOCTYPE declarations.</p>

    </div>

    <p class="H2_Body">At its most rudimentary level, the content of a web page contains these elements:</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-08.html</p>

      <pre class="CODE_body">&lt;!DOCTYPE html&gt;</pre>

      <pre class="CODE_body">&lt;html&gt;</pre>

      <pre class="CODE_body">   &lt;head&gt;</pre>

      <pre class="CODE_body">   &lt;/head&gt;</pre>

      <pre class="CODE_body">   &lt;body&gt;</pre>

      <pre class="CODE_body">   &lt;/body&gt;</pre>

      <pre class="CODE_body">&lt;/html&gt;</pre>

    </div>

    <p class="H2_Body">You may notice there are two other elements, <code class="CODE">&lt;head&gt;&lt;/head&gt;</code> and <code class="CODE">&lt;body&gt;&lt;/body&gt;</code>, contained within <code class="CODE">&lt;html&gt;&lt;/html&gt;</code>. Because the tags of these two elements open and close within the <code class="CODE">&lt;html&gt;&lt;/html&gt;</code> element, these elements are said to be child elements of the <code class="CODE">&lt;html&gt;&lt;/html&gt;</code> element. Child elements are usually indented in the text editor so that anyone viewing the code can easily see how they relate to the overall hierarchical structure. </p>

    <p class="H2_Body">Let’s look at a more detailed and fleshed-out example of HTML code to better see all of these elements in action:</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-09.html</p>

      <pre class="CODE_body">&lt;!DOCTYPE html&gt;</pre>

      <pre class="CODE_body">&lt;html lang="en"&gt;</pre>

      <pre class="CODE_body">   &lt;head&gt;</pre>

      <pre class="CODE_body">      &lt;meta charset="utf-8"&gt;</pre>

      <pre class="CODE_body">      &lt;title&gt;My First Lorem Ipsum Web Page&lt;/title&gt;</pre>

      <pre class="CODE_body">      &lt;meta description="This is my first web page!"&gt;</pre>

      <pre class="CODE_body">   &lt;/head&gt;</pre>

      <pre class="CODE_body">   &lt;body&gt;</pre>

      <pre class="CODE_body">      &lt;h1&gt;Header Lorem&lt;/h1&gt;</pre>

      <pre class="CODE_body">      &lt;p&gt;</pre>

      <pre class="CODE_body">      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. </pre>

      <pre class="CODE_body">      &lt;/p&gt;</pre>

      <pre class="CODE_body">      &lt;p&gt;</pre>

      <pre class="CODE_body">      Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. </pre>

      <pre class="CODE_body">      &lt;/p&gt;</pre>

      <pre class="CODE_body">      &lt;p&gt;</pre>

      <pre class="CODE_body">      Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris. Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus.      </pre>

      <pre class="CODE_body">      &lt;p&gt;      </pre>

      <pre class="CODE_body">   &lt;/body&gt;</pre>

      <pre class="CODE_body">&lt;/html&gt;</pre>

    </div>

    <p class="H3">&lt;!doctype html&gt; </p>

    <p class="H3_Body">As previously mentioned, the <code class="CODE">DOCTYPE</code> declaration appears before anything else at the top of the document. You can think of a declaration as a message to the reader (in this case, the browser) that explains the code that follows. For example, if you were reading a book in Old English, there might be a statement at the beginning of the book saying, “This book is written in an archaic form of English. You may encounter odd spellings or word usage.” That’s all a declaration is: an alert to the browser.</p>

    <p class="H3_Body">In older versions of HTML, this tag was considerably longer, but it was greatly simplified in HTML5. You must use this if you plan to use HTML5-specific elements, or you may get strange results from some web browsers.</p>

    <p class="H3_Body">In this chapter, and in many long-form examples throughout this book, we’ll display the <code class="CODE">DOCTYPE</code> declaration in code samples, but in shorter samples it will be omitted. A wavy line like this <code class="CODE">~</code> will denote the omission of this boilerplate code.</p>

    <p class="H3">html</p>

    <p class="H3_Body">After the <code class="CODE">DOCTYPE</code> declaration, all content on the page lies between a beginning <code class="CODE">&lt;html&gt;</code> tag and a closing <code class="CODE">&lt;/html&gt;</code> tag. The HTML element serves as a container for the rest of the code on the page.</p>

    <p class="H3">Head</p>

    <p class="H3_Body">The head tag contains the <code class="CODE">&lt;title&gt;</code> tag and metadata for the web page. The title tag gives the document a name, and metadata provides the browser and search engines with additional information. The title is used in the name of a window, tab, or bookmark, but the metadata is not directly shown to the user (except, possibly, in search engine results). If the title isn’t set, then the browser will use the name of the HTML file (for example, <code class="CODE">index.html)</code>.</p>

    <p class="H3_Body">The head element also contains information that helps the browser properly display the page, and it provides a first chance to include any CSS or JavaScript. </p>

    <p class="H3_Body">Let’s take a closer look:</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">04-10.html</p>

      <pre class="CODE_body">   &lt;head&gt;</pre>

      <pre class="CODE_body">      &lt;meta charset="utf-8"&gt;</pre>

      <pre class="CODE_body">      &lt;title&gt;My First Lorem Ipsum Web Page&lt;/title&gt;</pre>

      <pre class="CODE_body">      &lt;meta description="This is my first web page!"&gt;</pre>

      <pre class="CODE_body">   &lt;/head&gt;</pre>

    </div>

    <p class="H3_Body">In this example, there are a total of three tags within the head element: the title tag and two meta tags with different attributes. Meta tags are self-contained elements that only have the required information in an HTML attribute.</p>

    <p class="H3_Body">Let’s examine the two meta tags we used in this example.</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <pre class="CODE_body">&lt;meta charset="utf-8"&gt;</pre>

    </div>

    <p class="H3_Body">Here, we define the character set of the document. In our example, we select UTF-8, which includes characters you’ll find in most European languages like English, Spanish, German, French, and Portuguese.</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <pre class="CODE_body">&lt;meta description="This is my first web page!"&gt;</pre>

    </div>

    <p class="H3_Body">This meta tag gives search engines a description of the document. While not required, it helps with search engine rankings and should be defined when possible.</p>

    <p class="H3">Body</p>

    <p class="H3_Body">The <code class="CODE">&lt;body&gt;&lt;/body&gt;</code> element includes everything that will be visible in the browser window.</p>

    <h3 class="H2" id="idParaDest-45"><a id="idTextAnchor042"/>Nesting</h3>

    <p class="H2_Body">It is important that HTML programmers avoid improper overlapping of tags. All child tags should be closed before you proceed to close the parent tags. For example, the following code will not work correctly:</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <pre class="CODE_body">   &lt;html lang="en"&gt;</pre>

      <pre class="CODE_body">   &lt;head&gt;</pre>

      <pre class="CODE_body">   &lt;/head&gt;</pre>

      <pre class="CODE_body">   &lt;body&gt;</pre>

      <pre class="CODE_body">   &lt;/html&gt;</pre>

      <pre class="CODE_body">   &lt;/body&gt;</pre>

    </div>

    <p class="H2_Body">In this example, the body tag is being closed after the last html tag. This is incorrect because elements must be closed in a last-in-first-out order. In other words, you cannot close a parent tag without making sure the child tags are closed.</p>

    <p class="H2_Body">While some browsers are more forgiving than others of mistakes in HTML code, your results will likely be unpredictable if you don’t follow these structures.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img class="w-100" src="image/noteLogo.png"/>

      </figure>

      <p class="Note">In the examples, I have indented all nested content. This is not required for the browser to understand the code, but it makes the code a lot easier for a human to read and debug. Proper indentation is considered a best practice, but don’t worry if your indentation isn’t perfect. There are even some tools, such as DirtyMarkup, that will fix indents for you.</p>

    </div>

    <h3 class="H2" id="idParaDest-46"><a id="idTextAnchor043"/>Putting It All Together</h3>

    <p class="H2_Body">Returning to our main snippet of sample code from earlier in this chapter, “My First Lorem Ipsum Web Page,” let’s open it up in a browser and see how it looks.</p>

    <div class="whitebox">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img alt="" class="w-100" src="image/graphicLogo039.jpg"/>

        <img alt="" class="w-100" src="image/figure39.jpg"/>

      </figure>

    </div>

    <p class="H2_Body">You’ll note there is no styling in figure 39. The only things we see are the title (in the browser tab), a header, and three paragraphs. The font is the browser’s default font (typically Times New Roman). A font isn’t the same as a character set and can be defined in CSS—we’ll cover that in chapter 8.</p>

    <p class="H2_Body">You’ve just built your first web page and displayed it in your web browser!</p>

    <div class="oyo">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/oyoLogo.jpg"/>

      </figure>

      <p class="Image-Line">

        <img alt="" class="idGenObjectAttribute-1" src="image/25.jpg"/>

      </p>

      <p class="CBC_Heading">Adding a Description and Fixing the Title</p>

      <p class="H2_Body">It’s time to resume your role as HTML/CSS programmer as we attempt to spruce up the website of a fictitious business—ClydeBank Coffee Shop.</p>

      <div class="standard-box">

        <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

          <img class="w-100" src="image/downloadLogo.png"/>

        </figure>

        <p class="Note">If you haven’t yet downloaded the ClydeBank Coffee Shop website, please do so from <a href="https://github.com/clydebankmedia/clydebank-coffee-shop">www.github.com/clydebankmedia/clydebank-coffee-shop</a>. See appendix V for detailed instructions.</p>

      </div>

      <p class="H2_Body">Our client states that their website doesn’t rank well in search engines. Although a wide variety of techniques could address this, the most obvious thing we can fix is the lack of a meta description tag.</p>

      <p class="H2_Body">In the <code class="CODE">index.html</code> file, we’ll see these items nested within the <code class="CODE">&lt;head&gt;</code> element:</p>

      <div class="white2">

        <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

          <img class="w-100" src="image/snipetLogo.jpg"/>

        </figure>

        <p class="snippet">04-11.html</p>

        <pre class="CODE_body">   &lt;head&gt;</pre>

        <pre class="CODE_body">      &lt;meta charset="utf-8"&gt;</pre>

        <pre class="CODE_body">      &lt;meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"&gt;</pre>

        <pre class="CODE_body">      &lt;title&gt;Home&lt;/title&gt;</pre>

        <pre class="CODE_body">      &lt;link rel="stylesheet" type="text/css" href="css/style.css"&gt;</pre>

        <pre class="CODE_body">   &lt;/head&gt;</pre>

      </div>

      <p class="H2_Body">Open your <code class="CODE">index.html</code> file for the coffee shop site in your code editor. Replace “Home” with the page title “ClydeBank Coffee Shop,” and then, using the appropriate code, add the meta description “ClydeBank Coffee Shop features premium coffee at an affordable price.” Save your changes. If you aren’t sure how to do this, you may need to spend some time reviewing this chapter, especially the “head” subsection. You can also reference appendix V for a walk-through, but I recommend you try it first on your own.</p>

      <p class="H2_Body">Once this change has been made, search engines will better understand our page and present it in the search results in a friendlier fashion. You can verify the change by reloading the page in your browser and noting the title of the tab. It should now say “ClydeBank Coffee Shop” instead of “Home.” The meta description doesn’t show on the web page itself, but you can verify this change was made by viewing the source in the browser (usually CTRL+U) and examining the head element.</p>

    </div>

    <div class="chapterRecap-wrap">

      <h2 class="chapterRecap-title"><b>Chapter Recap</b></h2>

      <ul class="marked">

        <li>

          <p class="marked-list-item margin-bottom-s">HTML is composed of elements and content within the elements, delineated between tags.</p>

        </li>

        <li>

          <p class="marked-list-item margin-bottom-s">Comments in HTML aren’t shown to the end user but are helpful for notetaking and team projects.</p>

        </li>

        <li>

          <p class="marked-list-item margin-bottom-s">An HTML document contains a DOCTYPE declaration, an html element, a head element, and the body element, which contains all visible content on the page.</p>

        </li>

        <li>

          <p class="marked-list-item margin-bottom-s">HTML elements are nested together to form logical structures.</p>

        </li>

      </ul>

    </div>

  </div>

</body>

</html>