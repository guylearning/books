<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:ibooks="http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0" epub:prefix="ibooks: http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0                z3998: http://www.daisy.org/z3998/2012/vocab/structure/#" lang="en-US" xml:lang="en-US">

<head>
  <title>htmlcss_epub-28</title>
  <link href="css/idGeneratedStyles.css" rel="stylesheet" type="text/css"/>
<meta content="urn:uuid:e0000000-0000-0000-0000-000006605679" name="Adept.expected.resource"/>
</head>

<body id="htmlcss_epub-28" lang="en-US">

  <div>

    <h2 class="Chapter--" id="idParaDest-168"><a id="idTextAnchor470"/>Appendix III </h2>

    <p class="Chapter-Sub-title"><a id="idTextAnchor471"/>Sizing Units</p>

    <p class="IntroParagraph">As discussed in chapter 7, CSS provides a great deal of flexibility in how we assign size, padding, margins, and positions to our elements. Several different units of measurement are available to determine the size of anything on a web page—font size, margins, spacing, padding, proportions of elements, and more. Units of measurement can be used independently or in conjunction with one another.</p>

    <h3 class="H2" id="idParaDest-169"><a id="idTextAnchor472"/>Pixels</h3>

    <p class="H2_Body">Pixels, or px, are finite points in an image. They are the smallest element of an image and thus define the exact size of the target element.</p>

    <div class="standard-box">

      <figure class="horizontal-image-wrap" epub:type="z3998:figure">

        <img alt="" class="w-100" src="image/exampleLogo.png"/>

      </figure>

      <p class="H3_Body">An HTML coder wants to display an image at a specific size. He uses pixels to quantify his desired sizing specifications:  </p>

      <div class="white2">

        <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

          <img class="w-100" src="image/snipetLogo.jpg"/>

        </figure>

        <p class="snippet">A-01.css</p>

        <pre class="CODE_body">   img {</pre>

        <pre class="CODE_body">      width: 400px;</pre>

        <pre class="CODE_body">      height: 600px; </pre>

        <pre class="CODE_body">   }</pre>

      </div>

    </div>

    <h3 class="H2" id="idParaDest-170"><a id="idTextAnchor473"/>Percent</h3>

    <p class="H2_Body">Percent, designated by the <code class="CODE">%</code> character, can be used to create flexible items, which will expand or shrink to fit the size of a container. </p>

    <p class="H2_Body">For instance, if we want to have an image that resizes automatically, we can set the width to be 100%. Setting the height to <code class="CODE">auto</code> will ensure that the image remains correctly proportioned.</p>

    <div class="white2">

      <figure class="horizontal-image-wrap2" epub:type="z3998:figure">

        <img class="w-100" src="image/snipetLogo.jpg"/>

      </figure>

      <p class="snippet">A-02.css</p>

      <pre class="CODE_body">   img {</pre>

      <pre class="CODE_body">      width: 100%;</pre>

      <pre class="CODE_body">      height: auto; </pre>

      <pre class="CODE_body">   }</pre>

    </div>

    <h3 class="H2" id="idParaDest-171"><a id="idTextAnchor475"/>vw and vh</h3>

    <p class="H2_Body">Since users view web pages on devices of varying size—laptop computers, tablets, smartphones—we often use “responsive design” sizing units, which will tailor their effects in response to the size of the viewport, or viewing area. </p>

    <p class="H2_Body">The viewport width (vw) and viewport height (vh) units are used to specify how an element will appear in relation to the device (the viewport). The easiest way to understand these units is to think of them as similar to “percent,” but instead of being relative to a defined element, they are relative to the screen or viewport itself.</p>

    <p class="H2_Body">1 vw is equal to 1/100, or 1%, of the viewport’s width. Similarly, 1 vh equals 1/100 of the viewport’s height.</p>

    <h3 class="H2" id="idParaDest-172"><a id="idTextAnchor476"/>em/rem</h3>

    <p class="H2_Body">As described in chapter 8, em is a type of relative formatting that specifies a font size in relation to the current font-size setting. The measurement is simply a multiple of the current size. For example, 1.5 em is equal to 1.5 times the current font size.</p>

    <p class="H2_Body">The rem unit is similar, but instead of being relative to the current font size, rem relates to the root (HTML) element, meaning that any setting of rem will be in relationship to the top level and not the current element.</p>

  </div>

</body>

</html>