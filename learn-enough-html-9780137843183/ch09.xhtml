<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Learn Enough HTML, CSS and Layout to Be Dangerous: An Introduction to Modern Website Creation and Templating Systems</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="9780137843053.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><section epub:type="chapter">
<h2 class="chap-num" id="ch09"><span epub:type="pagebreak" id="page_251"></span>Chapter 9</h2>
<h2 class="chap-title">Laying It All Out</h2>
<p class="noindent">Now that we’ve got a good base of CSS knowledge, it’s time to learn how to put everything together into a real website. This chapter and the next is where we really kick things into high gear, with material you’re unlikely to see in any other CSS tutorial. To get started, our first step will be to transform our previous work into a more manageable set of <em>templates</em> and <em>page layouts</em> that can be easily reused and updated (in accordance with the DRY principle (<a href="ch05.xhtml#box5_2">Box 5.2</a>)).</p>
<p class="indent">Along the way, we’ll add more styling as a way to learn more complex aspects of CSS, while refining our design to be more suitable for use as a personal or business website. Combined with <a href="ch10.xhtml#ch10">Chapter 10</a>, the result will be a professional-grade example that shows a variety of aspects of modern site design.</p>
<section>
<h3 class="h3" id="sec9_1">9.1 Layout Basics</h3>
<p class="noindent">There are an infinite number of ways that you can design content layouts for the Web, but over the years certain conventions have become common to many sites, as shown in <a href="ch09.xhtml#ch9fig1">Figure 9.1</a>. These may include elements like a header that contains site navigation and a logo (which typically links to the homepage); a hero section (<a href="ch07.xhtml#sec7_7">Section 7.7</a>); paragraph-style content with optional asides; and a page footer containing repetition of some elements from the header, as well as things like links to About or Contact pages, privacy policy, etc. These commonalities are the result of years of trial and error, and by incorporating such familiar elements into our site, we help new visitors orient themselves and find what they’re looking for.</p>
<figure class="figure" id="ch9fig1">
<img src="graphics/09fig01.jpg" alt="images" width="598" height="673"/>
<figcaption>
<p class="title-f"><strong>Figure 9.1:</strong> Elements of a typical web page.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_252"></span>One thing you may notice from <a href="ch09.xhtml#ch9fig1">Figure 9.1</a> is that many elements, such as the header and footer, are the same (or nearly the same) on every page of our site. If we made each page by hand, that would make our markup ridiculously repetitive—if we wanted to make a change, updating all those pages would be a nightmare.</p>
<p class="indent">This is an issue we faced repeatedly in <a href="part01.xhtml#part01">Part I</a>, where we simply copied and pasted common elements like navigation links onto every individual page. Such repetition is a violation of the DRY principle (<a href="ch05.xhtml#box5_2">Box 5.2</a>), and in <a href="ch03.xhtml#box3_2">Box 3.2</a> we promised to teach you how to use a <em>templating system</em> to solve this problem. In this section, we’ll fulfill this promise by installing and using the <em>Jekyll</em> static site generator to eliminate duplication in our layout.</p>
</section>
<section>
<h3 class="h3" id="sec9_2"><span epub:type="pagebreak" id="page_253"></span>9.2 Jekyll</h3>
<p class="noindent">When building a professional-grade website, it’s essential to use a system capable of supporting templates to eliminate duplication. To accomplish this, we’ll be using <em>Jekyll</em> (<a href="https://jekyllrb.com/">https://jekyllrb.com/</a>) (<a href="ch09.xhtml#ch9fig2">Figure 9.2</a><sup><a id="fn9_1a" href="ch09.xhtml#fn9_1">1</a></sup>), a free and open-source program for generating static websites (that is, sites that don’t change from visit to visit).<sup><a id="fn9_2a" href="ch09.xhtml#fn9_2">2</a></sup></p>
<figure class="figure" id="ch9fig2">
<img src="graphics/09fig02.jpg" alt="images" width="676" height="430"/>
<figcaption>
<p class="title-f"><strong>Figure 9.2:</strong> Not Jekyll and Hyde… rather, Jekyll the static site generator! (Poster image courtesy of BFA/Alamy Stock Photo.)</p>
</figcaption>
</figure>
<p class="footnote"><a id="fn9_1" href="ch09.xhtml#fn9_1a">1</a>. Poster image courtesy of BFA/Alamy Stock Photo.</p>
<p class="footnote"><a id="fn9_2" href="ch09.xhtml#fn9_2a">2</a>. Making <em>dynamic</em> sites that allow user registration, login, input, etc. requires using a full web application framework. In future Learn Enough tutorials, we’ll cover two such frameworks, Sinatra and Rails (in <em>Learn Enough Ruby to Be Dangerous</em> (<a href="https://www.learnenough.com/ruby">https://www.learnenough.com/ruby</a>) and the <em>Ruby on Rails Tutorial</em>, respectively).</p>
<p class="indent">By learning Jekyll, you’ll cultivate the skills needed to develop and deploy a real website—skills that are transferable to other static site generators (such as Middleman and Hugo) and to full-blown web frameworks (like Ruby on Rails (<a href="https://www.railstutorial.org/">https://www.railstutorial.org/</a>)). Learning the template language used by Jekyll (called <em>Liquid</em>) is also a valuable skill in itself, as Liquid is widely used in systems like the Shopify ecommerce platform.<sup><a id="fn9_3a" href="ch09.xhtml#fn9_3">3</a></sup></p>
<p class="footnote"><a id="fn9_3" href="ch09.xhtml#fn9_3a">3</a>. Indeed, as noted in <a href="ch09.xhtml#sec9_3">Section 9.3</a>, Liquid was originally developed by Shopify cofounder Tobi Lütke for exactly this purpose.</p>
<p class="indent"><span epub:type="pagebreak" id="page_254"></span>In addition to supporting templates, Jekyll also includes a bunch of other useful features:</p>
<ul class="bullet">
<li><p class="bullet">Write content in Markdown (the lightweight markup format we first discussed in <a href="ch06.xhtml#ch06">Chapter 6</a> of <em>Learn Enough Developer Tools to Be Dangerous</em>) in your text editor of choice.</p></li>
<li><p class="bullet">Write and preview your content on your site locally in your dev environment.</p></li>
<li><p class="bullet">Publish changes via Git (which also gives you an automatic off-site backup).</p></li>
<li><p class="bullet">Host your site for free on GitHub Pages.</p></li>
<li><p class="bullet">No database management.</p></li>
</ul>
<p class="indent">Originally developed by GitHub cofounder Tom Preston-Werner, Jekyll is used by millions of people around the world and is an industrial-strength tool for creating static websites. For example, the fundraising platform for U.S. President Barack Obama’s 2012 reelection campaign, which handled 81,548,259 pageviews and raised over $250 million, was built using Jekyll:</p>
<p class="blockquote"><em>By using Jekyll, we managed to avoid the complexity that comes with most CMSes (databases, server configuration) and instead were able to focus on things like optimizing the UI and providing a better user experience. To work in this environment, the most a front-end engineer had to learn was the Liquid template language that Jekyll uses, and boy is that simple.</em><sup><a id="fn9_4a" href="ch09.xhtml#fn9_4">4</a></sup></p>
<p class="footnote"><a id="fn9_4" href="ch09.xhtml#fn9_4a">4</a>. Originally published at <a href="http://kylerush.net/blog/meet-the-Obama-campaigns-250-million-fundraising-platform/">http://kylerush.net/blog/meet-the-Obama-campaigns-250-million-fundraising-platform/</a> (since removed). Quoted selection has been lightly annotated and copyedited.</p>
<section>
<h4 class="h4" id="sec9_2_1">9.2.1 Installing and Running Jekyll</h4>
<p class="noindent">Jekyll is written in the Ruby programming language, and is distributed as a Ruby <em>gem</em>, or self-contained package of Ruby code. As a result, installing Jekyll is easy once you have a properly configured Ruby development environment.</p>
<p class="indent">If your system is not already configured as a dev environment, you should consult <em>Learn Enough Dev Environment to Be Dangerous</em> (<a href="https://www.learnenough.com/dev-environment">https://www.learnenough.com/dev-environment</a>) at this time. This step might prove challenging, especially if you decide to configure your native system, but in the long run the effort is well worth the reward.</p>
<p class="indent"><span epub:type="pagebreak" id="page_255"></span>Once you’ve got a working dev environment, you can install Jekyll using <em>Bundler</em>, a manager for Ruby gems. We can install Bundler using the <span class="green-d"><code><strong>gem</strong></code></span> command, which comes with Ruby:</p>
<p class="codelink"><a href="ch09_images.xhtml#p255pro01a" id="p255pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> gem install bundler -v <span class="grey">2</span>.3.14</pre>
<p class="indent">Next, we need to create a so-called <span class="green-d"><code><strong>Gemfile</strong></code></span> to specify the Jekyll gem:</p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> touch Gemfile</pre>
<p class="noindent">Then use a text editor to fill the <span class="green-d"><code><strong>Gemfile</strong></code></span> with the contents shown in <a href="ch09.xhtml#ch9list1">Listing 9.1</a>.</p>
<p class="listing" id="ch9list1"><strong>Listing 9.1:</strong> Adding the Jekyll gem.<br/><code><em>Gemfile</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list01a" id="p09list01">Click here to view code image</a></p>
<pre class="pre2">source <span class="pd_red">'https://rubygems.org'</span>

gem <span class="pd_red">'jekyll</span>', <span class="pd_red">'4.2.2'</span>
gem <span class="pd_red">'webrick</span>', <span class="pd_red">'1.7.0'</span></pre>
<p class="noindent">If you run into any trouble, check the <span class="green-d"><code><strong>Gemfile</strong></code></span> at <a href="https://github.com/mhartl/mhartl.github.io">https://github.com/mhartl/mhartl.github.io</a> to see if it has been updated.</p>
<p class="indent">Finally, we can install the jekyll gem using <span class="green-d"><code><strong>bundle install</strong></code></span> (with a little extra code to ensure that we’re using the right version of Bundler):</p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> bundle _2.3.14_ install</pre>
<p class="indent">Although Jekyll is designed to work with a system of templates (<a href="ch09.xhtml#sec9_3">Section 9.3</a>), in fact it can work with a single file, such as our current <span class="green-d"><code><strong>index.html</strong></code></span>. To see how it works, we can run the Jekyll server in our project directory (using <span class="green-d"><code><strong>bundle exec</strong></code></span> to ensure that the right version of Jekyll gets run):</p>
<p class="codelink"><a href="ch09_images.xhtml#p255pro02a" id="p255pro02">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> bundle _2.3.14_ <span class="pd_green1">exec</span> jekyll serve</pre>
<p class="noindent">If you’re working on a native system or a virtual machine (as opposed to a cloud IDE), at this point the Jekyll app should be available at the URL <a href="http://localhost:4000">http://localhost:4000</a>, where localhost is the address of the local computer and 4000 is the <em>port number</em> (<a href="ch09.xhtml#box9_1">Box 9.1</a>). The result should look something like <a href="ch09.xhtml#ch9fig3">Figure 9.3</a>.</p>
<figure class="figure" id="ch9fig3">
<img src="graphics/09fig03.jpg" alt="images" width="676" height="158"/>
<figcaption>
<p class="title-f"><strong>Figure 9.3:</strong> No more URL pointing to a file—you’re running on a server now!</p>
</figcaption>
</figure>
<aside epub:type="sidebar" class="sidebar1" id="box9_1">
<p class="sb-title1"><span epub:type="pagebreak" id="page_256"></span><strong>Box 9.1: Server Ports</strong></p>
<p class="sb-noindent">If you look at the URL for the Jekyll site, you’ll notice that it ends in “:4000”. That is the <em>server port</em>. If you end a URL with a colon followed by a number, you are telling the browser to connect to that port on the server… so what does that mean?</p>
<p class="sb-indent">You can think of server ports as being like individual phone numbers for different services that run on a computer. The default port number for the World Wide Web is port 80, so <a href="http://www.learnenough.com:80">http://www.learnenough.com:80</a> is the same thing as <a href="http://www.learnenough.com">http://www.learnenough.com</a>, while the default port for a secure connection is 443, so <a href="https://learnenough.com:443">https://learnenough.com:443</a> is the same thing as <a href="https://learnenough.com">https://learnenough.com</a> (with <code>https</code> in place of <code>http</code>). Other common port numbers include 21 (<code>ftp</code>), 22 (<code>ssh</code>), and 23 (<code>telnet</code>).</p>
<p class="sb-indent">In the context of developing applications on a development machine, using port numbers allows us to solve the important problem of being able to run two or more apps simultaneously. Suppose, for example, that we wanted to run two different Jekyll websites on our development server. By default, both of them would be located at localhost:4000, but this would cause a conflict because the browser would have no way of knowing which site to serve when visiting that address. The solution is to add an extra piece of information, the port number, which allows the computer to distinguish between, say, app #1 running on localhost:4000 and app #2 running on localhost:4001.</p>
<p class="sb-indent">As noted above, Jekyll’s default server port is 4000, but we can set a different port number using the <code>--port</code> command-line option as follows:</p>
<p class="codelink"><a href="ch09_images.xhtml#p256pro01a" id="p256pro01">Click here to view code image</a></p>
<pre class="pre">$ bundle _2.3.14_ exec jekyll serve --port 4001</pre>
<p class="sb-noindent">To connect to this second server, we would then type localhost:4001 into our browser’s address bar.</p>
</aside>
<p class="indent"><span epub:type="pagebreak" id="page_257"></span>If you’re using the cloud IDE (<a href="https://www.learnenough.com/dev-environment-tutorial#sec-cloud_ide">https://www.learnenough.com/dev-environment-tutorial#sec-cloud_ide</a>) suggested in <em>Learn Enough Dev Environment to Be Dangerous</em>, you’ll have to pass options for the port number (<a href="ch09.xhtml#box9_1">Box 9.1</a>) and host IP number when running the <span class="green-d"><code><strong>jekyll</strong></code></span> command:</p>
<p class="codelink"><a href="ch09_images.xhtml#p257pro01a" id="p257pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> bundle _2.3.14_ <span class="pd_green1">exec</span> jekyll serve --port <span class="blue-dd">$PORT</span> --host <span class="blue-dd">$IP</span></pre>
<p class="noindent">Here <span class="green-d"><code><strong>$PORT</strong></code></span> and <span class="green-d"><code><strong>$IP</strong></code></span> should be typed in literally; they are <em>environment variables</em> provided by the cloud IDE to make the development site accessible on an external URL. Once the server is running, you can visit it by selecting Share and then clicking on the server URL, as shown in <a href="ch09.xhtml#ch9fig4">Figure 9.4</a>. The result, apart from the browser URL, should be the same as for the local system shown in <a href="ch09.xhtml#ch9fig3">Figure 9.3</a>. (For simplicity, in what follows we sometimes refer to localhost:4000, but users of the cloud IDE should use their personal URL instead. <em>Mutatis mutandis.</em>)</p>
<figure class="figure" id="ch9fig4">
<img src="graphics/09fig04.jpg" alt="images" width="676" height="260"/>
<figcaption>
<p class="title-f"><strong>Figure 9.4:</strong> Sharing the URL on the cloud IDE.</p>
</figcaption>
</figure>
<p class="indent">After starting the Jekyll server, you should find a new folder in your project called <span class="green-d"><code><strong>_site</strong></code></span> (with a leading underscore):</p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> ls
<span class="green-d">_site      index.html</span></pre>
<p class="noindent">This folder contains the output from the Jekyll server as it builds your site from the source files (currently just <span class="green-d"><code><strong>index.html</strong></code></span>).</p>
<p class="indent">The <span class="green-d"><code><strong>_site</strong></code></span> directory and all its contents are generated by Jekyll every time a file is saved, and if you were to make any changes in the <span class="green-d"><code><strong>_site</strong></code></span> folder, they will be automatically overwritten. As a result, you should never make changes in any of the <span epub:type="pagebreak" id="page_258"></span><span class="green-d"><code><strong>_site</strong></code></span> files themselves—they would only be overwritten by Jekyll. There’s nothing more frustrating than accidentally working on updates in an automatically generated folder, only to have your changes overwritten by an uncaring static site generator (<a href="ch09.xhtml#ch9fig5">Figure 9.5</a>).<sup><a id="fn9_5a" href="ch09.xhtml#fn9_5">5</a></sup></p>
<p class="footnote"><a id="fn9_5" href="ch09.xhtml#fn9_5a">5</a>. Image courtesy of mangostar/123RF.</p>
<figure class="figure" id="ch9fig5">
<img src="graphics/09fig05.jpg" alt="images" width="601" height="402"/>
<figcaption>
<p class="title-f"><strong>Figure 9.5:</strong> TFW changes accidentally made in generated files get overwritten.</p>
</figcaption>
</figure>
<p class="indent">Because all its content is generated by Jekyll, it’s a good idea to ignore the <span class="green-d"><code><strong>_site</strong></code></span> directory by adding it to your <span class="green-d"><code><strong>.gitignore</strong></code></span> file, and there’s a Bundler configuration directory called <span class="green-d"><code><strong>.bundle</strong></code></span> that should also be ignored:</p>
<p class="codelink"><a href="ch09_images.xhtml#p258pro01a" id="p258pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> <span class="pd_green1">echo</span> _site/ &gt;&gt; .gitignore
<span class="b-nilam"><strong>$</strong></span> <span class="pd_green1">echo</span> .bundle &gt;&gt; .gitignore
<span class="b-nilam"><strong>$</strong></span> git add .gitignore
<span class="b-nilam"><strong>$</strong></span> git commit -m <span class="pd_red">"Ignore the generated site and Bundler directories"</span></pre>
<p class="noindent">You should also add the <span class="green-d"><code><strong>Gemfile</strong></code></span> (and the associated auto-generated <span class="green-d"><code><strong>Gemfile.lock</strong></code></span> file) to the repository:</p>
<p class="codelink"><a href="ch09_images.xhtml#p258pro02a" id="p258pro02">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> git add -A
<span class="b-nilam"><strong>$</strong></span> git commit -m <span class="pd_red">"Add a Gemfile"</span></pre>
</section>
<section>
<h4 class="h4" id="sec9_2_2"><span epub:type="pagebreak" id="page_259"></span>9.2.2 Exercises</h4>
<ol class="number">
<li><p class="number">Try starting Jekyll on a non-standard port like <span class="green-d"><code><strong>1234</strong></code></span>.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_3">9.3 Layouts, Includes, and Pages (Oh My!)</h3>
<p class="noindent">One of the most powerful features of Jekyll is its ability to factor different parts of a website into reusable pieces. To accomplish this, Jekyll uses a system of folders and conventional names for files, along with a mini-language called <em>Liquid</em>. Originally developed by Tobi Lütke, cofounder of online store powerhouse Shopify,<sup><a id="fn9_6a" href="ch09.xhtml#fn9_6">6</a></sup> Liquid is a system for adding content to a site using what are in effect simple computer programs.</p>
<p class="footnote"><a id="fn9_6" href="ch09.xhtml#fn9_6a">6</a>. Tobi is also an alumnus of the Rails core team.</p>
<p class="indent">Files inside a Jekyll project can be static, meaning that they do not get processed by the Jekyll engine, or they can be dynamic and get constructed with Jekyll magic. (The <em>site</em> is still static because it consists of static files on the server, even if those files are generated dynamically by Jekyll. In other words, the files don’t change once they’ve been generated by Jekyll, so the results are the same for every visitor of the site.)</p>
<p class="indent">There are four main types of magic objects/files that the Jekyll engine can use in an automated way to build your site:</p>
<ul class="bullet">
<li><p class="bullet">Layouts/layout templates</p></li>
<li><p class="bullet">Includes</p></li>
<li><p class="bullet">Pages/page templates</p></li>
<li><p class="bullet">Posts</p></li>
</ul>
<p class="noindent">We’ll discuss each of these in abstract terms for reference, but their exact uses won’t become clear until we see some concrete examples starting in <a href="ch09.xhtml#sec9_4">Section 9.4</a>.</p>
<section>
<h4 class="h4" id="sec9_3_1">9.3.1 Layouts/Layout Templates</h4>
<p class="noindent">Anything in the special <span class="green-d"><code><strong>_layouts</strong></code></span> directory (which we’ll create in <a href="ch09.xhtml#sec9_4">Section 9.4</a>) can have Jekyll magic, meaning those files get read by the engine looking for Liquid tags and other Jekyll formatting.</p>
<p class="indent"><span epub:type="pagebreak" id="page_260"></span>One of the key parts of many Jekyll pages is <em>frontmatter</em>, which is <em>metadata</em> at the top of an HTML file (in YAML format) that identifies the kind of layout to be used, a page-specific title, etc. A fairly complicated example might look like this, where the frontmatter is everything between the two triple-dashes <span class="green-d"><code><strong>---</strong></code></span>:</p>
<p class="codelink"><a href="ch09_images.xhtml#p260pro01a" id="p260pro01">Click here to view code image</a></p>
<pre class="pre1">---
layout: post
title: This is the title of the post
postHero: images/shark.jpg
author: Me, Myself, and I
authorTwitter: https://twitter.com/mhartl
gravatar: https://gravatar.com/avatar/ffda7d145b83c4b118f982401f962ca6?s=150
postFooter: Additional information, and maybe a &lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;link or two&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;
---

&lt;<span class="pd_green1"><strong>div</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>p</strong></span>&gt;Lorem ipsum dolor sit paragraph.&lt;/<span class="pd_green1"><strong>p</strong></span>&gt;
&lt;<span class="pd_green1"><strong>div</strong></span>&gt;</pre>
<p class="noindent">In a simpler but still common example, the frontmatter identifies only the page layout template to be used when rendering the page:</p>
<p class="codelink"><a href="ch09_images.xhtml#p260pro02a" id="p260pro02">Click here to view code image</a></p>
<pre class="pre1">---
layout: default
---

&lt;<span class="pd_green1"><strong>div</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>p</strong></span>&gt;Lorem ipsum dolor sit paragraph.&lt;/<span class="pd_green1"><strong>p</strong></span>&gt;
&lt;<span class="pd_green1"><strong>div</strong></span>&gt;</pre>
<p class="noindent">We’ll see the effects of this sort of code starting in <a href="ch09.xhtml#sec9_4">Section 9.4</a>.</p>
<p class="indent">If there is no frontmatter in a layout file, then it is a true layout, and it needs to have a full HTML page structure. If there <em>is</em> frontmatter, then the file is a layout template that can be built into other layouts, and it doesn’t need to have a full HTML page structure.</p>
<p class="indent">Layouts are often the most base-level objects, defining a standard page with a <span class="green-d"><code><strong>DOCTYPE</strong></code></span>, <span class="green-d"><code><strong>html</strong></code></span>/<span class="green-d"><code><strong>head</strong></code></span>/<span class="green-d"><code><strong>body</strong></code></span> tags, <span class="green-d"><code><strong>meta</strong></code></span> tags, stylesheet links, JavaScript, etc., and they usually pull in snippets like a site header or site footer. You often need only one default layout for a site, but you can also use layout templates for things like blogs (<a href="ch12.xhtml#sec12_3">Section 12.3</a>).</p>
<p class="indent"><span epub:type="pagebreak" id="page_261"></span>Layouts have the special ability to load content, like posts, using a generic Liquid tag that looks like this: <span class="green-d"><code><strong>{{ content }}</strong></code></span>. We’ll see a short example of this in an exercise (<a href="ch09.xhtml#sec9_6_3">Section 9.6.3</a>), and we’ll apply it to our full site in <a href="ch10.xhtml#ch10">Chapter 10</a>.</p>
</section>
<section>
<h4 class="h4" id="sec9_3_2">9.3.2 Includes</h4>
<p class="noindent">Files in the <span class="green-d"><code><strong>_includes</strong></code></span> folder can have Jekyll magic even though they don’t need frontmatter, and these files are always intended to be built into something else. Includes tend to be little snippets of a site that get repeated on many pages, such as the header and footer (<a href="ch09.xhtml#ch9fig1">Figure 9.1</a>) or a standard set of social media links. Includes will be covered in <a href="ch09.xhtml#sec9_6">Section 9.6</a>.</p>
</section>
<section>
<h4 class="h4" id="sec9_3_3">9.3.3 Pages/Page Templates</h4>
<p class="noindent">Any other HTML file in the project directory is a <em>page</em>. If there is no frontmatter in the file it is a <em>static page</em>, and Jekyll magic will not work (Liquid tags go unprocessed). If a page has frontmatter, though, it will need to specify a layout, and then all the Jekyll magic will be available. We’ll cover pages more in <a href="ch10.xhtml#ch10">Chapter 10</a>.</p>
</section>
<section>
<h4 class="h4" id="sec9_3_4">9.3.4 Posts, and Post-Type Files</h4>
<p class="noindent">Posts are self-contained pieces of content, such as blog posts or product details, that are saved as files in the <span class="green-d"><code><strong>_posts</strong></code></span> directory. Some forms of content (like blog posts) are typically organized by date, while others (like product descriptions) are organized based on other attributes into <em>collections</em>. We’ll discuss posts further in <a href="ch12.xhtml#ch12">Chapter 12</a>; collections are beyond the scope of this tutorial, but you can read about them in the Jekyll documentation on collections (<a href="https://jekyllrb.com/docs/collections/">https://jekyllrb.com/docs/collections/</a>).</p>
</section>
</section>
<section>
<h3 class="h3" id="sec9_4">9.4 The Layout File</h3>
<p class="noindent">Let’s start playing around with a Jekyll layout by adapting our site into the framework. The end result of this section will be a page that looks exactly like the current <span class="green-d"><code><strong>index.html</strong></code></span>, but which is created in a way that will give us greater power and flexibility down the road. This includes getting a first taste of templates and frontmatter (which we’ll cover in greater depth in <a href="ch10.xhtml#ch10">Chapter 10</a>).</p>
<p class="indent"><span epub:type="pagebreak" id="page_262"></span>This isn’t how you would normally go about creating a site if you were starting from scratch. Layout files are usually pretty bare-bones (as we’ll see in <a href="ch10.xhtml#sec10_1">Section 10.1</a>), and a more common development process is to create a spartan layout using the command <span class="green-d"><code><strong>jekyll new</strong></code></span> and then start doing the real work in the pages and includes. In our case, though, we’ve already done a lot of work in our single <span class="green-d"><code><strong>index.html</strong></code></span> file; using it as our initial layout means that, as we learn about different aspects of Jekyll, we can pull the parts we need out of the layout, thereby showing how a whole site can be sliced up and reassembled.</p>
<p class="indent">As we explained in <a href="ch09.xhtml#sec9_3">Section 9.3</a>, the Jekyll convention for layouts is to place these files in a directory called <span class="green-d"><code><strong>_layouts</strong></code></span> (with a leading underscore), which you should create in the root directory of your application (<span class="green-d"><code><strong>repos/&lt;username&gt;.github.io</strong></code></span>):</p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> mkdir _layouts</pre>
<p class="noindent">Any HTML file in the <span class="green-d"><code><strong>_layouts</strong></code></span> directory can serve as a layout, so to get started we’ll copy the existing <span class="green-d"><code><strong>index.html</strong></code></span> into the layouts directory to create a default layout:</p>
<p class="codelink"><a href="ch09_images.xhtml#p262pro01a" id="p262pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> cp index.html _layouts/default.html</pre>
<p class="noindent">At this point, your project files should look something like <a href="ch09.xhtml#ch9fig6">Figure 9.6</a>.</p>
<figure class="figure" id="ch9fig6">
<img src="graphics/09fig06.jpg" alt="images" width="676" height="473"/>
<figcaption>
<p class="title-f"><strong>Figure 9.6:</strong> Your files and directories should look like this.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_263"></span>To get our site back up and visible, replace the entire contents of <span class="green-d"><code><strong>index.html</strong></code></span> with the code shown in <a href="ch09.xhtml#ch9list2">Listing 9.2</a>.</p>
<p class="listing" id="ch9list2"><strong>Listing 9.2:</strong> The site index with Jekyll frontmatter.<br/><code><em>index.html</em></code></p>
<pre class="pre2">---
layout: default
---</pre>
<p class="noindent">As mentioned in <a href="ch09.xhtml#sec9_3">Section 9.3</a>, the content in <a href="ch09.xhtml#ch9list2">Listing 9.2</a> is known as the Jekyll <em>front-matter</em>, and by adding it to the <span class="green-d"><strong>index.html</strong></span> file we’ve turned a static page into a Jekyll <em>page template</em>.</p>
<p class="indent">The frontmatter is the secret sauce that lets Jekyll know that it needs to read through an HTML page to see if it should process any of the content. By specifying <span class="green-d"><code><strong>layout: default</strong></code></span>, we’ve arranged for Jekyll to use <span class="green-d"><code><strong>default.html</strong></code></span> as the page layout. Because <span class="green-d"><code><strong>default.html</strong></code></span> is currently a fully self-contained page, the result of visiting <a href="http://localhost:4000">http://localhost:4000</a> is to render our entire test page (<a href="ch09.xhtml#ch9fig3">Figure 9.3</a>). In other words, Jekyll just takes the contents of <span class="green-d"><code><strong>default.html</strong></code></span> and inserts it into <span class="green-d"><code><strong>index.html</strong></code></span>.</p>
<p class="indent">As mentioned in <a href="ch05.xhtml#sec5_4">Section 5.4</a>, this sort of transformation, where we change the underlying code without changing the result, is known as <em>refactoring</em>. It may seem like we’ve done nothing, but we’ll see in <a href="ch09.xhtml#sec9_6">Section 9.6</a> how this new structure lets us slice and dice our website into reusable pieces.</p>
<section>
<h4 class="h4" id="sec9_4_1">9.4.1 Exercises</h4>
<ol class="number">
<li><p class="number">To see the way frontmatter affects how pages are built, delete the frontmatter in <span class="green-d"><code><strong>index.html</strong></code></span>, and write “Hello world.” Save the file and refresh the page.</p></li>
<li><p class="number">Revert your changes from Exercise 1, and change the layout to one called <span class="green-d"><code><strong>test</strong></code></span>. Then create a new file in the <span class="green-d"><code><strong>_layouts</strong></code></span> directory called <span class="green-d"><code><strong>test.html</strong></code></span>, and add in some text like “Hello again, world.”</p></li>
<li><p class="number">In the root directory of your project, create a new file called <span class="green-d"><code><strong>tested.html</strong></code></span> and add in some text in it like “For the third time, hello world!” Now, in your browser go to <a href="http://localhost:4000/tested.html">http://localhost:4000/tested.html</a> to see what happens.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_5"><span epub:type="pagebreak" id="page_264"></span>9.5 CSS File and Reset</h3>
<p class="noindent">Now that we’ve refactored our test page into a layout (<span class="green-d"><code><strong>default.html</strong></code></span>) and a page template (<span class="green-d"><code><strong>index.html</strong></code></span>), we’re going to start the process of breaking our monolithic HTML/CSS file into its component parts. The first step is to create a standalone CSS file with a <em>reset</em> that eliminates troublesome browser defaults for margins, padding, etc. (<a href="ch07.xhtml#ch7list18">Listing 7.18</a>). Then we’ll pull all the CSS out of the test site’s <span class="green-d"><code><strong>style</strong></code></span> block and put it into the same external file.</p>
<p class="indent">To get started, create a new folder in the project directory called <span class="green-d"><code><strong>css</strong></code></span>, and then create a new file in that directory called <span class="green-d"><code><strong>main.css</strong></code></span>, either using the terminal like in <a href="ch09.xhtml#ch9list3">Listing 9.3</a>, or by just adding the folders and files in your text editor.</p>
<p class="listing" id="ch9list3"><strong>Listing 9.3:</strong> Creating a new CSS folder and blank document in the terminal.</p>
<pre class="pre2"><span class="b-nilam"><strong>$</strong></span> mkdir css
<span class="b-nilam"><strong>$</strong></span> touch css/main.css</pre>
<p class="noindent"><span epub:type="pagebreak" id="page_265"></span>You have to name your directory exactly <span class="green-d"><code><strong>css</strong></code></span>, because Jekyll automatically looks for CSS files in that location, but you can use whatever filename makes you happy for the actual CSS file.</p>
<p class="indent">After you’ve created the folder and file as in <a href="ch09.xhtml#ch9list3">Listing 9.3</a>, your project directory should look something like <a href="ch09.xhtml#ch9fig7">Figure 9.7</a>.</p>
<figure class="figure" id="ch9fig7">
<img src="graphics/09fig07.jpg" alt="images" width="676" height="478"/>
<figcaption>
<p class="title-f"><strong>Figure 9.7:</strong> The new <span class="green-d"><code><strong>css</strong></code></span> folder and <span class="green-d"><code><strong>main.css</strong></code></span> file.</p>
</figcaption>
</figure>
<p class="indent">Recall from the discussions in <a href="ch07.xhtml#sec7_5">Section 7.5</a> and <a href="ch07.xhtml#sec7_7">Section 7.7</a> that browsers have builtin default styling for many common elements. Those browser defaults can differ from browser to browser, and if we were to allow them to remain it would mean that many elements on the page would start with styles we didn’t pick. No self-respecting and properly perfectionist developer wants to leave the appearance of important elements up to the browser makers, so we’ll apply a full <em>CSS reset</em> to create a blank slate for our designs.</p>
<p class="indent">Recall that we created a mini-version of a CSS reset in <a href="ch07.xhtml#ch7list18">Listing 7.18</a>, where we reset the margin and padding for <span class="green-d"><code><strong>html</strong></code></span> and <span class="green-d"><code><strong>body</strong></code></span> tags. Now it’s time to upgrade our site to use an industrial-strength reset. The resulting CSS may look intimidating, but don’t worry—we’re putting it in <a href="ch09.xhtml#ch9list4">Listing 9.4</a> precisely so that you can copy and paste it without having to understand the details.<sup><a id="fn9_7a" href="ch09.xhtml#fn9_7">7</a></sup></p>
<p class="footnote"><a id="fn9_7" href="ch09.xhtml#fn9_7a">7</a>. Recall that the code listings are available at <a href="https://github.com/learnenough/learn_enough_html_css_and_layout_code_listings">https://github.com/learnenough/learn_enough_html_css_and_layout_code_listings</a>.</p>
<p class="listing" id="ch9list4"><strong>Listing 9.4:</strong> A standard CSS reset.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list04a" id="p09list04">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_green1"><strong>html</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>body</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>div</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>span</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>applet</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>object</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>iframe</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>h1</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h2</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h3</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h4</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h5</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h6</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>p</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>blockquote</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>pre</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>a</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>abbr</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>acronym</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>address</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>big</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>cite</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>code</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>del</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dfn</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>em</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>img</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ins</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>kbd</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>s</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>samp</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>small</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>strike</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>strong</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>sub</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>sup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tt</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>var</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>b</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>u</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>i</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>center</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dl</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dt</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dd</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ol</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ul</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>li</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>fieldset</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>form</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>label</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>legend</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>table</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>caption</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>tbody</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tfoot</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>thead</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tr</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>th</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>td</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>article</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>aside</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>canvas</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>details</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>embed</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figure</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figcaption</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>footer</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>header</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>hgroup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>menu</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>nav</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>output</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ruby</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>section</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>summary</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>time</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>mark</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>audio</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>video</strong></span> {
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>border</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>font</strong></span>: <span class="pd_green1"><strong>inherit</strong></span>;
  <span class="pd_green1"><strong>vertical-align</strong></span>: <span class="pd_green1"><strong>baseline</strong></span>;
}
<span class="pd_blue1"><em>/* HTML5 display-role reset for older browsers */</em></span>
<span class="pd_green1"><strong>article</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>aside</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>details</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figcaption</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figure</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>footer</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>header</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>hgroup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>menu</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>nav</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>section</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
}
<span class="pd_green1"><strong>body</strong></span> {
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1</span>;
}
<span class="pd_green1"><strong>blockquote</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span> {
  <span class="pd_green1"><strong>quotes</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_green1"><strong>blockquote</strong></span>:<span class="v1">before</span><span class="grey">,</span> <span class="pd_green1"><strong>blockquote</strong></span>:<span class="v1">after</span><span class="grey">,</span>
<span class="pd_green1"><strong>q</strong></span>:<span class="v1">before</span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span>:<span class="v1">after</span> {
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_red">'</span>';
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_green1"><strong>table</strong></span> {
  <span class="pd_green1"><strong>border-collapse</strong></span>: <span class="pd_green1"><strong>collapse</strong></span>;
  <span class="pd_green1"><strong>border-spacing</strong></span>: <span class="grey">0</span>;
}
<span class="pd_green1"><strong>strong</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>b</strong></span> {
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
}
<span class="pd_green1"><strong>em</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>i</strong></span> {
  <span class="pd_green1"><strong>font-style</strong></span>: <span class="pd_green1"><strong>italic</strong></span>;
}
<span class="pd_green1"><strong>a img</strong></span> {
  <span class="pd_green1"><strong>border</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_blue1"><em>/* END RESET*/</em></span></pre>
<p class="noindent"><span epub:type="pagebreak" id="page_266"></span>Note that the CSS in <a href="ch09.xhtml#ch9list4">Listing 9.4</a> doesn’t need to be wrapped with the <span class="green-d"><code><strong>style</strong></code></span> tags the way the styles in the HTML file did; as we’ll see in <a href="ch09.xhtml#ch9list7">Listing 9.7</a>, the browser understands from the link that everything inside the file is CSS.</p>
<p class="indent">We see in <a href="ch09.xhtml#ch9list4">Listing 9.4</a> that most of the standard HTML elements get some sort of styling applied to them. The big block of selectors at the top is pretty much every HTML element in the spec forced to have margin and padding set to zero, a border of zero, and told to inherit font styles. This might seem a little extreme to target every element, but when we are making a custom website there is no reason to leave browser defaults for things like margin, padding, and border in place—otherwise, we could end up having to <em>undo</em> styling all over our stylesheet. It’s better to undo a lot of stuff right off the bat, and then only add positive styling later on.</p>
<p class="indent">Also, don’t think that the above reset styling is something set in stone (<a href="ch09.xhtml#ch9fig8">Figure 9.8</a><sup><a id="fn9_8a" href="ch09.xhtml#fn9_8">8</a></sup>). If later in your development career you find yourself adding the same styling to every <span epub:type="pagebreak" id="page_267"></span>(say) <span class="green-d"><code><strong>table</strong></code></span> tag on every site you design, it’s probably best just to add that to your reset. As usual, the DRY principle applies (<a href="ch05.xhtml#box5_2">Box 5.2</a>).</p>
<figure class="figure" id="ch9fig8">
<img src="graphics/09fig08.jpg" alt="images" width="394" height="495"/>
<figcaption>
<p class="title-f"><strong>Figure 9.8:</strong> Reset rules aren’t set in stone… or any other kind of tablet.</p>
</figcaption>
</figure>
<p class="footnote"><a id="fn9_8" href="ch09.xhtml#fn9_8a">8</a>. 8. Etching image courtesy of World Archive/Alamy Stock Photo; tablet graphic courtesy of Oleksiy Mark/Shutterstock.</p>
<p class="indent">With the reset added, we’re now in a position to move the custom CSS style developed so far in the tutorial into <span class="green-d"><code><strong>main.css</strong></code></span>. This involves first opening <span class="green-d"><code><strong>default.html</strong></code></span> and cutting all the CSS inside the <span class="green-d"><code><strong>style</strong></code></span> tag, leaving the tag empty (<a href="ch09.xhtml#ch9list5">Listing 9.5</a>).</p>
<p class="listing" id="ch9list5"><strong>Listing 9.5:</strong> The default layout with CSS cut out.<br/><code><em>_layouts/default.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list05a" id="p09list05">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_orange"><em>&lt;!DOCTYPE html&gt;</em></span>
&lt;<span class="pd_green1"><strong>html</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>head</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t Panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
<span class="bg1">    &lt;<span class="pd_green1"><strong>style</strong></span>&gt;</span>

<span class="bg1">    &lt;/<span class="pd_green1"><strong>style</strong></span>&gt;</span>
  &lt;/<span class="pd_green1"><strong>head</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>body</strong></span>&gt;
  .
  .
  .
  &lt;/<span class="pd_green1"><strong>body</strong></span>&gt;
&lt;/<span class="pd_green1"><strong>html</strong></span>&gt;</pre>
<p class="indent"><span epub:type="pagebreak" id="page_268"></span>Next, paste the CSS into <span class="green-d"><code><strong>main.css</strong></code></span> (possibly using something like Shift-Command-V, which pastes at the proper indentation level), and then delete the mini-reset targeting only <span class="green-d"><code><strong>html, body</strong></code></span> that we added before since it is now redundant. The full resulting code is shown in <a href="ch09.xhtml#ch9list6">Listing 9.6</a>.</p>
<p class="listing" id="ch9list6"><strong>Listing 9.6:</strong> The entire CSS file up to this point.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list06a" id="p09list06">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_green1"><strong>html</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>body</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>div</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>span</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>applet</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>object</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>iframe</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>h1</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h2</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h3</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h4</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h5</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h6</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>p</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>blockquote</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>pre</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>a</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>abbr</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>acronym</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>address</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>big</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>cite</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>code</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>del</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dfn</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>em</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>img</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ins</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>kbd</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>s</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>samp</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>small</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>strike</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>strong</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>sub</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>sup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tt</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>var</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>b</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>u</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>i</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>center</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dl</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dt</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dd</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ol</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ul</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>li</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>fieldset</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>form</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>label</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>legend</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>table</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>caption</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>tbody</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tfoot</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>thead</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tr</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>th</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>td</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>article</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>aside</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>canvas</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>details</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>embed</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figure</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figcaption</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>footer</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>header</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>hgroup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>menu</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>nav</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>output</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ruby</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>section</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>summary</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>time</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>mark</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>audio</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>video</strong></span> {
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>border</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>font</strong></span>: <span class="pd_green1"><strong>inherit</strong></span>;
  <span class="pd_green1"><strong>vertical-align</strong></span>: <span class="pd_green1"><strong>baseline</strong></span>;
}
<span class="pd_blue1"><em>/* HTML5 display-role reset for older browsers */</em></span>
<span class="pd_green1"><strong>article</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>aside</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>details</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figcaption</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figure</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>footer</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>header</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>hgroup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>menu</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>nav</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>section</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
}
<span class="pd_green1"><strong>body</strong></span> {
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1</span>;
}
<span class="pd_green1"><strong>blockquote</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span> {
  <span class="pd_green1"><strong>quotes</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_green1"><strong>blockquote</strong></span>:<span class="v1">before</span><span class="grey">,</span> <span class="pd_green1"><strong>blockquote</strong></span>:<span class="v1">after</span><span class="grey">,</span>
<span epub:type="pagebreak" id="page_269"></span><span class="pd_green1"><strong>q</strong></span>:<span class="v1">before</span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span>:<span class="v1">after</span> {
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_red">'</span>';
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_green1"><strong>table</strong></span> {
  <span class="pd_green1"><strong>border-collapse</strong></span>: <span class="pd_green1"><strong>collapse</strong></span>;
  <span class="pd_green1"><strong>border-spacing</strong></span>: <span class="grey">0</span>;
}
<span class="pd_green1"><strong>strong</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>b</strong></span> {
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
}
<span class="pd_green1"><strong>em</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>i</strong></span> {
  <span class="pd_green1"><strong>font-style</strong></span>: <span class="pd_green1"><strong>italic</strong></span>;
}
<span class="pd_green1"><strong>a img</strong></span> {
  <span class="pd_green1"><strong>border</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_blue1"><em>/* END RESET*/</em></span>

<span class="pd_blue1"><em>/* GLOBAL STYLES */</em></span>
<span class="pd_green1"><strong>h1</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">7</span><span class="pd_red"><strong>vw</strong></span>;
  <span class="pd_green1"><strong>margin-top</strong></span>: <span class="grey">0</span>;
}
<span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#f0</span>0;
}

<span class="pd_blue1"><em>/* HERO STYLES */</em></span>
.<span class="blue-v"><strong>full-hero</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#c7dbf</span>c;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>vh</strong></span>;
}

<span class="pd_blue1"><em>/* SOCIAL STYLES */</em></span>
.<span class="blue-v"><strong>social-link</strong></span> {
  <span class="pd_green1"><strong>background</strong></span>: <span class="pd_green1">rgba</span>(<span class="grey">150</span>, <span class="grey">150</span>, <span class="grey">150</span>, <span class="grey">0.5</span>);
  <span class="pd_green1"><strong>border-radius</strong></span>: <span class="grey">99</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>font-family</strong></span>: helvetica, arial, sans;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">2.5</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1</span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">0.85</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
  <span class="pd_green1"><strong>text-decoration</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>vertical-align</strong></span>: <span class="pd_green1"><strong>middle</strong></span>;
  <span epub:type="pagebreak" id="page_270"></span><span class="pd_green1"><strong>width</strong></span>: <span class="grey">2.5</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>social-list</strong></span> {
  <span class="pd_green1"><strong>list-style</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}
.<span class="blue-v"><strong>social-list</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">0 0.5</span><span class="pd_red"><strong>em</strong></span>;
}

<span class="pd_blue1"><em>/* BIO STYLES */</em></span>
.<span class="blue-v"><strong>bio-wrapper</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">24</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="pd_green1"><strong>auto</strong></span>;
  <span class="pd_green1"><strong>max-width</strong></span>: <span class="grey">960</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>overflow</strong></span>: <span class="pd_green1"><strong>hidden</strong></span>;
}
.<span class="blue-v"><strong>bio-box</strong></span> {
  <span class="pd_green1"><strong>border</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>px</strong></span> <span class="pd_green1"><strong>solid black</strong></span>;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>float</strong></span>: <span class="pd_green1"><strong>left</strong></span>;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">40</span><span class="pd_red"><strong>px</strong></span> <span class="grey">1</span><span class="pd_red"><strong>%</strong></span> <span class="grey">0</span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">2</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">23</span><span class="pd_red"><strong>%</strong></span>;
}
.<span class="blue-v"><strong>bio-box</strong></span> <span class="pd_green1"><strong>h3</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1.5</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">-40</span><span class="pd_red"><strong>px</strong></span> <span class="grey">0 1</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;

}
.<span class="blue-v"><strong>bio-box</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">100</span><span class="pd_red"><strong>%</strong></span>;
}
.<span class="blue-v"><strong>bio-copy</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1.</span>5;
}
.<span class="blue-v"><strong>bio-copy</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="pd_green1"><strong>green</strong></span>;
}</pre>
<p class="indent">As you can verify by refreshing the browser, the page is now completely unstyled (<a href="ch09.xhtml#ch9fig9">Figure 9.9</a>).</p>
<figure class="figure" id="ch9fig9">
<img src="graphics/09fig09.jpg" alt="images" width="676" height="523"/>
<figcaption>
<p class="title-f"><strong>Figure 9.9:</strong> It’s been a long time since our site was this naked and unstyled.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_271"></span>To restore the styling, all we need to do is tell the layout page about <span class="green-d"><code><strong>main.css</strong></code></span>. The way to do this is to replace the <span class="green-d"><code><strong>style</strong></code></span> tags in the <span class="green-d"><code><strong>head</strong></code></span> section with a link to our stylesheet, as shown in <a href="ch09.xhtml#ch9list7">Listing 9.7</a>.</p>
<p class="listing" id="ch9list7"><strong>Listing 9.7:</strong> Using a <span class="green-d"><code><strong>link</strong></code></span> tag to load <span class="green-d"><code><strong>main.css</strong></code></span>.<br/><code><em>_layouts/default.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list07a" id="p09list07">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_orange"><em>&lt;!DOCTYPE html&gt;</em></span>
&lt;<span class="pd_green1"><strong>html</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>head</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
<span class="bg1">    &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green"><strong>rel</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"stylesheet"</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"/css/main.css"</strong></span>&gt;</span>
  &lt;/<span class="pd_green1"><strong>head</strong></span>&gt;
  .
  .
  .</pre>
<p class="indent"><span epub:type="pagebreak" id="page_272"></span>The <span class="green-d"><code><strong>link</strong></code></span> tag in <a href="ch09.xhtml#ch9list7">Listing 9.7</a> tells the browser that it will be loading a stylesheet (<span class="green-d"><code><strong>rel</strong></code></span> is short for “relationship”), and then specifies a URL (in this case an absolute one that looks at the site’s root directory by starting the URL with a forward slash)<sup><a id="fn9_9a" href="ch09.xhtml#fn9_9">9</a></sup> that leads to the file.</p>
<p class="footnote"><a id="fn9_9" href="ch09.xhtml#fn9_9a">9</a>. Recall from <a href="ch02.xhtml#sec2_4">Section 2.4</a> that paths can be either relative (local to the computer serving the file) or absolute (accessed by a full URL). For example, the path <span class="green-d"><code><strong>css/main.css</strong></code></span> is relative, while <span class="green-d"><code><strong>/css/main.css</strong></code></span> is absolute.</p>
<p class="indent">It’s important to understand that using the <span class="green-d"><code><strong>link</strong></code></span> tag to load an external stylesheet has nothing to do with Jekyll; this general technique works even on hand-built web-sites that don’t use any site builder. The stylesheet doesn’t actually need to be local, either—theoretically, it can be anywhere on the Internet—but for our purposes, we want to use a local file so that it’s easy to make changes.</p>
<p class="indent">Now when you refresh the browser the styles should be properly applied, and the page will pretty much look how it did before our refactoring, although there will be some places where things don’t look right because of the CSS reset (<a href="ch09.xhtml#ch9fig10">Figure 9.10</a>).</p>
<figure class="figure" id="ch9fig10">
<img src="graphics/09fig10.jpg" alt="images" width="666" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.10:</strong> Same old page, with some minor oddities.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_273"></span>Before moving on, let’s make a few minor changes to prove that we know how to update styles via the CSS file. Ever since we started with this page, the fonts have looked a little… old-school. Let’s add in a general style to the page <span class="green-d"><code><strong>body</strong></code></span> that will cascade down to every element on the page and change all body text to a nice, clean, sans-serif font (<a href="ch09.xhtml#ch9list8">Listing 9.8</a>).</p>
<p class="listing" id="ch9list8"><strong>Listing 9.8:</strong> A good spot for this would be in the “Global Styles” section of the CSS file.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list08a" id="p09list08">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_blue1"><em>/* GLOBAL STYLES */</em></span>
<span class="pd_green1"><strong>body</strong></span> {
<span class="bg1">  <span class="pd_green1"><strong>font-family</strong></span>: helvetica, arial, sans;</span>
}</pre>
<p class="indent">When you save your work and refresh the browser, everything should still look the way it did before, but with all-new fonts across the page (<a href="ch09.xhtml#ch9fig11">Figure 9.11</a>).</p>
<figure class="figure" id="ch9fig11">
<img src="graphics/09fig11.jpg" alt="images" width="664" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.11:</strong> Same old page, all-new fonts.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_274"></span>Finally, in order to avoid the overlap between the bio box and social links, we’ll change the CSS for the latter to be <span class="green-d"><code><strong>display: block</strong></code></span> with a margin, as shown in <a href="ch09.xhtml#ch9list9">Listing 9.9</a>.</p>
<p class="listing" id="ch9list9"><strong>Listing 9.9:</strong> Fixing up the social link spacing.<br/><code><em>index.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list09a" id="p09list09">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>bio-box</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">100</span><span class="pd_red"><strong>%</strong></span>;
}
<span class="bg1">.<span class="blue-v"><strong>bio-box</strong></span> .<span class="blue-v"><strong>social-link</strong></span> {</span>
<span class="bg1">  <span class="pd_green1"><strong>display: block</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey"><strong>2</strong></span><span class="pd_red"><strong>em</strong></span> <span class="grey"><strong>0</strong></span> <span class="pd_red"><strong>1em</strong></span>;</span>
<span class="bg1">}</span>
.<span class="blue-v"><strong>bio-copy</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}</pre>
<p class="indent">The result appears in <a href="ch09.xhtml#ch9fig12">Figure 9.12</a>.</p>
<figure class="figure" id="ch9fig12">
<img src="graphics/09fig12.jpg" alt="images" width="646" height="143"/>
<figcaption>
<p class="title-f"><strong>Figure 9.12:</strong> Better spacing for the social links.</p>
</figcaption>
</figure>
<section>
<h4 class="h4" id="sec9_5_1">9.5.1 Exercises</h4>
<ol class="number">
<li><p class="number">Create a second CSS file in the <span class="green-d"><code><strong>css</strong></code></span> folder, and add a second link to this new CSS file in the head of the document (making sure that this second link comes after the original CSS link). In your new CSS file, add a style that changes the <span class="green-d"><code><strong>.full-hero</strong></code></span> background color to a color of your choice. This shows that the order in which stylesheets load affects which styles take priority.</p></li>
<li><p class="number">Rename the new CSS to <span class="green-d"><code><strong>reset.css</strong></code></span>, and move the stylesheet link above the link to <span class="green-d"><code><strong>main.css</strong></code></span>. Now cut and paste the entire reset section from <span class="green-d"><code><strong>main.css</strong></code></span> into the new CSS file (overriding the style added in Exercise 1). Save everything and make <span epub:type="pagebreak" id="page_275"></span>sure that your test page looks the same in your browser. You’ve made your reset portable!</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_6">9.6 Includes Intro: Head and Header</h3>
<p class="noindent">Now that we’ve factored the CSS into a separate file (and added a CSS reset), it’s time to start slicing up the default page into reusable pieces. As discussed in <a href="ch09.xhtml#sec9_3">Section 9.3</a>, Jekyll provides <em>includes</em> to help us with this important task. (<em>Note</em>: In this context, the word “include” is used as a <em>noun</em>, which is not standard English but is standard in the world of static site generators. This usage also changes the pronunciation; the verb form is “in-CLUDE”, but the noun form is “IN-clude”.)<sup><a id="fn10_10a" href="ch09.xhtml#fn10_10">10</a></sup></p>
<p class="footnote"><a id="fn10_10" href="ch09.xhtml#fn10_10a">10</a>. This distinction exists in many other English words, such as AT-tri-bute (noun)/at-TRI-bute (verb) and CON-flict (noun)/con-FLICT (verb).</p>
<p class="indent">Includes are supposed to be the smallest/most reusable snippets of site code. They are usually loaded into either layouts or templates, but in fact can be used anywhere on a site—you can even have includes call other includes (<a href="ch09.xhtml#ch9fig13">Figure 9.13</a>).<sup><a id="fn9_11a" href="ch09.xhtml#fn9_11">11</a></sup> Since these snippets of code are intended to get dropped into the site almost anywhere, you should <span epub:type="pagebreak" id="page_276"></span>always try to make sure that any includes you create have code that is portable and self-contained.</p>
<p class="footnote"><a id="fn9_11" href="ch09.xhtml#fn9_11a">11</a>. Image courtesy of vividpixels/123RF.</p>
<figure class="figure" id="ch9fig13">
<img src="graphics/09fig13.jpg" alt="images" width="408" height="388"/>
<figcaption>
<p class="title-f"><strong>Figure 9.13:</strong> You can put includes in includes, so your includes have includes.</p>
</figcaption>
</figure>
<p class="indent">Jekyll includes are located in a dedicated folder called <span class="green-d"><code><strong>_includes</strong></code></span> (as with <span class="green-d"><code><strong>_lay-outs</strong></code></span>, the underscore is important). Go ahead and create that folder now, together with a new file called <span class="green-d"><code><strong>head.html</strong></code></span> (<a href="ch09.xhtml#ch9list10">Listing 9.10</a>).</p>
<p class="listing" id="ch9list10"><strong>Listing 9.10:</strong> Creating the includes folder and adding in a new file.</p>
<pre class="pre2"><span class="b-nilam"><strong>$</strong></span> mkdir _includes
<span class="b-nilam"><strong>$</strong></span> touch _includes/head.html</pre>
<p class="noindent">At this point, your project folder should look something like <a href="ch09.xhtml#ch9fig14">Figure 9.14</a>.</p>
<figure class="figure" id="ch9fig14">
<img src="graphics/09fig14.jpg" alt="images" width="676" height="478"/>
<figcaption>
<p class="title-f"><strong>Figure 9.14:</strong> The project directory with added includes.</p>
</figcaption>
</figure>
<p class="indent">As you might have guessed, we’re going to use <span class="green-d"><code><strong>head.html</strong></code></span> to hold the <span class="green-d"><code><strong>head</strong></code></span> tag and its contents. The way to do this is first to cut that content out of <span class="green-d"><code><strong>default.html</strong></code></span>, and then paste it into <span class="green-d"><code><strong>head.html</strong></code></span> (possibly using Shift-Command-V to paste with the proper indentation), as shown in <a href="ch09.xhtml#ch9list11">Listing 9.11</a>.</p>
<p class="listing" id="ch9list11"><span epub:type="pagebreak" id="page_277"></span><strong>Listing 9.11:</strong> Moving <span class="green-d"><code><strong>head</strong></code></span> to its own file.<br/><code><em>_includes/head.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list11a" id="p09list11">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>head</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t Panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/css/main.css"</span>&gt;
&lt;/<span class="pd_green1"><strong>head</strong></span>&gt;</pre>
<p class="indent">To include the contents of <span class="green-d"><code><strong>head.html</strong></code></span> back into the <span class="green-d"><code><strong>default.html</strong></code></span> layout, we’ll use our first example of the Liquid language mentioned in <a href="ch09.xhtml#sec9_3">Section 9.3</a>, which looks like this:</p>
<pre class="pre1">{% include head.html %}</pre>
<p class="noindent">Here <span class="green-d"><code><strong>include</strong></code></span> is a Liquid command to include the file in question (in this case, <span class="green-d"><code><strong>head.html</strong></code></span>). The special syntax <span class="green-d"><code><strong>{% … %}</strong></code></span> tells Jekyll to replace the contents of that line with the result of evaluating the code inside. Because Jekyll automatically knows to look in the <span class="green-d"><code><strong>_includes</strong></code></span> directory, the result will be to insert the contents of <span class="green-d"><code><strong>head.html</strong></code></span>.</p>
<p class="indent">Replacing the original <span class="green-d"><code><strong>head</strong></code></span> section with the corresponding Liquid snippet gives the code shown in <a href="ch09.xhtml#ch9list12">Listing 9.12</a>.</p>
<p class="listing" id="ch9list12"><strong>Listing 9.12:</strong> Including the site head using Liquid.<br/><code><em>_layouts/default.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list12a" id="p09list12">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_orange"><em>&lt;!DOCTYPE html&gt;</em></span>
&lt;<span class="pd_green1"><strong>html</strong></span>&gt;
<span class="bg1">  {% include head.html %}</span>
  &lt;<span class="pd_green1"><strong>body</strong></span>&gt;</pre>
<p class="noindent">After making these changes, you should refresh your browser to confirm that the page still works.</p>
<section>
<h4 class="h4" id="sec9_6_1">9.6.1 Page Header: Up Top!</h4>
<p class="noindent">At the top of a typical web page, you will usually find some sort of site-level <em>navigation</em> that takes users from page to page on the site, and also includes site branding. <span epub:type="pagebreak" id="page_278"></span>This section is often referred to as the <em>site header</em> (<a href="ch09.xhtml#ch9fig15">Figure 9.15</a>) (not to be confused with the <span class="green-d"><code><strong>head</strong></code></span> tag, which is the HTML header). Implementing such a header site-wide is a perfect application of Jekyll includes.</p>
<figure class="figure" id="ch9fig15">
<img src="graphics/09fig15.jpg" alt="images" width="676" height="212"/>
<figcaption>
<p class="title-f"><strong>Figure 9.15:</strong> Some site headers from popular websites.</p>
</figcaption>
</figure>
<p class="indent">To get started, let’s add a new Liquid tag to <span class="green-d"><code><strong>header.html</strong></code></span> (which we’ll create in a moment) at the top of the <span class="green-d"><code><strong>default.html</strong></code></span> file, as shown in <a href="ch09.xhtml#ch9list13">Listing 9.13</a>.</p>
<p class="listing" id="ch9list13"><strong>Listing 9.13:</strong> Including the header HTML.<br/><code><em>_layouts/default.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list13a" id="p09list13">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_orange"><em>&lt;!DOCTYPE html&gt;</em></span>
&lt;<span class="pd_green1"><strong>html</strong></span>&gt;
  {% include head.html %}
  &lt;<span class="pd_green1"><strong>body</strong></span>&gt;
<span class="bg1">    {% include header.html %}</span>
    &lt;<span class="pd_green1"><strong>div</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"full-hero hero-home"</span>&gt;
      &lt;<span class="pd_green1"><strong>h1</strong></span>&gt;I’m an h1&lt;/<span class="pd_green1"><strong>h1</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>ul</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"social-list"</span>&gt;</pre>
<p class="indent">Next, create a new blank document in the <span class="green-d"><code><strong>_includes</strong></code></span> folder called <span class="green-d"><code><strong>header.html</strong></code></span>:<sup><a id="fn9_12a" href="ch09.xhtml#fn9_12">12</a></sup></p>
<p class="footnote"><a id="fn9_12" href="ch09.xhtml#fn9_12a">12</a>. You can of course use your text editor to create the file rather than using <span class="green-d"><code><strong>touch</strong></code></span>.</p>
<p class="codelink"><a href="ch09_images.xhtml#p278pro01a" id="p278pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> touch _includes/header.html</pre>
<p class="indent">The header itself will use two <em>semantic elements</em> (i.e., elements that have meaning): <span class="green-d"><code><strong>header</strong></code></span> to contain the header and <span class="green-d"><code><strong>nav</strong></code></span> for the navigation links, which (as with the <span epub:type="pagebreak" id="page_279"></span>social links in <a href="ch08.xhtml#sec8_5">Section 8.5</a>) are organized as an unordered list <span class="green-d"><code><strong>ul</strong></code></span>. We’ll also use the classes <span class="green-d"><code><strong>”header”</strong></code></span> and <span class="green-d"><code><strong>”header-nav”</strong></code></span> to make it easier to apply styles across a range of browsers (<a href="ch09.xhtml#box9_2">Box 9.2</a>). The resulting code appears in <a href="ch09.xhtml#ch9list14">Listing 9.14</a>.</p>
<p class="listing" id="ch9list14"><strong>Listing 9.14:</strong> The basic structure of our site header.<br/><code><em>_includes/header.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list14a" id="p09list14">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>header</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"header"</span>&gt;
  &lt;<span class="pd_green1"><strong>nav</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>ul</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"header-nav"</span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/"</span>&gt;Home&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;Nav 1&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;Nav 2&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;Nav 3&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
    &lt;/<span class="pd_green1"><strong>ul</strong></span>&gt;
  &lt;/<span class="pd_green1"><strong>nav</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/"</span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"header-logo"</span>&gt;Logo&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;
&lt;/<span class="pd_green1"><strong>header</strong></span>&gt;</pre>
<p class="indent">Save and refresh your browser and now you’ll see your new site header (<a href="ch09.xhtml#ch9fig16">Figure 9.16</a>). (We’ll explain the placement of the logo in <a href="ch09.xhtml#sec9_6_2">Section 9.6.2</a>.)</p>
<figure class="figure" id="ch9fig16">
<img src="graphics/09fig16.jpg" alt="images" width="676" height="332"/>
<figcaption>
<p class="title-f"><strong>Figure 9.16:</strong> Our not-very-attractive header.</p>
</figcaption>
</figure>
<aside epub:type="sidebar" class="sidebar1" id="box9_2">
<p class="sb-title1"><span epub:type="pagebreak" id="page_280"></span><strong>Box 9.2: Style Note: Style HTML5 Elements with Classes</strong></p>
<p class="sb-noindent">To ensure maximum backward compatibility, it’s not a good idea to target the newer HTML5 semantic elements like <code>header</code> and <code>nav</code> directly. There are inevitably going to be some users who visit your site on an old browser that doesn’t support them— though luckily there are fewer such cases with each passing year.</p>
<p class="sb-indent">When an old browser encounters new HTML tags, it sees them as regular <code>div</code>s, and any styles targeting those tags are ignored. To avoid this situation, it’s better to give such elements classes, and then target your styles at the classes.</p>
<p class="sb-indent">For example, we want to avoid styling <code>header</code> directly:</p>
<pre class="pre">header {
  background: #000;
}</pre>
<p class="sb-noindent">Instead, we’ll give the <code>header</code> tag a class <code>"header"</code> (like in <a href="ch09.xhtml#ch9list14">Listing 9.14</a>), and then target that class (note the leading dot):</p>
<pre class="pre">.header {
  background: #000;
}</pre>
<p class="sb-noindent">This way, our styles will work even in older browsers.</p>
</aside>
</section>
<section>
<h4 class="h4" id="sec9_6_2">9.6.2 Navigation and Children</h4>
<p class="noindent">Now, let’s style that ugly header!</p>
<p class="indent">The end goal for our design is to create a traditional sort of header, with a logo on the left-hand side that will send users back to the homepage, and site navigation at the top right. As a final step, we’ll change the position of the header so that it will sit on top of content below it.</p>
<p class="indent">The first thing that we are going to do is move the navigation to the right and put the <span class="green-d"><code><strong>li</strong></code></span>s into a horizontal row by changing their display property to <span class="green-d"><code><strong>inline-block</strong></code></span>. The result, which we suggest inserting immediately after the global styles, appears in <a href="ch09.xhtml#ch9list15">Listing 9.15</a>.</p>
<p class="listing" id="ch9list15"><span epub:type="pagebreak" id="page_281"></span><strong>Listing 9.15:</strong> Adding header styles.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list15a" id="p09list15">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_blue1"><em>/* HEADER STYLES */</em></span>
.<span class="blue-v"><strong>header-nav</strong></span> {
  <span class="pd_green1"><strong>float</strong></span>: <span class="pd_green1"><strong>right</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
}</pre>
<p class="noindent">Note in <a href="ch09.xhtml#ch9list15">Listing 9.15</a> that we’ve used the more advanced child selector <span class="green-d"><code><strong>&gt;</strong></code></span> to target the <span class="green-d"><code><strong>li</strong></code></span>s (as discussed before in <a href="ch08.xhtml#box8_1">Box 8.1</a>). That is to make sure that if we wanted to put a second level of links into the menu, only the direct children would be <span class="green-d"><code><strong>inline-block</strong></code></span> (which we will in fact do in <a href="ch13.xhtml#sec13_4">Section 13.4</a>).</p>
<p class="indent">After saving and refreshing, you’ll see that the menu has moved (<a href="ch09.xhtml#ch9fig17">Figure 9.17</a>).</p>
<figure class="figure" id="ch9fig17">
<img src="graphics/09fig17.jpg" alt="images" width="676" height="298"/>
<figcaption>
<p class="title-f"><strong>Figure 9.17:</strong> Navigation moved to the right and all in a line.</p>
</figcaption>
</figure>
<p class="indent">You might have wondered why the logo is <em>below</em> the navigational list in <a href="ch09.xhtml#ch9list14">Listing 9.14</a> even though it comes first when viewing the header from left to right. The reason is that we knew all along that we were going to float the navigation to the right side of the screen, and if the logo appeared before the navigation in the HTML order then the menu would start at the <em>bottom</em> of the logo. This is because even a floating element respects the line height and position of normal block or inline elements that come before it, which in this case would lead to unwanted space around the logo. You can <span epub:type="pagebreak" id="page_282"></span>check this yourself by switching the positions of the logo and nav links; you’ll see that the menu starts lower as a result (<a href="ch09.xhtml#ch9fig18">Figure 9.18</a>).</p>
<figure class="figure" id="ch9fig18">
<img src="graphics/09fig18.jpg" alt="images" width="676" height="298"/>
<figcaption>
<p class="title-f"><strong>Figure 9.18:</strong> Switching the logo to come first adds unwanted space.</p>
</figcaption>
</figure>
<p class="indent">Now let’s add in some padding on the list items and make those links a little more stylish. We are going to add some padding to move the navigation away from the edges of the page:</p>
<pre class="pre1"><span class="pd_green1"><strong>padding</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>5</strong></span>.<span class="blue-v"><strong>5vh</strong></span> <span class="pd_green1"><strong>60px 0 0</strong></span><span class="grey">;</span></pre>
<p class="noindent">We are also going to give each <span class="green-d"><code><strong>li</strong></code></span> in the navigation a bit of left margin so that it isn’t bumping right up against its neighbor:</p>
<pre class="pre1"><span class="pd_green1"><strong>margin-left</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>1em</strong></span><span class="grey">;</span></pre>
<p class="indent">For the links themselves, we’ll change the color and the size, make the font bold so that it is easier to read, get rid of the default link underlines (as is done in about 99% of site headers), and also automatically transform the text to be uppercase:</p>
<p class="codelink"><a href="ch09_images.xhtml#p282pro01a" id="p282pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="pd_green1"><strong>color</strong></span><span class="grey">:</span> #<span class="blue-v"><strong>000</strong></span><span class="grey">;</span>
<span class="pd_green1"><strong>font-size</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>0</strong></span>.<span class="blue-v"><strong>8rem</strong></span><span class="grey">;</span>
<span class="pd_green1"><strong>font-weight</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>bold</strong></span><span class="grey">;</span>
<span class="pd_green1"><strong>text-decoration</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>none</strong></span><span class="grey">;</span>
<span class="pd_green1"><strong>text-transform</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>uppercase</strong></span><span class="grey">;</span></pre>
<p class="noindent">Here we’ve used <span class="green-d"><code><strong>#000</strong></code></span> instead of <span class="green-d"><code><strong>black</strong></code></span>; as noted in <a href="ch07.xhtml#sec7_1_1">Section 7.1.1</a>, it’s important to learn how to use these two interchangeably.</p>
<p class="indent"><span epub:type="pagebreak" id="page_283"></span>After adding the appropriate selectors, the styling changes look like <a href="ch09.xhtml#ch9list16">Listing 9.16</a>.</p>
<p class="listing" id="ch9list16"><strong>Listing 9.16:</strong> Styling the navigational links.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list16a" id="p09list16">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-nav</strong></span> {
  <span class="pd_green1"><strong>float</strong></span>: <span class="pd_green1"><strong>right</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">5.5</span><span class="pd_red"><strong>vh</strong></span> <span class="grey">60</span><span class="pd_red"><strong>px</strong></span> <span class="grey">0</span> 0;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">0.8</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
  <span class="pd_green1"><strong>text-decoration</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>text-transform</strong></span>: <span class="pd_green1"><strong>uppercase</strong></span>;
}</pre>
<p class="indent">Your page navigation should now look like <a href="ch09.xhtml#ch9fig19">Figure 9.19</a>.</p>
<figure class="figure" id="ch9fig19">
<img src="graphics/09fig19.jpg" alt="images" width="676" height="299"/>
<figcaption>
<p class="title-f"><strong>Figure 9.19:</strong> Navigational links are now a bit more stylish.</p>
</figcaption>
</figure>
<p class="indent">So how did we come up with those exact styles? The values came from just adding a couple of styling rules, and then tweaking the numbers until things looked good. Design isn’t always a systematic process—often you just need to make changes and then play around with the numbers until you get something you like. When designing <span epub:type="pagebreak" id="page_284"></span>websites, there tends to be an extended period of experimentation, so don’t worry if it takes you time to get things right when you work on your own!</p>
</section>
<section>
<h4 class="h4" id="sec9_6_3">9.6.3 Exercise</h4>
<ol class="number">
<li><p class="number">You can load dynamic text into includes. To try this, add the extra code <span class="green-d"><code><strong>{{ include.content }}</strong></code></span> somewhere in your <span class="green-d"><code><strong>header.html</strong></code></span> include, and then in the layout change the include tag to <span class="green-d"><code><strong>{% include header.html content=”This is my sample note.” %}</strong></code></span>.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_7">9.7 Advanced Selectors</h3>
<p class="noindent">In order to add an extra bit of polish to the site header, we are going to introduce a few more advanced CSS selectors, and then we’ll continue to add in more styling for the rest of our page. These advanced selectors include <em>pseudo-classes</em>, <em>first-child/last-child</em>, and <em>siblings</em>.</p>
<section>
<h4 class="h4" id="sec9_7_1">9.7.1 Pseudo-Classes</h4>
<p class="noindent">It’s always nice to have links do something when a user rolls over them, especially since we removed the underlines from the links in <a href="ch09.xhtml#ch9list16">Listing 9.16</a>. Those underlines on links are called <em>design affordances</em>, and they are there to give users the suggestion that something will happen if they move the cursor to the link and click.</p>
<p class="indent">Some people may argue that all links on a site should have some affordance that clearly marks them as something clickable, either with underlines or by making them look like buttons (HOLY WAR!!!). At this point in time, though, the design convention of putting plain-text links that don’t have underlines (or some other special style) in a header is something that most Internet users are now accustomed to. You just know that the things at the top of the page are clickable.</p>
<p class="indent">Without underlines or other immediately visible affordances, though, it is important to show users a response to rolling over the link with their cursor (including on mobile (<a href="ch09.xhtml#box9_3">Box 9.3</a>)). You really want people to know that they are interacting with an element that does something after they perform an action.</p>
<aside epub:type="sidebar" class="sidebar1" id="box9_3">
<p class="sb-title1"><span epub:type="pagebreak" id="page_285"></span><strong>Box 9.3: Style Note: Mobile Hover Consideration</strong></p>
<p class="sb-noindent">Mobile users don’t see rollover states, so you always need to be sure that the things you are designing will make sense to both mobile and desktop users. One way to do this is to make sure that you also style things so that there is a change when the link is actively clicked.</p>
<p class="sb-indent">You might think that this would be something that happens automatically no matter what, but if you make any styling changes that alter links from their browser default, you will actually need to use the <code>:active</code> pseudo-class to define how you want a link to appear when someone interacts with it.</p>
<p class="sb-indent">If you do end up removing all hints that something is clickable for your site on desktop, you might want to consider using a mobile media query to add in some hints specifically for mobile users. We’ll be discussing this further in the context of <em>media queries</em> in <a href="ch13.xhtml#ch13">Chapter 13</a>.</p>
</aside>
<p class="indent">All HTML links have a set of what are called <em>pseudo-classes</em> that allow developers to style different interactions with the link:</p>
<ul class="bullet">
<li><p class="bullet"><span class="green-d"><code><strong>:hover</strong></code></span>: Styles what happens when a user rolls over the link (applies to any element, not just links)</p></li>
<li><p class="bullet"><span class="green-d"><code><strong>:active</strong></code></span>: Styles what happens when a user clicks the link</p></li>
<li><p class="bullet"><span class="green-d"><code><strong>:visited</strong></code></span>: Styles what the link should look like if a user has already visited the linked page</p></li>
</ul>
<p class="indent">The way to add a pseudo-class to a style declaration is by combining the element or class name with the pseudo-class, like this:</p>
<pre class="pre1">.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}</pre>
<p class="noindent">This use of the <span class="green-d"><code><strong>:hover</strong></code></span> pseudo-class arranges to change the color of the link when the user’s mouse hovers over it. (For now we’ve just picked a random orange color that will stand out nicely against the blue background.)</p>
<p class="indent">We’ll add a second change as well, which is to make the logo partially transparent on hover using the <span class="green-d"><code><strong>opacity</strong></code></span> property. The combined result appears in <a href="ch09.xhtml#ch9list17">Listing 9.17</a>.</p>
<p class="listing" id="ch9list17"><span epub:type="pagebreak" id="page_286"></span><strong>Listing 9.17:</strong> Adding hover states to the navigational links.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list17a" id="p09list17">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>opacity</strong></span>: <span class="grey">0.</span>5;
}</pre>
<p class="noindent">Note that we’ve added the same styling to the <span class="green-d"><code><strong>:active</strong></code></span> pseudo-class in order to give mobile users feedback as well (as discussed in <a href="ch09.xhtml#box9_3">Box 9.3</a>).</p>
<p class="indent">Save your styles and refresh, and now the nav links will turn orange on rollover, and the logo will turn 50% transparent (the opacity style works like a decimal percentage), as shown in <a href="ch09.xhtml#ch9fig20">Figure 9.20</a>.</p>
<figure class="figure" id="ch9fig20">
<img src="graphics/09fig20.jpg" alt="images" width="676" height="296"/>
<figcaption>
<p class="title-f"><strong>Figure 9.20:</strong> Muuuuch better.</p>
</figcaption>
</figure>
<p class="indent">There are a bunch of other very useful pseudo-classes that are regularly used in designing layouts. We’ll talk about some of these throughout the rest of this section, and we’ll see further examples in <a href="ch13.xhtml#sec13_5">Section 13.5</a>.</p>
</section>
<section>
<h4 class="h4" id="sec9_7_2">9.7.2 Exercises</h4>
<ol class="number">
<li><p class="number">Now that you’ve seen how to style rollovers, try styling the <span class="green-d"><code><strong>.social-link</strong></code></span>s to have rollover states where the background color changes.</p></li>
<li><p class="number"><span epub:type="pagebreak" id="page_287"></span>As stated in this section, psuedo-classes like <span class="green-d"><code><strong>:hover</strong></code></span> don’t just apply to links. Try adding a hover state that changes the background color of the <span class="green-d"><code><strong>.full-hero</strong></code></span> element.</p>
</li>
</ol>
</section>
<section>
<h4 class="h4" id="sec9_7_3">9.7.3 <span class="green-d"><code><strong>first-child</strong></code></span></h4>
<p class="noindent">In order to indicate that the Home link in the navigation menu is particularly important, let’s arrange for it always to be a different color from the others. We could do this with a separate class, but since Home is always going to be the first link in the menu we can target it using what is called the <span class="green-d"><code><strong>first-child</strong></code></span> pseudo-class. This pseudo-class applies the corresponding styles only to the first child of the parent element. (There’s also a <span class="green-d"><code><strong>last-child</strong></code></span> pseudo-class, which we’ll use in <a href="ch13.xhtml#sec13_4">Section 13.4</a>, and many others that are beyond the scope of this tutorial.)</p>
<p class="indent">Let’s make the Home link work the <em>opposite</em> of the styling for the other links, so that it’s orange by default and black on rollover. To use the <span class="green-d"><code><strong>first-child</strong></code></span> pseudo-class, we need to make sure that whatever we’re targeting is contained in a wrapper, and that there is nothing else in the wrapper. That just means that when you are using the child pseudo-classes, you need the elements to be inside some other HTML element.</p>
<p class="indent">If there is anything like text, or an HTML element of a different type, between the top of the parent and the element you are trying to target, the first and last child pseudo-classes won’t work, but in this case we <em>are</em> going to target the first <span class="green-d"><code><strong>li</strong></code></span> in <span class="green-d"><code><strong>.header-nav</strong></code></span> (<a href="ch09.xhtml#ch9list18">Listing 9.18</a>). The <span class="green-d"><code><strong>ul</strong></code></span> with the class <span class="green-d"><code><strong>.header-nav</strong></code></span> is our wrapper, and the <span class="green-d"><code><strong>li</strong></code></span>s are all children that can be targeted.</p>
<p class="listing" id="ch9list18"><strong>Listing 9.18:</strong> Changing the appearance of just the first link.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list18a" id="p09list18">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>opacity</strong></span>: <span class="grey">0.</span>5;
}
<span class="bg1">.<span class="blue-v"><strong>header-nav</strong></span> &gt; <span class="pd_green1"><strong>li</strong></span>:<span class="v1"><strong>first-child</strong></span> <span class="pd_green1"><strong>a</strong></span> {</span>
<span class="bg1">  <span class="pd_green1"><strong>color</strong></span>: <span class="grey"><strong>#ed6e2f</strong></span>;</span>
<span class="bg1">}</span>
<span class="bg1">.<span class="blue-v"><strong>header-nav</strong></span> &gt; <span class="pd_green1"><strong>li</strong></span>:<span class="v1"><strong>first-child</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1"><strong>hover</strong></span> {</span>
<span class="bg1">  <span class="pd_green1"><strong>color</strong></span>: <span class="grey"><strong>#000</strong></span>;</span>
<span class="bg1">}</span></pre>
<p class="indent"><span epub:type="pagebreak" id="page_288"></span>Note how specific we are in <a href="ch09.xhtml#ch9list18">Listing 9.18</a>: We’re using the child selector to target only <span class="green-d"><code><strong>li</strong></code></span>s that are direct children of the <span class="green-d"><code><strong>.header-nav</strong></code></span> class. You don’t technically need this level of precision, but later on we will add in a dropdown menu in the header (<a href="ch13.xhtml#sec13_4">Section 13.4</a>), and if we target styles too generally then we’ll make styling the dropdown difficult.</p>
<p class="indent">Now when you save and refresh the first link should look different (<a href="ch09.xhtml#ch9fig21">Figure 9.21</a>).</p>
<figure class="figure" id="ch9fig21">
<img src="graphics/09fig21.jpg" alt="images" width="601" height="282"/>
<figcaption>
<p class="title-f"><strong>Figure 9.21:</strong> Making the first nav link orange.</p>
</figcaption>
</figure>
</section>
<section>
<h4 class="h4" id="sec9_7_4">9.7.4 Exercise</h4>
<ol class="number">
<li><p class="number">We mentioned that there are other child selector types. Try out <span class="green-d"><code><strong>:last-child</strong></code></span> by changing the color of the link that is in the last <span class="green-d"><code><strong>li</strong></code></span> in the page header.</p></li>
</ol>
</section>
<section>
<h4 class="h4" id="sec9_7_5">9.7.5 Siblings</h4>
<p class="noindent">Let’s look at two additional advanced selectors, and then after seeing how they work, we’ll use one to add another little style detail to our site navigation. CSS supports two sibling selectors, both of which are written like the child selector <span class="green-d"><code><strong>&gt;</strong></code></span> when making a declaration:</p>
<ul class="bullet">
<li><p class="bullet">The <em>adjacent sibling</em> <span class="green-d"><code><strong>+</strong></code></span>: Selects a single element only if it is right next to the primary element in the declaration. For example, <span class="green-d"><code><strong>h2 + p</strong></code></span> selects a <span class="green-d"><code><strong>p</strong></code></span> tag only if it is immediately preceded by an <span class="green-d"><code><strong>h2</strong></code></span> tag.</p></li>
<li><p class="bullet"><span epub:type="pagebreak" id="page_289"></span>The <em>general sibling</em> <span class="green-d"><code><strong>~</strong></code></span>: Selects all elements of the type in the declaration if they follow the primary element. For example, <span class="green-d"><code><strong>h2 ~ p</strong></code></span> applies to <em>all</em> <span class="green-d"><code><strong>p</strong></code></span> tags preceded by an <span class="green-d"><code><strong>h2</strong></code></span> tag.</p></li>
</ul>
<p class="indent">Let’s hop out of working on the header for a second to create an example to use with the sibling selectors. In your <span class="green-d"><code><strong>default.html</strong></code></span> file, replace the <span class="green-d"><code><strong>h2</strong></code></span> tag with the HTML from <a href="ch09.xhtml#ch9list19">Listing 9.19</a>.</p>
<p class="listing" id="ch9list19"><strong>Listing 9.19:</strong> Replacing the <span class="green-d"><code><strong>h2</strong></code></span> and adding some text.<br/><code><em>_layouts/default.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list19a" id="p09list19">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>h2</strong></span>&gt;THE FOUNDERS&lt;/<span class="pd_green1"><strong>h2</strong></span>&gt;
&lt;<span class="pd_green1"><strong>p</strong></span>&gt;
  Learn Enough to Be Dangerous was founded in 2015 by Michael Hartl, Lee Donahoe,
  and Nick Merwin. We believe that the kind of technical sophistication taught by
  the Learn Enough tutorials can benefit at least a billion people, and probably
  more.
&lt;/<span class="pd_green1"><strong>p</strong></span>&gt;
&lt;<span class="pd_green1"><strong>p</strong></span>&gt;Test paragraph&lt;/<span class="pd_green1"><strong>p</strong></span>&gt;</pre>
<p class="indent">We can target the paragraph that directly follows the <span class="green-d"><code><strong>h2</strong></code></span> with the style shown in <a href="ch09.xhtml#ch9list20">Listing 9.20</a>.</p>
<p class="listing" id="ch9list20"><strong>Listing 9.20:</strong> Adding an adjacent sibling selector.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list20a" id="p09list20">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_green1"><strong>h2</strong></span> <span class="grey">+</span> <span class="pd_green1"><strong>p</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">0.8</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>font-style</strong></span>: <span class="pd_green1"><strong>italic</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span> <span class="pd_green1"><strong>auto</strong></span> <span class="grey">0</span>;
  <span class="pd_green1"><strong>max-width</strong></span>: <span class="grey">70</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}</pre>
<p class="indent">Notice that only the first paragraph is styled (<a href="ch09.xhtml#ch9fig22">Figure 9.22</a>).</p>
<figure class="figure" id="ch9fig22">
<img src="graphics/09fig22.jpg" alt="images" width="676" height="130"/>
<figcaption>
<p class="title-f"><strong>Figure 9.22:</strong> Only the <span class="green-d"><code><strong>p</strong></code></span> immediately after the <span class="green-d"><code><strong>h2</strong></code></span> is styled.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_290"></span>Now if we change to the general sibling selector <span class="green-d"><code><strong>~</strong></code></span> as in <a href="ch09.xhtml#ch9list21">Listing 9.21</a>, both paragraphs will get styled (<a href="ch09.xhtml#ch9fig23">Figure 9.23</a>).</p>
<p class="listing" id="ch9list21"><strong>Listing 9.21:</strong> The general selector targets all elements that come after a specified element.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list21a" id="p09list21">Click here to view code image</a></p>
<pre class="pre2"><span class="bg1"><span class="pd_green1"><strong>h2 ~ p</strong></span> {</span>
  <span class="pd_green1"><strong>font-size</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>0</strong></span>.<span class="blue-v"><strong>8em</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>font-style</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>italic</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>margin</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>1em auto 0</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>max-width</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>70</strong></span><span class="grey">%;</span>
  <span class="pd_green1"><strong>text-align</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>center</strong></span><span class="grey">;</span>
}</pre>
<p class="indent">You may also have noticed from <a href="ch09.xhtml#ch9fig23">Figure 9.23</a> that the <span class="green-d"><code><strong>p</strong></code></span>s in the <span class="green-d"><code><strong>.bio-box</strong></code></span>es below aren’t styled. That is because the sibling selectors don’t pass styles to elements that are wrapped inside any other elements. They only work on elements inside the same parent.</p>
<figure class="figure" id="ch9fig23">
<img src="graphics/09fig23.jpg" alt="images" width="676" height="124"/>
<figcaption>
<p class="title-f"><strong>Figure 9.23:</strong> All <span class="green-d"><code><strong>p</strong></code></span> tags after the <span class="green-d"><code><strong>h2</strong></code></span> are now styled the same.</p>
</figcaption>
</figure>
<p class="indent">Looking back to the header, we can use a sibling selector in the site header navigation to target all the <span class="green-d"><code><strong>li</strong></code></span>s after the first <span class="green-d"><code><strong>li</strong></code></span>, and add in a little extra styling to help visually separate the links using the styles in <a href="ch09.xhtml#ch9list22">Listing 9.22</a>. You might have seen something like this online: a little vertical line between navigational links to help separate them from other links in a list. Let’s use a <em>sibling selector</em> to add some divider lines.</p>
<p class="listing" id="ch9list22"><strong>Listing 9.22:</strong> Using the general sibling selector to add styling to the header navigation.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list22a" id="p09list22">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
<span class="bg1">.<span class="blue-v"><strong>header-nav</strong></span> &gt; <span class="pd_green1"><strong>li</strong></span> ~ <span class="pd_green1"><strong>li</strong></span> {</span>
<span class="bg1">  <span class="pd_green1"><strong>border-left</strong></span>: <span class="grey"><strong>1</strong></span><span class="pd_red"><strong>px</strong></span> <span class="pd_green1"><strong>solid rgba</strong></span>(<span class="grey"><strong>0</strong></span>, <span class="grey"><strong>0</strong></span>, <span class="grey"><strong>0</strong></span>, <span class="grey"><strong>0.3</strong></span>);</span>
<span class="bg1">  <span class="pd_green1"><strong>padding-left</strong></span>: <span class="grey"><strong>1</strong></span><span class="pd_red"><strong>em</strong></span>;</span>
<span class="bg1">}</span></pre>
<p class="noindent"><span epub:type="pagebreak" id="page_291"></span>The rule <span class="green-d"><code><strong>.header-nav &gt; li ~ li</strong></code></span> in <a href="ch09.xhtml#ch9list22">Listing 9.22</a> says to apply the subsequent rules to all <span class="green-d"><code><strong>li</strong></code></span> elements next to an initial <span class="green-d"><code><strong>li</strong></code></span> inside an element with class <span class="green-d"><code><strong>”.header-nav”</strong></code></span>— in other words, every <span class="green-d"><code><strong>li</strong></code></span> in the menu after the first one. This way, the divider lines appear before every menu item except the first (<a href="ch09.xhtml#ch9fig24">Figure 9.24</a>).</p>
<figure class="figure" id="ch9fig24">
<img src="graphics/09fig24.jpg" alt="images" width="601" height="262"/>
<figcaption>
<p class="title-f"><strong>Figure 9.24:</strong> Menu divider lines.</p>
</figcaption>
</figure>
<p class="indent">Now that the navigation is fairly spiffy, let’s turn our attention to the logo, which will give us a chance to learn a little bit about CSS positioning.</p>
</section>
<section>
<h4 class="h4" id="sec9_7_6">9.7.6 Exercise</h4>
<ol class="number">
<li><p class="number">What if you didn’t use the <span class="green-d"><code><strong>~</strong></code></span> in <a href="ch09.xhtml#ch9list22">Listing 9.22</a>, but rather the adjacent sibling selector? Would the divider line appear before every menu item?</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_8">9.8 Positioning</h3>
<p class="noindent">In this section, we are going to take a look at how positioning works in CSS, focusing on the site logo, and then we’ll finish off the header design. CSS positioning can be a little tricky, and honestly there are people who work with CSS all the time who regularly get confused trying to get positioning to work right. So if this section seems <span epub:type="pagebreak" id="page_292"></span>long and loaded with examples, just bear with us and work through it all—you’ll find that understanding CSS positioning is an essential skill.</p>
<p class="indent">When you style an element’s position, there are two basic possibilities:</p>
<ol class="number">
<li><p class="number">Have the browser draw the element in its natural position in the normal flow of content on the page.</p></li>
<li><p class="number">Remove the target from the flow of content and display it in a different place using directional styles—left, right, top, and bottom—and an additional dimension, the so-called <span class="green-d"><code><strong>z-index</strong></code></span>.</p></li>
</ol>
<p class="indent">When an element is moved around out of its natural position with directional styles, it doesn’t affect other elements in the document—it either covers them up or is hidden behind them. It becomes like a ship cast adrift, torn free from its mooring on the page.</p>
<p class="indent">While it might be self-explanatory to move something left or right, or to change its top or bottom position, you might not be familiar with the idea of a <span class="green-d"><code><strong>z-index</strong></code></span>. The <span class="green-d"><code><strong>z-index</strong></code></span> property (usually a nonnegative number, 0 by default—negatives put elements behind everything) determines whether an element is displayed above or below other elements, as in farther “into” the screen or farther “out” toward the viewer. It’s an element’s 3D position.</p>
<p class="indent">You can think of this like looking down at a big stack of papers—the higher the <span class="green-d"><code><strong>z-index</strong></code></span> number is, the higher up the stack toward you the element is. A <span class="green-d"><code><strong>z-index</strong></code></span> of <span class="green-d"><code><strong>0</strong></code></span> would be the bottommost piece of paper. We’ll see a concrete example of the <span class="green-d"><code><strong>z-index</strong></code></span> in <a href="ch09.xhtml#sec9_9">Section 9.9</a>.</p>
<p class="indent">In order to change those directional styles, we first need to alter an element’s <span class="green-d"><code><strong>position</strong></code></span> property. The <span class="green-d"><code><strong>position</strong></code></span> style in CSS can be given five different values (though one of them isn’t really used). We’ll start with one of the most common one, <em>static</em>.</p>
<ul class="bullet">
<li><p class="bullet"><span class="green-d"><code><strong>position: static</strong></code></span> (<a href="ch09.xhtml#ch9fig25">Figure 9.25</a>)</p>
<figure class="figure" id="ch9fig25">
<img src="graphics/09fig25.jpg" alt="images" width="667" height="216"/>
<figcaption>
<p class="title-f"><strong>Figure 9.25:</strong> How <span class="green-d"><code><strong>position: static</strong></code></span> affects elements.</p>
</figcaption>
</figure>
<ul class="bullet1">
<li><p class="bullet"><strong>–</strong> This is the default positioning of elements in the flow of content.</p></li>
<li><p class="bullet"><strong>–</strong> An element that has no position style set, or has <span class="green-d"><code><strong>position: static</strong></code></span>, will ignore directional styles like left, right, top, and bottom.</p></li>
</ul></li>
<li><p class="bullet"><span epub:type="pagebreak" id="page_293"></span><span class="green-d"><code><strong>position: absolute</strong></code></span> (<a href="ch09.xhtml#ch9fig26">Figure 9.26</a>)</p>
<figure class="figure" id="ch9fig26">
<img src="graphics/09fig26.jpg" alt="images" width="670" height="262"/>
<figcaption>
<p class="title-f"><strong>Figure 9.26:</strong> How <span class="green-d"><code><strong>position: absolute</strong></code></span> affects elements.</p>
</figcaption>
</figure>
<ul class="bullet1">
<li><p class="bullet"><strong>–</strong> Positions the element at a specific place by taking it out of the document flow, either within a parent wrapper that has a <span class="green-d"><code><strong>position:</strong></code></span> value other than <span class="green-d"><code><strong>static</strong></code></span>, or (if there is no parent) a specific place in the browser window. It is still a part of the page content, which means when you scroll the page, it moves with the content.</p></li>
<li><p class="bullet"><strong>–</strong> Also lets you define a <span class="green-d"><code><strong>z-index</strong></code></span> property.</p></li>
<li><p class="bullet"><strong>–</strong> Because the element is removed from the document flow, the width or height is determined either by shrinking to the content inside or by setting dimensions in CSS. It behaves kind of like an element set to <span class="green-d"><code><strong>inline-block</strong></code></span>.</p></li>
<li><p class="bullet"><strong>–</strong> Causes any float that is set on the object to be ignored, so if you have both styles on an element you might as well delete the float.</p></li>
</ul></li>
<li><p class="bullet"><span class="green-d"><code><strong>position: relative</strong></code></span> (<a href="ch09.xhtml#ch9fig27">Figure 9.27</a>)</p>
<figure class="figure" id="ch9fig27">
<img src="graphics/09fig27.jpg" alt="images" width="663" height="231"/>
<figcaption>
<p class="title-f"><strong>Figure 9.27:</strong> How <span class="green-d"><code><strong>position: relative</strong></code></span> affects elements.</p>
</figcaption>
</figure>
<ul class="bullet1">
<li><p class="bullet"><span epub:type="pagebreak" id="page_294"></span><strong>–</strong> This is like static in that it respects the element’s starting position in the flow of content, but it also allows directional styles to be applied that nudge the element away from the boundary with other elements.</p>
</li>
<li><p class="bullet"><strong>–</strong> It allows absolutely positioned items to be contained within, as though the relatively positioned element were a separate canvas. In other words, if an absolutely positioned element is inside a relatively positioned element, a style of <span class="green-d"><code><strong>top: 0</strong></code></span> would cause the absolutely positioned element to be drawn at the top of the relatively positioned element rather than at the top of the page.</p></li>
<li><p class="bullet"><strong>–</strong> Also allows you to change the <span class="green-d"><code><strong>z-index</strong></code></span> of the element.</p></li>
</ul></li>
<li><p class="bullet"><span class="green-d"><code><strong>position: fixed</strong></code></span> (<a href="ch09.xhtml#ch9fig28">Figure 9.28</a>)</p>
<figure class="figure" id="ch9fig28">
<img src="graphics/09fig28.jpg" alt="images" width="662" height="229"/>
<figcaption>
<p class="title-f"><strong>Figure 9.28:</strong> How <span class="green-d"><code><strong>position: fixed</strong></code></span> affects elements.</p>
</figcaption>
</figure>
<ul class="bullet1">
<li><p class="bullet"><strong>–</strong> Positions the element at a specific place within the browser window totally separate from the page content. When you scroll the page, it won’t move.</p></li>
<li><p class="bullet"><strong>–</strong> Lets you set <span class="green-d"><code><strong>z-index</strong></code></span>.</p>
</li>
<li><p class="bullet"><strong>–</strong> Has the same need to have dimensions set as <span class="green-d"><code><strong>position: absolute</strong></code></span>; otherwise, it will be the size of the content inside.</p></li>
<li><p class="bullet"><strong>–</strong> Also causes floats to be ignored.</p></li>
</ul></li>
<li><p class="bullet"><span class="green-d"><code><strong>position: inherit</strong></code></span></p>
<ul class="bullet1">
<li><p class="bullet"><span epub:type="pagebreak" id="page_295"></span><strong>–</strong> This is not very common, so we aren’t going to discuss it other than to say it makes the element inherit the position from its parent.</p></li>
</ul></li>
</ul>
<p class="indent">Let’s play around with some examples. First, let’s add in some styles for the header to better see the boundaries and to give it dimensions (<a href="ch09.xhtml#ch9list23">Listing 9.23</a>).</p>
<p class="listing" id="ch9list23"><strong>Listing 9.23:</strong> Added styles for the <span class="green-d"><code><strong>.header</strong></code></span> class.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list23a" id="p09list23">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_blue1"><em>/* HEADER STYLES */</em></span>
.<span class="blue-v"><strong>header</strong></span> {
<span class="bg1">  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey"><strong>#aaa</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>height</strong></span>: <span class="grey"><strong>300</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>width</strong></span>: <span class="grey"><strong>100</strong></span><span class="pd_red"><strong>%</strong></span>;</span>
}</pre>
<p class="indent">Let’s now absolutely position the <span class="green-d"><code><strong>.header-logo</strong></code></span> and set it to <span class="green-d"><code><strong>50px</strong></code></span> from the bottom (<a href="ch09.xhtml#ch9list24">Listing 9.24</a>).</p>
<p class="listing" id="ch9list24"><strong>Listing 9.24:</strong> Adding an initial <span class="green-d"><code><strong>position: absolute</strong></code></span> to the logo.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list24a" id="p09list24">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span>:<span class="v1">first-child</span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}
<span class="bg1">.<span class="blue-v"><strong>header-logo</strong></span> {</span>
<span class="bg1">  <span class="pd_green1"><strong>bottom</strong></span>: <span class="grey"><strong>50</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>absolute</strong></span>;</span>
<span class="bg1">}</span></pre>
<p class="indent"><span epub:type="pagebreak" id="page_296"></span>Now save and refresh… where did the logo go (<a href="ch09.xhtml#ch9fig29">Figure 9.29</a>)?</p>
<figure class="figure" id="ch9fig29">
<img src="graphics/09fig29.jpg" alt="images" width="667" height="462"/>
<figcaption>
<p class="title-f"><strong>Figure 9.29:</strong> The parent container has no position style set.</p>
</figcaption>
</figure>
<p class="indent">The logo link ended up way at the bottom because the parent element that wraps the <span class="green-d"><code><strong>.header-logo</strong></code></span> doesn’t have any <span class="green-d"><code><strong>position</strong></code></span> style applied. Also, if you scroll the page up and down you’ll notice that the <span class="green-d"><code><strong>.header-logo</strong></code></span> still moves with the page. Let’s constrain the logo to stay within the header by adding a position property, as shown in <a href="ch09.xhtml#ch9list25">Listing 9.25</a>.</p>
<p class="listing" id="ch9list25"><strong>Listing 9.25:</strong> Setting a position other than static on the wrapper.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list25a" id="p09list25">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#aa</span>a;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">300</span><span class="pd_red"><strong>px</strong></span>;
<span class="bg1">  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>relative</strong></span>;</span>
  <span class="pd_green1"><strong>width</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>100</strong></span><span class="grey">%;</span>
}</pre>
<p class="indent"><span epub:type="pagebreak" id="page_297"></span>With the <span class="green-d"><code><strong>position</strong></code></span> rule in <a href="ch09.xhtml#ch9list25">Listing 9.25</a>, the <span class="green-d"><code><strong>.header-logo</strong></code></span> will now be <span class="green-d"><code><strong>50px</strong></code></span> from the bottom of the gray header box, and any positions that we give to <span class="green-d"><code><strong>.header-logo</strong></code></span> will be determined based on the boundaries of the <span class="green-d"><code><strong>.header</strong></code></span> container (<a href="ch09.xhtml#ch9fig30">Figure 9.30</a>). The way that the position is based off of the boundaries of the parent is what we meant when we said that setting a parent wrapper to <span class="green-d"><code><strong>position: relative</strong></code></span> made it like a separate canvas—everything inside that is absolutely positioned takes its place based on the dimensions of the parent.</p>
<figure class="figure" id="ch9fig30">
<img src="graphics/09fig30.jpg" alt="images" width="676" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.30:</strong> The absolutely positioned <span class="green-d"><code><strong>.header-logo</strong></code></span>.</p>
</figcaption>
</figure>
<p class="indent">Note here that when an element is absolutely positioned, the directional styles don’t add or subtract distance—setting <span class="green-d"><code><strong>bottom: 50px</strong></code></span> doesn’t move it <em>toward</em> the bottom, but rather sets the position <span class="green-d"><code><strong>50px</strong></code></span> <em>from</em> the bottom. So <span class="green-d"><code><strong>right: 50px</strong></code></span> puts the element <span class="green-d"><code><strong>50px</strong></code></span> from the right edge.</p>
<p class="indent">Negative positions work as well, and as long as the overflow of the parent wrapper isn’t set to <span class="green-d"><code><strong>hidden</strong></code></span>, the absolutely positioned element will get placed outside the boundaries of the parent (<a href="ch09.xhtml#ch9list26">Listing 9.26</a>).</p>
<p class="listing" id="ch9list26"><span epub:type="pagebreak" id="page_298"></span><strong>Listing 9.26:</strong> Trying out negative positioning on our object.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list26a" id="p09list26">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span> {
<span class="bg1">  <span class="pd_green1"><strong>bottom</strong></span>: <span class="grey"><strong>-50</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
  <span class="pd_green1"><strong>position</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>absolute</strong></span><span class="grey">;</span>
<span class="bg1">  <span class="pd_green1"><strong>right</strong></span>: <span class="grey"><strong>50</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
}</pre>
<p class="indent">After adding that style and refreshing your browser, the logo should be in a position similar to what is shown in <a href="ch09.xhtml#ch9fig31">Figure 9.31</a>.</p>
<figure class="figure" id="ch9fig31">
<img src="graphics/09fig31.jpg" alt="images" width="667" height="462"/>
<figcaption>
<p class="title-f"><strong>Figure 9.31:</strong> Positioning the logo on the right-hand side.</p>
</figcaption>
</figure>
<p class="indent">You might be asking, “Well, what happens if I set both a top <em>and</em> bottom, or a left <em>and</em> right?” The answer is that, for whatever reasons, the top and left properties will take priority and the bottom and right will be ignored.</p>
<p class="indent">Another thing to consider is when you set a position property, you are manipulating elements and messing around with the natural page flow, which means that it is possible to cause misalignments. So if you add <span class="green-d"><code><strong>left: 200px</strong></code></span> to the <span class="green-d"><code><strong>.header</strong></code></span>, the <span epub:type="pagebreak" id="page_299"></span>width of the element (which is 100%) isn’t recalculated. Instead, the entire <span class="green-d"><code><strong>.header</strong></code></span> box is pushed over by 200px, and your browser window will have horizontal scrollbars and look broken (<a href="ch09.xhtml#ch9fig32">Figure 9.32</a>).</p>
<figure class="figure" id="ch9fig32">
<img src="graphics/09fig32.jpg" alt="images" width="676" height="463"/>
<figcaption>
<p class="title-f"><strong>Figure 9.32:</strong> This sort of thing looks sloppy.</p>
</figcaption>
</figure>
<p class="indent">You have to be careful!</p>
<p class="indent">While we are still just playing around in the positioning sandbox, we should take a look at ways to deal with a situation that comes up anytime positioning in CSS is discussed: How do you center an absolutely positioned object horizontally and vertically in a way that allows the object to be any size… and allows the wrapper to be any size?</p>
<p class="indent">Let’s first look at an old method where the object that we are centering has a set height and width—centering this is easy. Give the logo a width and height, remove the old positioning, and change the background to better see the object (<a href="ch09.xhtml#ch9list27">Listing 9.27</a>).</p>
<p class="listing" id="ch9list27"><span epub:type="pagebreak" id="page_300"></span><strong>Listing 9.27:</strong> Adding height and width dimensions to the logo.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list27a" id="p09list27">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span> {
<span class="bg1">  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey"><strong>#000</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>height</strong></span>: <span class="grey"><strong>110</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
  <span class="pd_green1"><strong>position</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>absolute</strong></span><span class="grey">;</span>
<span class="bg1">  <span class="pd_green1"><strong>width</strong></span>: <span class="grey"><strong>110</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
}</pre>
<p class="indent">Now let’s center it.</p>
<p class="indent">You might think that centering the element would be as simple as giving the <span class="green-d"><code><strong>.header-logo</strong></code></span> class a style of <span class="green-d"><code><strong>left: 50%</strong></code></span> and <span class="green-d"><code><strong>top: 50%</strong></code></span>—that should put it in the middle, both horizontally and vertically, right (<a href="ch09.xhtml#ch9list28">Listing 9.28</a>)?</p>
<p class="listing" id="ch9list28"><strong>Listing 9.28:</strong> Positioning the <span class="green-d"><code><strong>.header-logo</strong></code></span> in the center?<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list28a" id="p09list28">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">110</span><span class="pd_red"><strong>px</strong></span>;
<span class="bg1">  <span class="pd_green1"><strong>left</strong></span>: <span class="grey"><strong>50</strong></span><span class="pd_red"><strong>%</strong></span>;</span>
  <span class="pd_green1"><strong>position</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>absolute</strong></span><span class="grey">;</span>
<span class="bg1">  <span class="pd_green1"><strong>top</strong></span>: <span class="grey"><strong>50</strong></span><span class="pd_red"><strong>%</strong></span>;</span>
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">110</span><span class="pd_red"><strong>px</strong></span>;
}</pre>
<p class="indent">Well, no, the reason this didn’t work is that when the browser positions an object, it calculates the distance using the same-named edge—so when you apply <span class="green-d"><code><strong>top: 50%</strong></code></span>, it moves the top edge (not the center point) of <span class="green-d"><code><strong>.header-logo</strong></code></span> 50% away from the top of <span class="green-d"><code><strong>.header</strong></code></span>; similarly, applying <span class="green-d"><code><strong>left: 50%</strong></code></span> tells the browser to move the left edge 50% away from the left of <span class="green-d"><code><strong>.header</strong></code></span>. The result is that the object we are trying to position is off-center by half of its width and height (<a href="ch09.xhtml#ch9fig33">Figure 9.33</a>).</p>
<figure class="figure" id="ch9fig33">
<img src="graphics/09fig33.jpg" alt="images" width="676" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.33:</strong> The red box in the expected position if centered vertically and horizontally.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_301"></span>How do we solve this and get our object in the actual center? The older method mentioned above was to use a negative margin (<a href="ch08.xhtml#sec8_6_2">Section 8.6.2</a>) to move the object up and left. This only works if you know the size of the object, though, since trying to use something like a percentage would move the object based on the size of the parent (recall from <a href="ch07.xhtml#sec7_4">Section 7.4</a> that percentage values are based on the size of the parent object). Since the height and width of the box are <span class="green-d"><code><strong>110px</strong></code></span>, half of that is <span class="green-d"><code><strong>55px</strong></code></span> (<a href="ch09.xhtml#ch9list29">Listing 9.29</a>).</p>
<p class="listing" id="ch9list29"><strong>Listing 9.29:</strong> Adding in the negative margins to position the black box in the right spot.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list29a" id="p09list29">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">110</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>left</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>%</strong></span>;
<span class="bg1">  margin: <span class="grey"><strong>-55</strong></span><span class="pd_red"><strong>px</strong></span> <span class="grey"><strong>0 0 -55</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>absolute</strong></span>;
  <span class="pd_green1"><strong>top</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">110</span><span class="pd_red"><strong>px</strong></span>;
}</pre>
<p class="indent"><span epub:type="pagebreak" id="page_302"></span>That works just fine, but you’d always be limiting yourself to centering only objects with fixed dimensions (<a href="ch09.xhtml#ch9fig34">Figure 9.34</a>).</p>
<figure class="figure" id="ch9fig34">
<img src="graphics/09fig34.jpg" alt="images" width="676" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.34:</strong> Negative margins worked!</p>
</figcaption>
</figure>
<p class="indent">If you wanted to make a slightly bigger (or smaller) centered object, you’d have to recalculate sizes and margins, and then make changes to your CSS. That’s too much work, and it wouldn’t work at all with dynamically sized elements. Thankfully there is a better, relatively new CSS style called <span class="green-d"><code><strong>transform</strong></code></span> that can help. The <span class="green-d"><code><strong>transform</strong></code></span> property allows developers to do all sorts of amazing things like move objects around, rotate them, and simulate three-dimensional movement.</p>
<p class="indent">The upside for centering objects is that this new style calculates all these movements based on the object itself. So if we move it 50% to the left using <span class="green-d"><code><strong>transform</strong></code></span>, the browser looks at the object’s width, and then moves it to the left 50% of its own width, not the width of the parent.</p>
<p class="indent">The actual style declaration looks like this: <span class="green-d"><code><strong>transform: translate(x, y)</strong></code></span>— where <span class="green-d"><code><strong>x</strong></code></span> is replaced by the distance along the x-axis (left is negative, right is positive), and the same for the y-axis (up is negative, down is positive). So, to move our object left and up half its width and height, we’d add the <span class="green-d"><code><strong>transform</strong></code></span> style like you see in <a href="ch09.xhtml#ch9list30">Listing 9.30</a> (make sure to remove the margin styling that we added in <a href="ch09.xhtml#ch9list29">Listing 9.29</a>).</p>
<p class="listing" id="ch9list30"><span epub:type="pagebreak" id="page_303"></span><strong>Listing 9.30:</strong> Moving an object using <span class="green-d"><code><strong>transform</strong></code></span>.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list30a" id="p09list30">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">110</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>left</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>absolute</strong></span>;
  <span class="pd_green1"><strong>top</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>%</strong></span>;
<span class="bg1">  <span class="pd_green1"><strong>transform</strong></span>: <span class="pd_green1"><strong>translate</strong></span>(<strong>-50</strong><span class="pd_red"><strong>%</strong></span>, <strong>-50</strong><span class="pd_red"><strong>%</strong></span>);</span>
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">110</span><span class="pd_red"><strong>px</strong></span>;
}</pre>
<p class="indent">Now when you save your work and refresh the browser you’ll have a black box in the center of the gray header. It doesn’t matter what dimensions you give for either the <span class="green-d"><code><strong>.header-logo</strong></code></span> or <span class="green-d"><code><strong>.header</strong></code></span>—you’ll always have a vertically and horizontally centered object. To try it out, delete the height and width that we gave the <span class="green-d"><code><strong>.header-logo</strong></code></span>.</p>
<p class="indent">When you save and refresh your browser, the now-smaller box will still be centered vertically and horizontally (<a href="ch09.xhtml#ch9fig35">Figure 9.35</a>).</p>
<figure class="figure" id="ch9fig35">
<img src="graphics/09fig35.jpg" alt="images" width="676" height="473"/>
<figcaption>
<p class="title-f"><strong>Figure 9.35:</strong> No matter what size the object is, it stays right in the center.</p>
</figcaption>
</figure>
<section>
<h4 class="h4" id="sec9_8_1"><span epub:type="pagebreak" id="page_304"></span>9.8.1 A Real Logo</h4>
<p class="noindent">All right, enough positioning playtime. Let’s get back to making this site look good by putting an actual logo in that <span class="green-d"><code><strong>.header-logo</strong></code></span>. In your project directory, add a new folder called <span class="green-d"><code><strong>images</strong></code></span> (<a href="ch09.xhtml#ch9fig36">Figure 9.36</a>):</p>
<figure class="figure" id="ch9fig36">
<img src="graphics/09fig36.jpg" alt="images" width="676" height="478"/>
<figcaption>
<p class="title-f"><strong>Figure 9.36:</strong> New images folder in your project directory.</p>
</figcaption>
</figure>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> mkdir images</pre>
<p class="indent">Then use this <span class="green-d"><code><strong>curl</strong></code></span> command to grab the logo image off the Learn Enough servers:</p>
<p class="codelink"><a href="ch09_images.xhtml#p304pro01a" id="p304pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> curl -o images/logo.png -L https://cdn.learnenough.com/le-css/logo.png</pre>
<p class="indent">Now let’s put the image into the <span class="green-d"><code><strong>header.html</strong></code></span> (<a href="ch09.xhtml#ch9list31">Listing 9.31</a>). The result appears in <a href="ch09.xhtml#ch9fig37">Figure 9.37</a>.</p>
<figure class="figure" id="ch9fig37">
<img src="graphics/09fig37.jpg" alt="images" width="676" height="524"/>
<figcaption>
<p class="title-f"><strong>Figure 9.37:</strong> The initial (sub-optimal) logo placed on the page.</p>
</figcaption>
</figure>
<p class="listing" id="ch9list31"><span epub:type="pagebreak" id="page_305"></span><strong>Listing 9.31:</strong> Replacing the word <em>logo</em> with a logo image.<br/><code><em>_includes/header.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list31a" id="p09list31">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>header</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"header"</span>&gt;
  &lt;<span class="pd_green1"><strong>nav</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>ul</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"header-nav"</span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/"</span>&gt;Home&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;Nav 1&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;Nav 2&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"#"</span>&gt;Nav 3&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
    &lt;/<span class="pd_green1"><strong>ul</strong></span>&gt;
  &lt;/<span class="pd_green1"><strong>nav</strong></span>&gt;
<span class="bg1">  &lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"/"</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"header-logo"</strong></span>&gt;</span>
<span class="bg1">    &lt;<span class="pd_green1"><strong>img</strong></span> <span class="light-green"><strong>src</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"/images/logo.png"</strong></span> <span class="light-green"><strong>alt</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"Learn Enough"</strong></span>&gt;</span>
<span class="bg1">  &lt;/<span class="pd_green1"><strong>a</strong></span>&gt;</span>
&lt;/<span class="pd_green1"><strong>header</strong></span>&gt;</pre>
<p class="indent"><span epub:type="pagebreak" id="page_306"></span>Now we are going to make a whole lot of changes to whip this part of the site into shape. As in <a href="ch09.xhtml#sec9_6_2">Section 9.6.2</a>, we aren’t going to go through and give a reason why each value is the exact number we chose. Styling a section of a site is a non-linear process at times, and you’ll likely need to experiment a lot if you are doing this on your own starting from a blank slate.</p>
<p class="indent">First, we are going to make the header background color black and any text in the header white as follows:</p>
<p class="codelink"><a href="ch09_images.xhtml#p306pro01a" id="p306pro01">Click here to view code image</a></p>
<pre class="pre1">.<span class="blue-v"><strong>header</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}</pre>
<p class="indent">That’s also going to require that we change the color of the links, as well as the rollover color for the first-child link in the navigation:</p>
<p class="codelink"><a href="ch09_images.xhtml#p306pro02a" id="p306pro02">Click here to view code image</a></p>
<pre class="pre1">.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span>:<span class="v1">first-child</span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}</pre>
<p class="indent">We’ll also need to change the background color of our little divider lines so that it is partially transparent white instead of partially transparent black:</p>
<p class="codelink"><a href="ch09_images.xhtml#p306pro03a" id="p306pro03">Click here to view code image</a></p>
<pre class="pre1"><span class="pd_green1"><strong>border-left</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>1px solid rgba</strong></span><span class="grey">(</span><span class="pd_green1"><strong>255</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>255</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>255</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>0</strong></span>.<span class="blue-v"><strong>3</strong></span><span class="grey">);</span></pre>
<p class="indent">Then we are going to move the <span class="green-d"><code><strong>.header-logo</strong></code></span> into the top left, and shrink the image a bit:</p>
<p class="codelink"><a href="ch09_images.xhtml#p306pro04a" id="p306pro04">Click here to view code image</a></p>
<pre class="pre1">.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>relative</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
}
.<span class="blue-v"><strong>header-logo</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">4.3</span><span class="pd_red"><strong>vh</strong></span>;
}</pre>
<p class="noindent"><span epub:type="pagebreak" id="page_307"></span>We chose <span class="green-d"><code><strong>10vh</strong></code></span> for the size of the link, and for the image we set the width to be 4.3% of the height of the container (<span class="green-d"><code><strong>4.3vh</strong></code></span>). We got those values after playing around with different numbers and settling on this size for a balance of readability while not taking up too much space.</p>
<p class="indent">You’ll notice that most of the sizing styles are on the link that wraps the image and not on the image itself. The reason we did that was so that if there is a problem downloading the image, or a delay, there is still a nice, big clickable link in the header.</p>
<p class="indent">Putting everything together gives us <a href="ch09.xhtml#ch9list32">Listing 9.32</a>, which includes all the styling for the site header so far.</p>
<p class="listing" id="ch9list32"><strong>Listing 9.32:</strong> Changing up the styling for the header and logo.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list32a" id="p09list32">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_blue1"><em>/* HEADER STYLES */</em></span>
.<span class="blue-v"><strong>header</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}
.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>relative</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
}
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-logo</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">4.3</span><span class="pd_red"><strong>vh</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> {
  <span class="pd_green1"><strong>float</strong></span>: <span class="pd_green1"><strong>right</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">5.5</span><span class="pd_red"><strong>vh</strong></span> <span class="grey">60</span><span class="pd_red"><strong>px</strong></span> <span class="grey">0</span> 0;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> <span class="grey">~</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>border-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>px</strong></span> <span class="pd_green1"><strong>solid</strong></span> <span class="pd_green1">rgb</span>a<span class="grey">(25</span>5, <span class="grey">25</span>5, <span class="grey">25</span>5, <span class="grey">0.</span>3);
  <span class="pd_green1"><strong>padding-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">0.8</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
  <span class="pd_green1"><strong>text-decoration</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>text-transform</strong></span>: <span class="pd_green1"><strong>uppercase</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span>:<span class="v1">first-child</span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span>:<span class="v1">first-child</span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}</pre>
<p class="indent"><span epub:type="pagebreak" id="page_308"></span>Save and refresh, and your header should look like <a href="ch09.xhtml#ch9fig38">Figure 9.38</a>. That logo’s lookin’ sharp!</p>
<figure class="figure" id="ch9fig38">
<img src="graphics/09fig38.jpg" alt="images" width="676" height="346"/>
<figcaption>
<p class="title-f"><strong>Figure 9.38:</strong> The header, now styled.</p>
</figcaption>
</figure>
</section>
<section>
<h4 class="h4" id="sec9_8_2">9.8.2 Exercise</h4>
<ol class="number">
<li><p class="number">Try moving the <span class="green-d"><code><strong>ul</strong></code></span> that contains the social links to the bottom-left corner of the <span class="green-d"><code><strong>.full-hero</strong></code></span> using the positioning rules you’ve learned. What changes are you going to need to make to <span class="green-d"><code><strong>.full-hero</strong></code></span> to allow the social links to remain inside?</p></li>
<li><p class="number"><span epub:type="pagebreak" id="page_309"></span>To see why we gave dimensional styling and an <span class="green-d"><code><strong>alt</strong></code></span> tag to our image, try removing the image source link to simulate the browser not finding the file.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_9">9.9 Fixed Header</h3>
<p class="noindent">You may have noticed the recent design trend where the header sticks to the top of the screen as you scroll down the page. This is called a <em>fixed header</em>—the header is styled to use <span class="green-d"><code><strong>position: fixed</strong></code></span> to take the header entirely out of the page content and stick it to the top of the user’s browser. If your site has a bunch of different sections that your users need to navigate to, a fixed header can be a good solution to keep them from getting annoyed that they always have to scroll to the top to do something new.</p>
<p class="indent">The way to implement a fixed header is to change the positioning of the header to <span class="green-d"><code><strong>fixed</strong></code></span> while specifying a <span class="green-d"><code><strong>z-index</strong></code></span> for the header. Recall from the beginning of <a href="ch09.xhtml#sec9_8">Section 9.8</a> that the <span class="green-d"><code><strong>z-index</strong></code></span> determines whether an element is drawn in front of or behind other elements. We’ll want to give our header a large value for <span class="green-d"><code><strong>z-index</strong></code></span>, which will force the browser to draw the element above other elements (i.e., closer to the user using our stack-of-paper analogy).</p>
<p class="indent">The styles to change the positioning value and set a <span class="green-d"><code><strong>z-index</strong></code></span> are shown in <a href="ch09.xhtml#ch9list33">Listing 9.33</a>.</p>
<p class="listing" id="ch9list33"><strong>Listing 9.33:</strong> Fixing the header’s position means that content will now scroll under it.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list33a" id="p09list33">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
<span class="bg1">  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>fixed</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>width</strong></span>: <span class="grey"><strong>100</strong></span><span class="pd_red"><strong>%</strong></span>;</span>
<span class="bg1">  <span class="pd_green1"><strong>z-index</strong></span>: <span class="grey"><strong>20</strong></span>;</span>
}</pre>
<p class="indent">When you check the work in your browser, you’ll find that the header is now pinned to the top of the screen, and when you scroll, all the content will scroll underneath.</p>
<p class="indent">The resulting black bar at the top looks cool, but what if we were to put a border around the entire page? It could look interesting to have a dark area around the whole site to frame the content. We can arrange for this with the styling shown in <a href="ch09.xhtml#ch9list34">Listing 9.34</a>.</p>
<p class="listing" id="ch9list34"><span epub:type="pagebreak" id="page_310"></span><strong>Listing 9.34:</strong> Just for fun, let’s put a border around the entire site.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list34a" id="p09list34">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_blue1"><em>/* GLOBAL STYLES */</em></span>
<span class="pd_green1"><strong>html</strong></span> {
  <span class="pd_green1"><strong>box-shadow</strong></span>: <span class="grey">0 0 0 30</span><span class="pd_red"><strong>px</strong></span> <span class="grey">#000</span> <span class="pd_green1"><strong>inset</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0 30</span><span class="pd_red"><strong>px</strong></span>;
}</pre>
<p class="indent"><a href="ch09.xhtml#ch9list34">Listing 9.34</a> introduces the <span class="green-d"><code><strong>box-shadow</strong></code></span> style, which is a relatively new CSS style that lets you add drop shadows to HTML elements, and the declaration that we added is a shorthand for <span class="green-d"><code><strong>box-shadow: x-axis y-axis blur size color inset</strong></code></span>. We aren’t going to go any deeper into it, but if you want to play around with box shadows there are a number of sites that let you fiddle with the settings, such as CSSmatic box shadow (<a href="https://www.cssmatic.com/box-shadow">https://www.cssmatic.com/box-shadow</a>).</p>
<p class="indent">After applying the code in <a href="ch09.xhtml#ch9list34">Listing 9.34</a>, your page should look like <a href="ch09.xhtml#ch9fig39">Figure 9.39</a>.</p>
<figure class="figure" id="ch9fig39">
<img src="graphics/09fig39.jpg" alt="images" width="668" height="467"/>
<figcaption>
<p class="title-f"><strong>Figure 9.39:</strong> Box shadow inset around the entire page. Nifty.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_311"></span>After saving and refreshing, you might have noticed that the logo in the header now looks a little off since it isn’t right up in the corner anymore. This is because we increased the padding on the entire site by <span class="green-d"><code><strong>30px</strong></code></span> for the black border. Let’s use a negative value (<span class="green-d"><code><strong>-30px</strong></code></span>) on the positioning to get it back in place, as shown in <a href="ch09.xhtml#ch9list35">Listing 9.35</a>.</p>
<p class="listing" id="ch9list35"><strong>Listing 9.35:</strong> Using a negative value to move the logo back into place.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list35a" id="p09list35">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
<span class="bg1">  <span class="pd_green1"><strong>left</strong></span>: <span class="grey"><strong>-30</strong></span><span class="pd_red"><strong>px</strong></span>;</span>
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>relative</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
}</pre>
<p class="indent"><span epub:type="pagebreak" id="page_312"></span>The fixed final header should now look like <a href="ch09.xhtml#ch9fig40">Figure 9.40</a> (shown as it should appear with the mouse cursor on the logo, making it orange).</p>
<figure class="figure" id="ch9fig40">
<img src="graphics/09fig40.jpg" alt="images" width="668" height="467"/>
<figcaption>
<p class="title-f"><strong>Figure 9.40:</strong> A completed page header.</p>
</figcaption>
</figure>
<p class="indent">One thing you might have noticed is that after adding fixed positioning to the header, the big <span class="green-d"><code><strong>h1</strong></code></span> text in the hero is covered. We’ll tackle this issue in <a href="ch10.xhtml#sec10_2">Section 10.2</a>.</p>
<p class="indent">Now that we’ve got the header squared away, let’s turn our attention to the other end of the site.</p>
<section>
<h4 class="h4" id="sec9_9_1">9.9.1 Exercise</h4>
<ol class="number">
<li><p class="number">To see why it is important to define the <span class="green-d"><code><strong>z-index</strong></code></span> of the header, try setting the value to <span class="green-d"><code><strong>1</strong></code></span>, and then add styles to the <span class="green-d"><code><strong>.social-list</strong></code></span> class to set <span class="green-d"><code><strong>position: relative</strong></code></span> and <span class="green-d"><code><strong>z-index: 40</strong></code></span>. Then scroll the page.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec9_10">9.10 A Footer, and Includes in Includes</h3>
<p class="noindent">After creating and styling a site header, a natural next step is to style the page footer. This is the navigational/informational section that can be found at the bottom of a site (<a href="ch09.xhtml#ch9fig41">Figure 9.41</a>).</p>
<figure class="figure" id="ch9fig41">
<img src="graphics/09fig41.jpg" alt="images" width="599" height="674"/>
<figcaption>
<p class="title-f"><strong>Figure 9.41:</strong> A refresher on the elements of a typical web page, including a page footer.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_313"></span>Often, the footer is a partial replication of the navigational elements from the header (just styled in a slightly different way), but many sites add to that a bunch of other content—everything from store locations and hours to additional content links.</p>
<p class="indent">Since the footer is found at the end of the page and contains ancillary information, you don’t really need to worry about space (there’s plenty of room at the bottom!). What we mean by that is that you can think of the footer as extra space, where users aren’t <em>required</em> to see everything there. Many sites, such as Amazon, have a lot of content in a giant footer at the bottom of the page (<a href="ch09.xhtml#ch9fig42">Figure 9.42</a>).</p>
<figure class="figure" id="ch9fig42">
<img src="graphics/09fig42.jpg" alt="images" width="742" height="502"/>
<figcaption>
<p class="title-f"><strong>Figure 9.42:</strong> A giant footer.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_314"></span>We’ll start by creating a new <span class="green-d"><code><strong>footer.html</strong></code></span> file inside the <span class="green-d"><code><strong>_includes</strong></code></span> folder:</p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> touch _includes/footer.html</pre>
<p class="indent">Next, we’ll add some HTML. We’re going to wrap the footer in another HTML5 semantic tag, the <span class="green-d"><code><strong>footer</strong></code></span> tag. As with the <span class="green-d"><code><strong>header</strong></code></span> tag, this is a semantic element that works just like a standard <span class="green-d"><code><strong>div</strong></code></span>, but gives automated site readers (such as web spiders and screen readers for the visually impaired) a better idea of what the purpose is of the content inside. We are also going to add in a logo link similar to the one in the header. The result appears in <a href="ch09.xhtml#ch9list36">Listing 9.36</a>.</p>
<p class="listing" id="ch9list36"><strong>Listing 9.36:</strong> Adding in the basic footer structure.<br/><code><em>_includes/footer.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list36a" id="p09list36">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>footer</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"footer"</span>&gt;
  &lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"footer-logo"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/"</span>&gt;
    &lt;<span class="pd_green1"><strong>img</strong></span> <span class="light-green1">src</span><span class="grey">=</span><span class="pd_red">"/images/logo.png"</span> <span class="light-green1">alt</span><span class="grey">=</span><span class="pd_red">"Learn Enough"</span>/&gt;
  &lt;/<span class="pd_green1"><strong>a</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>h3</strong></span>&gt;Learn Enough &lt;<span class="pd_green1"><strong>span</strong></span>&gt;to Be Dangerous&lt;/<span class="pd_green1"><strong>span</strong></span>&gt;&lt;/<span class="pd_green1"><strong>h3</strong></span>&gt;
&lt;/<span class="pd_green1"><strong>footer</strong></span>&gt;</pre>
<p class="indent"><span epub:type="pagebreak" id="page_315"></span>To include the footer in the default layout, we’ll follow the model from <a href="ch09.xhtml#ch9list12">Listing 9.12</a> and use Liquid to insert the contents of <span class="green-d"><code><strong>footer.html</strong></code></span> just before the closing <span class="green-d"><code><strong>body</strong></code></span> tag in <span class="green-d"><code><strong>default.html</strong></code></span> (<a href="ch09.xhtml#ch9list37">Listing 9.37</a>).</p>
<p class="listing" id="ch9list37"><strong>Listing 9.37:</strong> Add in the Liquid tag to the default layout.<br/><code><em>_layouts/default.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list37a" id="p09list37">Click here to view code image</a></p>
<pre class="pre2">    .
    .
    .
    &lt;/<span class="pd_green1"><strong>p</strong></span>&gt;
<span class="bg1">    {% include footer.html %}</span>
  &lt;/<span class="pd_green1"><strong>body</strong></span>&gt;
&lt;/<span class="pd_green1"><strong>html</strong></span>&gt;</pre>
<p class="indent">Now let’s add some styling as well. We’ll give the footer a black background, like the header, and we’ll give it some padding. We’ll make sure that the content inside is easy to read by using <span class="green-d"><code><strong>vh</strong></code></span> units, which causes our padding to take up a large portion of the screen:</p>
<pre class="pre1"><span class="pd_green1"><strong>background-color</strong></span><span class="grey">:</span> #<span class="blue-v"><strong>000</strong></span><span class="grey">;</span>
<span class="pd_green1"><strong>padding</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>10vh 0 15vh</strong></span><span class="grey">;</span></pre>
<p class="indent">We’ll also constrain the size of the logo so that it isn’t a giant image, and style the <span class="green-d"><code><strong>h3</strong></code></span> and the span that is inside it (just to add a little design detail to give some of the text a different color). All together the footer styling looks like <a href="ch09.xhtml#ch9list38">Listing 9.38</a>.</p>
<p class="listing" id="ch9list38"><strong>Listing 9.38:</strong> The initial styles for the footer.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list38a" id="p09list38">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_blue1"><em>/* FOOTER STYLES */</em></span>
.<span class="blue-v"><strong>footer</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span> <span class="grey">0 15</span><span class="pd_red"><strong>vh</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}
.<span class="blue-v"><strong>footer-logo</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>px</strong></span>;
}
.<span class="blue-v"><strong>footer</strong></span> <span class="pd_green1"><strong>h3</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">1.5</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>text-transform</strong></span>: <span class="pd_green1"><strong>uppercase</strong></span>;
}
.<span class="blue-v"><strong>footer</strong></span> <span class="pd_green1"><strong>h3 span</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#aa</span>a;
}

<span class="pd_blue1"><em>/* HERO STYLES */</em></span></pre>
<p class="indent"><span epub:type="pagebreak" id="page_316"></span>Save and refresh, and the result should appear as in <a href="ch09.xhtml#ch9fig43">Figure 9.43</a>.</p>
<figure class="figure" id="ch9fig43">
<img src="graphics/09fig43.jpg" alt="images" width="676" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.43:</strong> The first stab at the footer is looking pretty good.</p>
</figcaption>
</figure>
<p class="noindent">And it looks... not too bad!</p>
<p class="indent">But let’s make it a little more useful and also add in the navigational links from the header. You could just copy and paste the HTML from the header, but if you added a new page you’d have to edit your navigation in two spots… we hope the mere <span epub:type="pagebreak" id="page_317"></span>suggestion of that is making your programmer’s itch flare up again. Since those nav links are always going to be the same in both the header and the footer, we can create a new include to include in includes (thereby fulfilling the promise from <a href="ch09.xhtml#ch9fig13">Figure 9.13</a>—it wasn’t (just) a joke!).</p>
<p class="indent">We don’t want to take the outer <span class="green-d"><code><strong>ul</strong></code></span> from <a href="ch09.xhtml#ch9list14">Listing 9.14</a> since it has a <span class="green-d"><code><strong>header-nav</strong></code></span> class applied to it (well, you <em>could</em> add that in the include, then unstyle all the header styles, and then restyle to fit the footer—but that would be a lot of unnecessary work). So the content of our new include will just be the <span class="green-d"><code><strong>li</strong></code></span>s and the links—in other words, the content that definitely needs to be repeated.</p>
<p class="indent">To eliminate repetition in the links, let’s create a new file in the <span class="green-d"><code><strong>_includes</strong></code></span> directory and name it <span class="green-d"><code><strong>nav-links.html</strong></code></span>:</p>
<p class="codelink"><a href="ch09_images.xhtml#p317pro01a" id="p317pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> touch _includes/nav-links.html</pre>
<p class="noindent">Then cut the <span class="green-d"><code><strong>li</strong></code></span>s and links out of the <span class="green-d"><code><strong>.header-nav</strong></code></span> and paste them into the new include, as shown in <a href="ch09.xhtml#ch9list39">Listing 9.39</a>.</p>
<p class="listing" id="ch9list39"><strong>Listing 9.39:</strong> We’ve cut and pasted in the <span class="green-d"><code><strong>li</strong></code></span>s and links.<br/><code><em>_includes/nav-links.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list39a" id="p09list39">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/"</span>&gt;Home&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
&lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">""</span>&gt;Nav 1&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
&lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">""</span>&gt;Nav 2&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
&lt;<span class="pd_green1"><strong>li</strong></span>&gt;&lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">""</span>&gt;Nav 3&lt;/<span class="pd_green1"><strong>a</strong></span>&gt;&lt;/<span class="pd_green1"><strong>li</strong></span>&gt;</pre>
<p class="indent">With the code in <a href="ch09.xhtml#ch9list39">Listing 9.39</a>, we can replace the links in the header file with a Liquid tag, as shown in <a href="ch09.xhtml#ch9list40">Listing 9.40</a>.</p>
<p class="listing" id="ch9list40"><strong>Listing 9.40:</strong> Updating the header with an include and a second class.<br/><code><em>_includes/header.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list40a" id="p09list40">Click here to view code image</a></p>
<pre class="pre2"><span class="bg1">&lt;<span class="pd_green1"><strong>ul</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"header-nav nav-links"</strong></span>&gt;</span>
<span class="bg1">  {% include nav-links.html %}</span>
&lt;/<span class="pd_green1"><strong>ul</strong></span>&gt;</pre>
<p class="indent">Note that we’ve also added a <span class="green-d"><code><strong>.nav-links</strong></code></span> class in <a href="ch09.xhtml#ch9list40">Listing 9.40</a> so we can add styling to the links that will be shared between the header and footer. Before, we were targeting and styling the links using the class <span class="green-d"><code><strong>.header-nav</strong></code></span> (introduced in <a href="ch09.xhtml#ch9list14">Listing 9.14</a>), <span epub:type="pagebreak" id="page_318"></span>but now that the links are going to be in multiple places, that isn’t a good name to use to target the styling common to both the header and the footer.</p>
<p class="indent">Now that we’ve factored the nav links into a separate include, let’s add them to the navigation section in the footer. In order to allow footer-specific styling, we’ll also add a <span class="green-d"><code><strong>footer-nav</strong></code></span> class (in analogy with the header’s <span class="green-d"><code><strong>header-nav</strong></code></span> class), as well as the general <span class="green-d"><code><strong>nav-links</strong></code></span> class added in <a href="ch09.xhtml#ch9list40">Listing 9.40</a>. The result appears in <a href="ch09.xhtml#ch9list41">Listing 9.41</a>.</p>
<p class="listing" id="ch9list41"><strong>Listing 9.41:</strong> The new Liquid tag to load the links in the footer.<br/><code><em>_includes/footer.html</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list41a" id="p09list41">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>footer</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"footer"</span>&gt;
  &lt;<span class="pd_green1"><strong>a</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"footer-logo"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/"</span>&gt;
    &lt;<span class="pd_green1"><strong>img</strong></span> <span class="light-green1">src</span><span class="grey">=</span><span class="pd_red">"/images/logo.png"</span> <span class="light-green1">alt</span><span class="grey">=</span><span class="pd_red">"Learn Enough"</span>/&gt;
  &lt;/<span class="pd_green1"><strong>a</strong></span>&gt;
<span class="bg1">  &lt;<span class="pd_green1"><strong>nav</strong></span>&gt;</span>
<span class="bg1">    &lt;<span class="pd_green1"><strong>ul</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"footer-nav nav-links"</strong></span>&gt;</span>
<span class="bg1">      {% include nav-links.html %}</span>
<span class="bg1">    &lt;/<span class="pd_green1"><strong>ul</strong></span>&gt;</span>
<span class="bg1">  &lt;/<span class="pd_green1"><strong>nav</strong></span>&gt;</span>
  &lt;<span class="pd_green1"><strong>h3</strong></span>&gt;Learn Enough &lt;<span class="pd_green1"><strong>span</strong></span>&gt;to Be Dangerous&lt;/<span class="pd_green1"><strong>span</strong></span>&gt;&lt;/<span class="pd_green1"><strong>h3</strong></span>&gt;
&lt;/<span class="pd_green1"><strong>footer</strong></span>&gt;</pre>
<p class="indent">Now let’s add some styling. First, we should move some of the styles that before were defined on <span class="green-d"><code><strong>.header-nav a</strong></code></span> over to <span class="green-d"><code><strong>.nav-links a</strong></code></span>, and change the class that is targeting the <span class="green-d"><code><strong>:hover</strong></code></span> and <span class="green-d"><code><strong>:active</strong></code></span> states from <span class="green-d"><code><strong>.header-nav</strong></code></span> to <span class="green-d"><code><strong>.nav-link</strong></code></span>, as in <a href="ch09.xhtml#ch9list42">Listing 9.42</a>.</p>
<p class="listing" id="ch9list42"><strong>Listing 9.42:</strong> Moving link styling into a new <span class="green-d"><code><strong>.nav-links</strong></code></span> class.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list42a" id="p09list42">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}
.<span class="blue-v"><strong>nav-links</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">0.8</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
  <span class="pd_green1"><strong>text-decoration</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>text-transform</strong></span>: <span class="pd_green1"><strong>uppercase</strong></span>;
}
.<span class="blue-v"><strong>nav-links</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>nav-links</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}</pre>
<p class="indent"><span epub:type="pagebreak" id="page_319"></span>Again, the idea is that we want navigational links to look similar between the header and footer, and then for any changes that are specific to one location or the other by targeting the links using either the <span class="green-d"><code><strong>.header-nav</strong></code></span> or the <span class="green-d"><code><strong>.footer-nav</strong></code></span> class.</p>
<p class="indent">Finally, we’ll add footer-specific styles, as shown in <a href="ch09.xhtml#ch9list43">Listing 9.43</a>.</p>
<p class="listing" id="ch9list43"><strong>Listing 9.43:</strong> New styling for footer navigation and links.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list43a" id="p09list43">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>footer-nav</strong></span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">2</span><span class="pd_red"><strong>em</strong></span> <span class="grey">1</span><span class="pd_red"><strong>em</strong></span> <span class="grey">0</span>;
}
.<span class="blue-v"><strong>footer-nav</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#cc</span>c;
}</pre>
<p class="indent">When you save and refresh, you’ll have a nice header and footer, both pulling their navigational links from the same place (<a href="ch09.xhtml#ch9fig44">Figure 9.44</a>).</p>
<figure class="figure" id="ch9fig44">
<img src="graphics/09fig44.jpg" alt="images" width="676" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 9.44:</strong> Styled header and footer with nav links from an include.</p>
</figcaption>
</figure>
<p class="indent"><span epub:type="pagebreak" id="page_320"></span>If you want to double-check and sync up all your styles, <a href="ch09.xhtml#ch9list44">Listing 9.44</a> has the current state of the CSS declarations for the site.</p>
<p class="listing" id="ch9list44"><strong>Listing 9.44:</strong> The full header and footer styles.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch09_images.xhtml#p09list44a" id="p09list44">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_green1"><strong>html</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>body</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>div</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>span</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>applet</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>object</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>iframe</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>h1</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h2</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h3</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h4</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h5</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>h6</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>p</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>blockquote</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>pre</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>a</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>abbr</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>acronym</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>address</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>big</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>cite</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>code</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>del</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dfn</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>em</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>img</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ins</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>kbd</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>s</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>samp</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>small</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>strike</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>strong</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>sub</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>sup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tt</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>var</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>b</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>u</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>i</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>center</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dl</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dt</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>dd</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ol</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ul</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>li</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>fieldset</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>form</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>label</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>legend</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>table</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>caption</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>tbody</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tfoot</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>thead</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>tr</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>th</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>td</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>article</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>aside</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>canvas</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>details</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>embed</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figure</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figcaption</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>footer</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>header</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>hgroup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>menu</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>nav</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>output</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>ruby</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>section</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>summary</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>time</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>mark</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>audio</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>video</strong></span> {
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>border</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>font</strong></span>: <span class="pd_green1"><strong>inherit</strong></span>;
  <span class="pd_green1"><strong>vertical-align</strong></span>: <span class="pd_green1"><strong>baseline</strong></span>;
}
<span class="pd_blue1"><em>/* HTML5 display-role reset for older browsers */</em></span>
<span class="pd_green1"><strong>article</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>aside</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>details</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figcaption</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>figure</strong></span><span class="grey">,</span>
<span class="pd_green1"><strong>footer</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>header</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>hgroup</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>menu</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>nav</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>section</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
}
<span class="pd_green1"><strong>body</strong></span> {
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1</span>;
}
<span class="pd_green1"><strong>blockquote</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span> {
  <span class="pd_green1"><strong>quotes</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_green1"><strong>blockquote</strong></span>:<span class="v1">before</span><span class="grey">,</span> <span class="pd_green1"><strong>blockquote</strong></span>:<span class="v1">after</span><span class="grey">,</span>
<span class="pd_green1"><strong>q</strong></span>:<span class="v1">before</span><span class="grey">,</span> <span class="pd_green1"><strong>q</strong></span>:<span class="v1">after</span> {
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_red">'</span>';
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_green1"><strong>table</strong></span> {
  <span class="pd_green1"><strong>border-collapse</strong></span>: <span class="pd_green1"><strong>collapse</strong></span>;
  <span class="pd_green1"><strong>border-spacing</strong></span>: <span class="grey">0</span>;
}
<span class="pd_green1"><strong>strong</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>b</strong></span> {
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
}
<span class="pd_green1"><strong>em</strong></span><span class="grey">,</span> <span class="pd_green1"><strong>i</strong></span> {
  <span class="pd_green1"><strong>font-style</strong></span>: <span class="pd_green1"><strong>italic</strong></span>;
<span epub:type="pagebreak" id="page_321"></span>}
<span class="pd_green1"><strong>a img</strong></span> {
  <span class="pd_green1"><strong>border</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
}
<span class="pd_blue1"><em>/* END RESET*/</em></span>

<span class="pd_blue1"><em>/* GLOBAL STYLES */</em></span>
<span class="pd_green1"><strong>html</strong></span> {
  <span class="pd_green1"><strong>box-shadow</strong></span>: <span class="grey">0 0 0 30</span><span class="pd_red"><strong>px</strong></span> <span class="grey">#000</span> <span class="pd_green1"><strong>inset</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0 30</span><span class="pd_red"><strong>px</strong></span>;
}
<span class="pd_green1"><strong>body</strong></span> {
  <span class="pd_green1"><strong>font-family</strong></span>: helvetica, arial, sans;
}
<span class="pd_green1"><strong>h1</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">7</span><span class="pd_red"><strong>vw</strong></span>;
  <span class="pd_green1"><strong>margin-top</strong></span>: <span class="grey">0</span>;
}
<span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#f0</span>0;
}
<span class="pd_green1"><strong>h2</strong></span> <span class="grey">~</span> <span class="pd_green1"><strong>p</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">0.8</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>font-style</strong></span>: <span class="pd_green1"><strong>italic</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span> <span class="pd_green1"><strong>auto</strong></span> <span class="grey">0</span>;
  <span class="pd_green1"><strong>max-width</strong></span>: <span class="grey">70</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}

<span class="pd_blue1"><em>/* HEADER STYLES */</em></span>
.<span class="blue-v"><strong>header</strong></span> {
  <span epub:type="pagebreak" id="page_322"></span><span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>fixed</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">100</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>z-index</strong></span>: <span class="grey">2</span>0;
}
.<span class="blue-v"><strong>header-logo</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
  <span class="pd_green1"><strong>left</strong></span>: <span class="grey">-30</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>position</strong></span>: <span class="pd_green1"><strong>relative</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span>;
}
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>header-logo</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-logo</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">4.3</span><span class="pd_red"><strong>vh</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> {
  <span class="pd_green1"><strong>float</strong></span>: <span class="pd_green1"><strong>right</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">5.5</span><span class="pd_red"><strong>vh</strong></span> <span class="grey">60</span><span class="pd_red"><strong>px</strong></span> <span class="grey">0</span> 0;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> <span class="grey">~</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>border-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>px</strong></span> <span class="pd_green1"><strong>solid</strong></span> <span class="pd_green1">rgb</span>a<span class="grey">(25</span>5, <span class="grey">25</span>5, <span class="grey">25</span>5, <span class="grey">0.</span>3);
  <span class="pd_green1"><strong>padding-left</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}
.<span class="blue-v"><strong>nav-links</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">0.8</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
  <span class="pd_green1"><strong>text-decoration</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>text-transform</strong></span>: <span class="pd_green1"><strong>uppercase</strong></span>;
}
.<span class="blue-v"><strong>nav-links</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span><span class="grey">,</span>
.<span class="blue-v"><strong>nav-links</strong></span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">active</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span>:<span class="v1">first-child</span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#ed6e2</span>f;
}
.<span class="blue-v"><strong>header-nav</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span>:<span class="v1">first-child</span> <span class="pd_green1"><strong>a</strong></span>:<span class="v1">hover</span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
}

<span class="pd_blue1"><em>/* FOOTER STYLES */</em></span>
.<span class="blue-v"><strong>footer</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#00</span>0;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">10</span><span class="pd_red"><strong>vh</strong></span> <span class="grey">0 15</span><span class="pd_red"><strong>vh</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}
.<span class="blue-v"><strong>footer-logo</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>px</strong></span>;
}
.<span class="blue-v"><strong>footer</strong></span> <span class="pd_green1"><strong>h3</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">1.5</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>text-transform</strong></span>: <span class="pd_green1"><strong>uppercase</strong></span>;
}
<span epub:type="pagebreak" id="page_323"></span>.<span class="blue-v"><strong>footer</strong></span> <span class="pd_green1"><strong>h3 span</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#aa</span>a;
}
.<span class="blue-v"><strong>footer-nav</strong></span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">2</span><span class="pd_red"><strong>em</strong></span> <span class="grey">1</span><span class="pd_red"><strong>em</strong></span> <span class="grey">0</span>;
}
.<span class="blue-v"><strong>footer-nav</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#cc</span>c;
}

<span class="pd_blue1"><em>/* HERO STYLES */</em></span>
.<span class="blue-v"><strong>full-hero</strong></span> {
  <span class="pd_green1"><strong>background-color</strong></span>: <span class="grey">#c7dbf</span>c;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">50</span><span class="pd_red"><strong>vh</strong></span>;
}

<span class="pd_blue1"><em>/* SOCIAL STYLES */</em></span>
.<span class="blue-v"><strong>social-list</strong></span> {
  <span class="pd_green1"><strong>list-style</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">0</span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}
.<span class="blue-v"><strong>social-link</strong></span> {
  <span class="pd_green1"><strong>background</strong></span>: <span class="pd_green1">rgba</span>(<span class="grey">150</span>, <span class="grey">150</span>, <span class="grey">150</span>, <span class="grey">0.5</span>);
  <span class="pd_green1"><strong>border-radius</strong></span>: <span class="grey">99</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>font-family</strong></span>: helvetica, arial, sans;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>font-weight</strong></span>: <span class="pd_green1"><strong>bold</strong></span>;
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey">2.5</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1</span>;
  <span class="pd_green1"><strong>padding-top</strong></span>: <span class="grey">0.85</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
  <span class="pd_green1"><strong>text-decoration</strong></span>: <span class="pd_green1"><strong>none</strong></span>;
  <span class="pd_green1"><strong>vertical-align</strong></span>: <span class="pd_green1"><strong>middle</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">2.5</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>social-list</strong></span> <span class="grey">&gt;</span> <span class="pd_green1"><strong>li</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">0 0.5</span><span class="pd_red"><strong>em</strong></span>;
}

<span class="pd_blue1"><em>/* BIO STYLES */</em></span>
.<span class="blue-v"><strong>bio-wrapper</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">24</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="pd_green1"><strong>auto</strong></span>;
  <span epub:type="pagebreak" id="page_324"></span><span class="pd_green1"><strong>max-width</strong></span>: <span class="grey">960</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>overflow</strong></span>: <span class="pd_green1"><strong>hidden</strong></span>;
}
.<span class="blue-v"><strong>bio-box</strong></span> {
  <span class="pd_green1"><strong>border</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>px</strong></span> <span class="pd_green1"><strong>solid black</strong></span>;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>float</strong></span>: <span class="pd_green1"><strong>left</strong></span>;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>rem</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">40</span><span class="pd_red"><strong>px</strong></span> <span class="grey">1</span><span class="pd_red"><strong>%</strong></span> <span class="grey">0</span>;
  <span class="pd_green1"><strong>padding</strong></span>: <span class="grey">2</span><span class="pd_red"><strong>%</strong></span>;
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">23</span><span class="pd_red"><strong>%</strong></span>;
}
.<span class="blue-v"><strong>bio-box</strong></span> <span class="pd_green1"><strong>h3</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1.5</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">-40</span><span class="pd_red"><strong>px</strong></span> <span class="grey">0 1</span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>text-align</strong></span>: <span class="pd_green1"><strong>center</strong></span>;
}
.<span class="blue-v"><strong>bio-box</strong></span> <span class="pd_green1"><strong>img</strong></span> {
  <span class="pd_green1"><strong>width</strong></span>: <span class="grey">100</span><span class="pd_red"><strong>%</strong></span>;
}
.<span class="blue-v"><strong>bio-box</strong></span> .<span class="blue-v"><strong>social-link</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>block</strong></span>;
  <span class="pd_green1"><strong>margin</strong></span>: <span class="grey">2</span><span class="pd_red"><strong>em</strong></span> <span class="grey">0 1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>bio-copy</strong></span> {
  <span class="pd_green1"><strong>font-size</strong></span>: <span class="grey">1</span><span class="pd_red"><strong>em</strong></span>;
}
.<span class="blue-v"><strong>bio-copy</strong></span> <span class="pd_green1"><strong>a</strong></span> {
  <span class="pd_green1"><strong>color</strong></span>: <span class="pd_green1"><strong>green</strong></span>;
}</pre>
<p class="indent">Finally, in case you haven’t been doing your own Git commits and deploys, now would be a good time to do one:</p>
<p class="codelink"><a href="ch09_images.xhtml#p324pro01a" id="p324pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> git add -A
<span class="b-nilam"><strong>$</strong></span> git commit -m <span class="pd_red">"Finish initial layout"</span></pre>
<p class="noindent">You’ll discover that GitHub Pages is fully Jekyll-aware, and automatically generates and displays the site based on the contents of the repository—free static site hosting!</p>
<section>
<h4 class="h4" id="sec9_10_1"><span epub:type="pagebreak" id="page_325"></span>9.10.1 Exercise</h4>
<ol class="number">
<li><p class="number"><strong>(challenging)</strong> In the same manner that we just made the header links modular, first create a new include that makes the social links in the hero into an include that can be inserted into other places on the site. Then use the correct include tag to put it back where it originally was, and also a second include that builds the social links into a new <span class="green-d"><code><strong>ul</strong></code></span> in the footer.<span epub:type="pagebreak" id="page_326"></span></p></li>
</ol>
</section>
</section>
</section>
</div>
</div>
</body>
</html>