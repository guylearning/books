<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Learn Enough HTML, CSS and Layout to Be Dangerous: An Introduction to Modern Website Creation and Templating Systems</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="9780137843053.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><section epub:type="chapter">
<h2 class="chap-num" id="ch14"><span epub:type="pagebreak" id="page_475"></span>Chapter 14</h2>
<h2 class="chap-title">Adding More Little Touches</h2>
<p class="noindent">Guess what? We’re almost done with the main sample website!</p>
<p class="indent">We’ve come a long way in this tutorial: We’ve built a well-architected site in accordance with the DRY principle (<a href="ch05.xhtml#box5_2">Box 5.2</a>), added pages with things like a hero image and a three-column layout, and included a simple blog. What else is there?</p>
<p class="indent">Well, if we want our site to look more professional and complete, we need to think about adding all those little details and final touches that really tie a site together, like a nice rug (to paraphrase the movie <em>The Big Lebowski</em>). We’ll cover the most important of these details in this chapter, including adding custom fonts and vector-based icons (<a href="ch14.xhtml#sec14_1">Section 14.1</a>), a <em>favicon</em> (<a href="ch14.xhtml#sec14_2">Section 14.2</a>), and title and meta-information to our pages so that they are better indexed by search engines (<a href="ch14.xhtml#sec14_3">Section 14.3</a>).</p>
<p class="indent">Once we’ve finished making those changes, we’ll be nearly done with <em>Learn Enough HTML, CSS &amp; Layout to Be Dangerous</em>. Before leaving CSS &amp; Layout, we’ll take a moment to explore <em>grid</em>, a powerful and relatively new way to make page layouts (<a href="ch15.xhtml#ch15">Chapter 15</a>). We’ll then end the tutorial by applying a final bit of polish and associating our website with a custom domain (<a href="part03.xhtml#part03">Part III</a>).</p>
<section>
<h3 class="h3" id="sec14_1">14.1 Custom Fonts</h3>
<p class="noindent">Back in <a href="ch08.xhtml#sec8_8_2">Section 8.8.2</a>, we talked about changing fonts on the page using generic fonts available on virtually all systems. Now we are going to look at how to load <em>custom</em> fonts for our pages so that we aren’t limited to the basic fonts our site’s users happen to have installed on their computers.</p>
<p class="indent"><span epub:type="pagebreak" id="page_476"></span>You might already be familiar with what fonts are, but as a refresher: Fonts are files (which come with your computer or which you can load later) that let you control how text looks. Fonts also allow you to make the text as big or as small as you like without loss of quality (as opposed to images, which look terrible if you stretch them out), and they let you change text to any color your heart desires. This is because fonts aren’t regular images, but rather are more like math equations (known as <em>vector images</em>). If you want them bigger, you just multiply everything by 3 (or whatever); if you want them to be a different color, you just change the color value for the part of the equation that fills in the area of the letter.</p>
<p class="indent">In addition to letters, fonts can also include icons, such as the classic Wingdings font (<a href="ch14.xhtml#ch14fig1">Figure 14.1</a>) available on desktop computers via Microsoft Word.</p>
<figure class="figure" id="ch14fig1">
<img src="graphics/14fig01.jpg" alt="images" width="674" height="422"/>
<figcaption>
<p class="title-f"><strong>Figure 14.1:</strong> The old-school Wingdings font.</p>
</figcaption>
</figure>
<p class="indent">This idea has been extended to the Web, and modern font families exist for all of the icons we need for the interactive parts of a website. These include things like social media site logos and buttons for the UI. Such <em>icon fonts</em> allow us to style the font items by scaling them, changing colors, etc., which is a big improvement over older, less flexible techniques using images.</p>
<section>
<h4 class="h4" id="sec14_1_1"><span epub:type="pagebreak" id="page_477"></span>14.1.1 Installing Vector Image Fonts</h4>
<p class="noindent">To use a vector image font on a website, we need to find it on the Web and include it in our site. One of the most popular sources of web fonts is Font Awesome, and it has a giant list of icons that can be used for site interfaces. You can check out the catalog of icons (<a href="https://fontawesome.com/icons">https://fontawesome.com/icons</a>) on their site; the sample in <a href="ch14.xhtml#ch14fig2">Figure 14.2</a> is just a tiny fraction of the icons available.</p>
<figure class="figure" id="ch14fig2">
<img src="graphics/14fig02.jpg" alt="images" width="676" height="449"/>
<figcaption>
<p class="title-f"><strong>Figure 14.2:</strong> Font Awesome has a lot of logos, interface icons, and design elements.</p>
</figcaption>
</figure>
<p class="indent">There are two ways that you can install icon fonts on a website. First, you can download the files, put them in your project, and then link to them in the same manner that you linked the CSS file (<a href="ch09.xhtml#ch9list7">Listing 9.7</a>). We’ll use this technique for Font Awesome. Second, you can link to the files over the Internet without actually adding them to your project. We’ll use this technique in <a href="ch14.xhtml#sec14_1_2">Section 14.1.2</a> when we install some custom text fonts.</p>
<p class="indent">Let’s drop the Font Awesome fonts into our site and replace all the social media link text with the appropriate icons. The first step is to head to the download page on the Font Awesome site. Scroll down to the Other Ways to Use section and click the button that says Download, save and extract the zip file (by double-clicking it), and then move it to a new <span class="green-d"><code><strong>fonts</strong></code></span> directory in your project folder (created using, <span epub:type="pagebreak" id="page_478"></span>e.g., <span class="green-d"><code><strong>mkdir fonts</strong></code></span>). After these steps, your project directory should look something like <a href="ch14.xhtml#ch14fig3">Figure 14.3</a>.</p>
<figure class="figure" id="ch14fig3">
<img src="graphics/14fig03.jpg" alt="images" width="676" height="479"/>
<figcaption>
<p class="title-f"><strong>Figure 14.3:</strong> Font Awesome files in the project folder.</p>
</figcaption>
</figure>
<p class="indent">Next, open up <span class="green-d"><code><strong>_includes/head.html</strong></code></span> in your text editor and include the fonts file using the same syntax as for <span class="green-d"><code><strong>main.css</strong></code></span> (<a href="ch14.xhtml#ch14list1">Listing 14.1</a>). Note that the version of Font Awesome is included as part of the path, so you may have to use a slightly different path if they released an update since this writing (<a href="ch05.xhtml#box5_1">Box 5.1</a>).</p>
<p class="listing" id="ch14list1"><strong>Listing 14.1:</strong> Linking the Font Awesome files.<br/><code><em>_includes/head.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list01a" id="p14list01">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>head</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">name</span><span class="grey">=</span><span class="pd_red">"viewport"</span> <span class="light-green1">content</span><span class="grey">=</span><span class="pd_red">"width=device-width, initial-scale=1"</span>&gt;
<span class="bg1">  &lt;<span class="pd_green2"><strong>link</strong></span> <span class="light-green"><strong>rel</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"stylesheet"</strong></span></span>
<span class="bg1">        <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"/fonts/fontawesome-free-5.12.0-web/css/all.min.css"</strong></span>&gt;</span>
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/css/main.css"</span>&gt;
&lt;/<span class="pd_green1"><strong>head</strong></span>&gt;</pre>
<p class="indent"><span epub:type="pagebreak" id="page_479"></span>By the way, it’s important to load custom font files <em>before</em> any other CSS links. Otherwise, the fonts won’t be available when the browser tries to apply our styles.</p>
<p class="indent">Now let’s add some icons. Open up <span class="green-d"><code><strong>index.html</strong></code></span> and replace the social links text in the hero with the markup shown in <a href="ch14.xhtml#ch14list2">Listing 14.2</a>. Each link contains an <span class="green-d"><code><strong>i</strong></code></span> tag with two classes: <span class="green-d"><code><strong>fab</strong></code></span>, for Font Awesome’s branding icon subset (on the free version there is also the class: <span class="green-d"><code><strong>fas</strong></code></span> for their solid shape icons; for more info, see Font Awesome’s documentation (<a href="https://fontawesome.com/docs/web/addicons/how-to">https://fontawesome.com/docs/web/addicons/how-to</a>)), and <span class="green-d"><code><strong>fa-&lt;logo name&gt;</strong></code></span>, where the logo name varies based on the logo’s company (e.g., <span class="green-d"><code><strong>fa-facebook</strong></code></span> for Facebook’s logo). Note that we’ve also updated the <span class="green-d"><code><strong><a href="http://example.com">example.com</a> href</strong></code></span>s with links to the real Learn Enough social sites.</p>
<p class="listing" id="ch14list2"><strong>Listing 14.2:</strong> Replacing the old social link text with our new font icons.<br/><code><em>index.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list02a" id="p14list02">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>div</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"full-hero hero-home"</span>&gt;
  &lt;<span class="pd_green1"><strong>div</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"hero-content"</span>&gt;
    &lt;<span class="pd_green1"><strong>h1</strong></span>&gt;CODE DANGEROUSLY&lt;/<span class="pd_green1"><strong>h1</strong></span>&gt;
    &lt;<span class="pd_green1"><strong>ul</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"social-list"</span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;
<span class="bg1">        &lt;<span class="pd_green2"><strong>a</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"https://facebook.com/learnenough"</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"social-link"</strong></span>&gt;</span>
<span class="bg1">          &lt;<span class="pd_green2"><strong>i</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"fab fa-facebook"</strong></span>&gt;&lt;/<span class="pd_green2"><strong>i</strong></span>&gt;</span>
<span class="bg1">        &lt;/<span class="pd_green2"><strong>a</strong></span>&gt;</span>
      &lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;
<span class="bg1">        &lt;<span class="pd_green2"><strong>a</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"https://twitter.com/learnenough"</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"social-link"</strong></span>&gt;</span>
<span class="bg1">          &lt;<span class="pd_green2"><strong>i</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"fab fa-twitter"</strong></span>&gt;&lt;/<span class="pd_green2"><strong>i</strong></span>&gt;</span>
<span class="bg1">        &lt;/<span class="pd_green2"><strong>a</strong></span>&gt;</span>
      &lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
      &lt;<span class="pd_green1"><strong>li</strong></span>&gt;
<span class="bg1">        &lt;<span class="pd_green2"><strong>a</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"https://github.com/learnenough"</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"social-link"</strong></span>&gt;</span>
<span class="bg1">          &lt;<span class="pd_green2"><strong>i</strong></span> <span class="light-green"><strong>class</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"fab fa-github"</strong></span>&gt;&lt;/<span class="pd_green2"><strong>i</strong></span>&gt;</span>
<span class="bg1">        &lt;/<span class="pd_green2"><strong>a</strong></span>&gt;</span>
      &lt;/<span class="pd_green1"><strong>li</strong></span>&gt;
     &lt;/<span class="pd_green1"><strong>ul</strong></span>&gt;
   &lt;/<span class="pd_green1"><strong>div</strong></span>&gt;
&lt;/<span class="pd_green1"><strong>div</strong></span>&gt;</pre>
<p class="indent">Note that <a href="ch14.xhtml#ch14list2">Listing 14.2</a> uses the italic tag <span class="green-d"><code><strong>i</strong></code></span> even though (as you may recall from <a href="ch01.xhtml#sec1_2">Section 1.2</a>) this tag is deprecated. You can actually use <span class="green-d"><code><strong>span</strong></code></span>s to be more semantically correct if you’d like, but the people over at Font Awesome like using the old <span class="green-d"><code><strong>i</strong></code></span> tag, so we’re going with them.</p>
<p class="indent"><span epub:type="pagebreak" id="page_480"></span>After saving the work in <a href="ch14.xhtml#ch14list2">Listing 14.2</a>, the homepage should now look like <a href="ch14.xhtml#ch14fig4">Figure 14.4</a>.</p>
<figure class="figure" id="ch14fig4">
<img src="graphics/14fig04.jpg" alt="images" width="676" height="466"/>
<figcaption>
<p class="title-f"><strong>Figure 14.4:</strong> The new icons on the page.</p>
</figcaption>
</figure>
<p class="indent">Although it’s not important to understand the details, you may be curious to know what kinds of styles Font Awesome includes as part of <span class="green-d"><code><strong>all.css</strong></code></span> (the human-readable “unminified” version). If you open that file, you’ll see style declarations like this at the top:</p>
<p class="codelink"><a href="ch14_images.xhtml#p480pro01a" id="p480pro01">Click here to view code image</a></p>
<pre class="pre1">.<span class="blue-v"><strong>fa</strong></span><span class="grey">,</span>
.<span class="blue-v"><strong>fas</strong></span><span class="grey">,</span>
.<span class="blue-v"><strong>far</strong></span><span class="grey">,</span>
.<span class="blue-v"><strong>fal</strong></span><span class="grey">,</span>
.<span class="blue-v"><strong>fad</strong></span><span class="grey">,</span>
.<span class="blue-v"><strong>fab</strong></span> {
  <span class="pd_green1"><strong>-moz-</strong></span>osx-font-smoothing: grayscale;
  <span class="pd_green1"><strong>-webkit-</strong></span>font-smoothing: antialiased;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>font-style</strong></span>: <span class="pd_green1"><strong>normal</strong></span>;
  <span class="pd_green1"><strong>font-variant</strong></span>: <span class="pd_green1"><strong>normal</strong></span>;
  text-rendering: <span class="pd_green1"><strong>auto</strong></span>;
  <span class="pd_green1"><strong>line-height</strong></span>: <span class="grey">1</span>; }</pre>
<p class="indent"><span epub:type="pagebreak" id="page_481"></span>This section in the Font Awesome CSS file is the setup for the initial classes that define all the Font Awesome icons, which prepare an element to serve as an icon by converting the inline <span class="green-d"><code><strong>i</strong></code></span> tag into an inline block element. It also makes sure to reset styling so that any styles from the site’s CSS that might cascade down to this element, like setting the <span class="green-d"><code><strong>line-height</strong></code></span> to <span class="green-d"><code><strong>1</strong></code></span>, don’t a effect how Font Awesome is going to render the icon.</p>
<p class="indent">Toward the very bottom of the file, you will also see CSS like this:</p>
<p class="codelink"><a href="ch14_images.xhtml#p481pro01a" id="p481pro01">Click here to view code image</a></p>
<pre class="pre1">@<span class="pd_green1"><strong>font-face</strong></span> {
  <span class="pd_green1"><strong>font-family</strong></span><span class="grey">:</span> <span class="pd_red">'Font Awesome 5 Brands</span><span class="grey">';</span>
  <span class="pd_green1"><strong>font-style</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>normal</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>font-weight</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>normal</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>font-display</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>auto</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>src</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>url</strong></span><span class="grey">(</span><span class="pd_red">"../webfonts/fa-brands-400.eot"</span><span class="grey">);</span>
  <span class="pd_green1"><strong>src</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>url</strong></span><span class="grey">(</span><span class="pd_red">"../webfonts/fa-brands-400.eot?#iefix"</span><span class="grey">)</span> <span class="pd_green1"><strong>format</strong></span><span class="grey">(</span><span class="pd_red">"embedded-opentype"</span><span class="grey">),</span>
  <span class="pd_green1"><strong>url</strong></span><span class="grey">(</span><span class="pd_red">"../webfonts/fa-brands-400.woff2"</span><span class="grey">)</span> <span class="pd_green1"><strong>format</strong></span><span class="grey">(</span><span class="pd_red">"woff2"</span><span class="grey">),</span>
  <span class="pd_green1"><strong>url</strong></span><span class="grey">(</span><span class="pd_red">"../webfonts/fa-brands-400.woff"</span><span class="grey">)</span> <span class="pd_green1"><strong>format</strong></span><span class="grey">(</span><span class="pd_red">"woff"</span><span class="grey">),</span>
  <span class="pd_green1"><strong>url</strong></span><span class="grey">(</span><span class="pd_red">"../webfonts/fa-brands-400.ttf"</span><span class="grey">)</span> <span class="pd_green1"><strong>format</strong></span><span class="grey">(</span><span class="pd_red">"truetype"</span><span class="grey">),</span>
  <span class="pd_green1"><strong>url</strong></span><span class="grey">(</span><span class="pd_red">"../webfonts/fa-brands-400.svg#fontawesome"</span><span class="grey">)</span> <span class="pd_green1"><strong>format</strong></span><span class="grey">(</span><span class="pd_red">"svg"</span><span class="grey">);</span> }

.<span class="blue-v"><strong>fab</strong></span> {
  <span class="pd_green1"><strong>font-family</strong></span>: <span class="pd_red">'Font Awesome 5 Brands</span>'; }</pre>
<p class="noindent">Here <span class="green-d"><code><strong>@font-face</strong></code></span> is what tells the browser the name of the font (which gets referenced below the <span class="green-d"><code><strong>@font-face</strong></code></span> in the CSS to tie the font to the <span class="green-d"><code><strong>fab</strong></code></span> class), where to find the files, the weight of the font being loaded, and the default style.</p>
<p class="indent">In the middle, between those two code snippets and making up the bulk of the CSS file, there are a lot of more-specific classes (like <span class="green-d"><code><strong>.fa-twitter</strong></code></span>) that define which icon should be shown by using the <span class="green-d"><code><strong>:before</strong></code></span> pseudo-element (<a href="ch10.xhtml#sec10_3">Section 10.3</a>) and a code (<span class="green-d"><code><strong>”\f099”</strong></code></span>) that pulls up a specific icon:</p>
<pre class="pre1">.<span class="blue-v"><strong>fa-twitter</strong></span>:<span class="v1">before</span> {
  <span class="pd_green1"><strong>content</strong></span>: <span class="pd_red">"\f099"</span>
}</pre>
<p class="noindent">These icons are handled by the browser just like text, so we can make them a bit bigger using plain CSS. The result appears in <a href="ch14.xhtml#ch14list3">Listing 14.3</a>.</p>
<p class="listing" id="ch14list3"><span epub:type="pagebreak" id="page_482"></span><strong>Listing 14.3:</strong> Tweaking the social links to work better with the icons.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list03a" id="p14list03">Click here to view code image</a></p>
<pre class="pre2">.<span class="blue-v"><strong>social-link</strong></span> {
  <span class="pd_green1"><strong>background</strong></span>: <span class="pd_green1">rgb</span>a<span class="grey">(15</span>0<span class="grey">,15</span>0<span class="grey">,15</span>0<span class="grey">,0.</span>5);
  <span class="pd_green1"><strong>border-radius</strong></span>: <span class="grey">99</span><span class="pd_red"><strong>px</strong></span>;
  <span class="pd_green1"><strong>box-sizing</strong></span>: <span class="pd_green1"><strong>border-box</strong></span>;
  <span class="pd_green1"><strong>color</strong></span>: <span class="grey">#fff</span>;
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>inline-block</strong></span>;
  <span class="pd_green1"><strong>font-family</strong></span>: helvetica, arial, sans;
<span class="bg1">  <span class="pd_green2"><strong>font-size</strong></span>: <span class="grey"><strong>1.7</strong></span><span class="pd_red"><strong>em</strong></span>;</span>
<span class="bg1">  <span class="pd_green2"><strong>font-weight</strong></span>: <span class="pd_green2"><strong>bold</strong></span>;</span>
  <span class="pd_green1"><strong>height</strong></span>: <span class="grey"><strong>1.5</strong></span><span class="pd_red"><strong>em</strong></span>;
  <span class="pd_green1"><strong>line-height</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>1</strong></span><span class="grey">;</span>
<span class="bg1">  <span class="pd_green2"><strong>padding-top</strong></span>: <span class="grey"><strong>0.25</strong></span><span class="pd_red"><strong>em</strong></span>;</span>
  <span class="pd_green1"><strong>text-align</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>center</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>text-decoration</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>none</strong></span><span class="grey">;</span>
  <span class="pd_green1"><strong>vertical-align</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>middle</strong></span><span class="grey">;</span>
<span class="bg1">  <span class="pd_green2"><strong>width</strong></span>: <span class="grey"><strong>1.5</strong></span><span class="pd_red"><strong>em</strong></span>;</span>
}</pre>
<p class="indent">When you save and refresh, your icons should look like <a href="ch14.xhtml#ch14fig5">Figure 14.5</a>.</p>
<figure class="figure" id="ch14fig5">
<img src="graphics/14fig05.jpg" alt="images" width="601" height="213"/>
<figcaption>
<p class="title-f"><strong>Figure 14.5:</strong> Bigger, more easily readable icons.</p>
</figcaption>
</figure>
<p class="indent">A quick little note: I’m sure that some of you have noticed that the icons aren’t exactly centered in the circles. That has to do with a combination of how Font Awesome decided to create and implement the icons, and how different browser makers decided to render fonts. If you want a pixel-perfect appearance for your elements, you might need to target specific icons with a styling something like:</p>
<pre class="pre1"><span class="pd_green1"><code><strong>text-indent</strong></code></span><span class="grey"><code>:</code></span> <span class="pd_green1"><code><strong>1px</strong></code></span><span class="grey"><code>;</code></span></pre>
<p class="indent"><span epub:type="pagebreak" id="page_483"></span>Or you might need to change up your future designs to accommodate the variation between browsers... we’ll leave that up to your newfound technical sophistication (<a href="ch05.xhtml#box5_1">Box 5.1</a>). If you want to play around with the size or color, or if you want to try out some of the other icons on the Font Awesome site, feel free!</p>
<p class="indent">The name of the icon on their site’s icon list is also the class name that you would need to use on the HTML element, plus an <span class="green-d"><code><strong>fa-</strong></code></span> at the beginning. Just remember that you are using the free version of their icon library, so you will be restricted to either the solid icons that need an <span class="green-d"><code><strong>fas</strong></code></span> on the element in addition to the specific class for the icon, or the brand icons which use the <span class="green-d"><code><strong>fab</strong></code></span> class. For an example of one of the solid icons, if you wanted to add in the “arrow in a circle pointing right” icon (<a href="ch14.xhtml#ch14fig6">Figure 14.6</a>), the code on your page would look like this:</p>
<figure class="figure" id="ch14fig6">
<img src="graphics/14fig06.jpg" alt="images" width="676" height="410"/>
<figcaption>
<p class="title-f"><strong>Figure 14.6:</strong> Arrow-circle-right.</p>
</figcaption>
</figure>
<p class="codelink"><a href="ch14_images.xhtml#p483pro01a" id="p483pro01">Click here to view code image</a></p>
<pre class="pre1">&lt;<span class="pd_green1"><strong>i</strong></span> <span class="light-green1">class</span><span class="grey">=</span><span class="pd_red">"fas fa-arrow-circle-right"</span>&gt;&lt;/<span class="pd_green1"><strong>i</strong></span>&gt;</pre>
</section>
<section>
<h4 class="h4" id="sec14_1_2">14.1.2 Loading Text Fonts via a CDN</h4>
<p class="noindent">Now that we’ve added an icon font from files that are linked locally, let’s turn to loading a text font onto the page over the Internet from a third party’s servers. There are a couple of reasons why you might want to do this. One, sometimes you aren’t allowed <span epub:type="pagebreak" id="page_484"></span>to download fonts and store them in your project (e.g., due to copyright restrictions). Two, sometimes you want to minimize your server’s file bandwidth by loading fonts via a remote link. Even Font Awesome offers the option to load their icon font via their content delivery network, or CDN (<a href="ch14.xhtml#box14_1">Box 14.1</a>).</p>
<aside epub:type="sidebar" class="sidebar1" id="box14_1">
<p class="sb-title1"><strong>Box 14.1: Wherefore Art Thou Useful, CDN?</strong></p>
<p class="sb-noindent">Content delivery networks are services that solve a specific problem: If you have a file that you need users to download, and your server is the only place they can get that file, then there could be problems if your server is offline or too many people try to get the file all at once.</p>
<p class="sb-indent">CDNs are networks of servers that are spread across the world, and when a user requests a file the service finds the nearest server that has the needed file and sends it to the user. That helps keep the traffic on any single server low, so that all your users can get files quickly. There are CDN services that even duplicate the content of entire sites… which is exactly how GitHub Pages works. So if you’ve followed the standard Learn Enough sequence (<a href="https://www.learnenough.com/">https://www.learnenough.com/</a>), you’ve been using advanced CDN technology ever since you first made a public page in <em>Learn Enough Git to Be Dangerous</em> (<a href="https://www.learnenough.com/git">https://www.learnenough.com/git</a>)!</p>
</aside>
<p class="indent">The downside to using a CDN to load something like fonts is that you have to trust that the remote server is going to be available to all your users all the time— otherwise, the resource that you are trying to load won’t be available. This is only rarely a problem, but it’s worth understanding that it’s one thing (of many) that can go wrong.</p>
<p class="indent">For our purposes, we are going to use the free Google Fonts CDN service to add a fancier <em>display font</em>, which is a design term that means it isn’t intended for entire pages of text. We’ll use a font called Raleway for headers, and then use a plainer general text font called Open Sans for the site content.</p>
<p class="indent">To get started, head over to the Google Fonts site (<a href="https://fonts.google.com/">https://fonts.google.com/</a>) and type “raleway” in the search box. Then click on the main font result—depending on the current Google interface it should be a box with rounded corners—and when the detail page opens, select “Thin 100” (<a href="ch14.xhtml#ch14fig7">Figure 14.7</a>).</p>
<figure class="figure" id="ch14fig7">
<img src="graphics/14fig07.jpg" alt="images" width="647" height="281"/>
<figcaption>
<p class="title-f"><strong>Figure 14.7:</strong> Selecting the Raleway font.</p>
</figcaption>
</figure>
<p class="indent">Next, follow the same steps to add the Regular 400 version of Open Sans (not the condensed version, just the plain one). There should be a sidebar open that has the details for how to embed the font link—if you don’t see it you can click the icon at the top right that has three blue squares and a plus sign.</p>
<p class="indent"><span epub:type="pagebreak" id="page_485"></span>Copy the HTML link in the gray box, which should look like the code in <a href="ch14.xhtml#ch14list4">Listing 14.4</a>. (Note that <a href="ch14.xhtml#ch14list4">Listing 14.4</a> splits the line in order to fit in the code listing here, but it should be only one line in your source.)</p>
<p class="listing" id="ch14list4"><strong>Listing 14.4:</strong> The Google Fonts link HTML.</p>
<p class="codelink"><a href="ch14_images.xhtml#p14list04a" id="p14list04">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"https://fonts.googleapis.com/css2?family=Open+Sans&amp;
family=Raleway:wght@100&amp;display=swap"</span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>&gt;</pre>
<p class="noindent">This is the code needed to load the files from the Google Fonts CDN. It should be placed in the site’s <span class="green-d"><code><strong>head</strong></code></span> tag just above the Font Awesome link, as shown in <a href="ch14.xhtml#ch14list5">Listing 14.5</a>.</p>
<p class="listing" id="ch14list5"><strong>Listing 14.5:</strong> Adding in the CDN link to the Google Fonts service.<br/><code><em>_includes/head.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list05a" id="p14list05">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>head</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
<span class="bg1">  &lt;<span class="pd_green2"><strong>meta</strong></span> <span class="light-green1">name</span><span class="grey">=</span><span class="pd_red">"viewport"</span> <span class="light-green1">content</span><span class="grey">=</span><span class="pd_red">"width=device-width, initial-scale=1"</span>&gt;</span>
<span class="bg1">  &lt;<span class="pd_green2"><strong>link</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"https://fonts.googleapis.com/css2?family=Open+Sans&amp;</strong></span></span>
<span class="bg1">  <span class="grey"><strong>=</strong></span><span class="pd_red"><strong>family=Raleway:wght@100&amp;display=swap"</strong></span> <span class="light-green"><strong>rel=</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"stylesheet"</strong></span>&gt;</span>
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>
        <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/fonts/font-awesome-4.7.0/css/font-awesome.min.css"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/css/main.css"</span>&gt;
&lt;/<span class="pd_green1"><strong>head</strong></span>&gt;</pre>
<p class="noindent"><span epub:type="pagebreak" id="page_486"></span>That single link is all you need to make the custom fonts work! No dealing with files or configuring anything.</p>
<p class="indent">Now that our site is loading these font files, let’s use them. In your text editor, switch back over to the <span class="green-d"><code><strong>main.css</strong></code></span> file, and change the font stack for the headers on the site to use Raleway and for the body text to use Open Sans, as shown in <a href="ch14.xhtml#ch14list6">Listing 14.6</a>.</p>
<p class="listing" id="ch14list6"><strong>Listing 14.6:</strong> Adding a new font stack that references the custom fonts.<br/><code><em>css/main.css</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list06a" id="p14list06">Click here to view code image</a></p>
<pre class="pre2"><span class="pd_green1"><strong>body</strong></span> {
  <span class="pd_green1"><strong>display</strong></span>: <span class="pd_green1"><strong>flex</strong></span>;
  <span class="pd_green1"><strong>flex-direction</strong></span>: <span class="pd_green1"><strong>column</strong></span>;
<span class="bg1">  <span class="pd_green2"><strong>font-family</strong></span>: <span class="pd_red"><strong>'Open Sans'</strong></span>, helvetica, arial, sans;</span>
  <span class="pd_green1"><strong>min-height</strong></span><span class="grey">:</span> <span class="pd_green1"><strong>100vh</strong></span><span class="grey">;</span>
<span class="bg1">}</span>
<span class="grey">.</span>
<span class="grey">.</span>
<span class="grey">.</span>
<span class="bg1"><span class="pd_green2"><strong>h1,h2,h3,h4,h5,h6</strong></span> {</span>
<span class="bg1">  <span class="pd_green2"><strong>font-family</strong></span>: <span class="pd_red"><strong>'Raleway'</strong></span>, helvetica, sans;</span>
<span class="bg1">  <span class="pd_green2"><strong>font-weight</strong></span>: <span class="grey"><strong>100</strong></span>;</span>
}</pre>
<p class="indent"><span epub:type="pagebreak" id="page_487"></span>Notice that the names of the custom fonts in <a href="ch14.xhtml#ch14list6">Listing 14.6</a> are in quotes. You don’t <em>technically</em> need to wrap font names in quotes (single or double), but it’s recommend by the CSS spec, and it also makes them stand out when looking through CSS styles.</p>
<p class="indent">Now when you save your work and refresh the page, the text in the hero should look a whole lot different (<a href="ch14.xhtml#ch14fig8">Figure 14.8</a>).</p>
<figure class="figure" id="ch14fig8">
<img src="graphics/14fig08.jpg" alt="images" width="676" height="472"/>
<figcaption>
<p class="title-f"><strong>Figure 14.8:</strong> Our much more stylish hero text.</p>
</figcaption>
</figure>
<p class="indent">The other headers and body copy on the page will have the new fonts too (<a href="ch14.xhtml#ch14fig9">Figure 14.9</a>)!</p>
<figure class="figure" id="ch14fig9">
<img src="graphics/14fig09.jpg" alt="images" width="667" height="467"/>
<figcaption>
<p class="title-f"><strong>Figure 14.9:</strong> Other headers and body copy with the custom fonts.</p>
</figcaption>
</figure>
<p class="indent">After you set up a site to use custom fonts, it is usually a good idea to click around to all the different pages and see if anything looks weird. Different fonts can have very different default sizes, the weights of fonts might not look good at different sizes, and the custom fonts might use a completely different line height than what was being used before. Your fonts can easily look messy and in need of tweaking.</p>
<p class="indent">So that’s custom fonts! They’re easy to set up, and there are a ton of different font services out there, both free and paid. No matter what the service is, you now know <span epub:type="pagebreak" id="page_488"></span>how to use custom fonts, whether they’re downloaded into your project and served locally or loaded over the Internet via a CDN.</p>
</section>
<section>
<h4 class="h4" id="sec14_1_3">14.1.3 Exercises</h4>
<ol class="number">
<li><p class="number">Now that you’ve seen how to add icons, make sure that all of the social links across your site are using an icon. (Unlike most other exercises, you should keep these changes.)</p></li>
<li><p class="number">Try loading up another font from Google Fonts, and then set the <span class="green-d"><code><strong>.bio-box h3</strong></code></span>s to use the new font.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec14_2">14.2 Favicons</h3>
<p class="noindent">One little detail that we can’t resist including in this tutorial is showing how to add the <em>favicon</em> (“fave icon”), a small image identifying the site which shows up on tabs or in the favorites list (<a href="ch14.xhtml#ch14fig10">Figure 14.10</a>). As with font declarations, favicons get included in the <span class="green-d"><code><strong>head</strong></code></span> section of the page.</p>
<figure class="figure" id="ch14fig10">
<img src="graphics/14fig10.jpg" alt="images" width="676" height="46"/>
<figcaption>
<p class="title-f"><strong>Figure 14.10:</strong> A page’s favicon.</p>
</figcaption>
</figure>
<p class="indent">Favicons used to be a real pain to make due to Microsoft’s old browsers only accepting a funky filetype called <span class="green-d"><code><strong>.ico</strong></code></span>, but nowadays all we need is a simple <span class="green-d"><code><strong>.png</strong></code></span> (for Portable Network Graphics, pronounced “ping”).<sup><a id="fn14_1a" href="ch14.xhtml#fn14_1">1</a></sup></p>
<p class="footnote"><a id="fn14_1" href="ch14.xhtml#fn14_1a">1</a>. In classic hacker style, the original full name for PNG was actually PING, a recursive acronym for “PING is not GIF.”</p>
<p class="indent">Favicon images should be square, with a side length that is an integer multiple of 8. (The size on most browsers is 16px x 16px, so making sure it cleanly can be resized down is important, but don’t go bigger than 144px or so). To see how it works on our site, we’ve prepared a Learn Enough–themed favicon, which you can download as follows:</p>
<p class="codelink"><a href="ch14_images.xhtml#p488pro01a" id="p488pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> curl -OL https://cdn.learnenough.com/le-css/favicon.png</pre>
<p class="noindent"><span epub:type="pagebreak" id="page_489"></span>(If you want to use a custom favicon, just replace the result of the <span class="green-d"><code><strong>curl</strong></code></span> command with an image with valid dimensions and with the name <span class="green-d"><code><strong>favicon.png</strong></code></span> in the root directory of the project.) Now include it in the <span class="green-d"><code><strong>head</strong></code></span> using the <span class="green-d"><code><strong>link</strong></code></span> tag, as shown in <a href="ch14.xhtml#ch14list7">Listing 14.7</a>.</p>
<p class="listing" id="ch14list7"><strong>Listing 14.7:</strong> Adding the link for the favicon.<br/><code><em>_includes/head.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list07a" id="p14list07">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>head</strong></span>&gt;
  &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
<span class="bg1">  &lt;<span class="pd_green2"><strong>link</strong></span> <span class="light-green"><strong>href</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"/favicon.png"</strong></span> <span class="light-green"><strong>rel</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"icon"</strong></span>&gt;</span>
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">name</span><span class="grey">=</span><span class="pd_red">"viewport"</span> <span class="light-green1">content</span><span class="grey">=</span><span class="pd_red">"width=device-width, initial-scale=1"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"https://fonts.googleapis.com/css2?family=Open+Sans&amp;
  family=Raleway:wght@100&amp;display=swap"</span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>
        <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/fonts/font-awesome-4.7.0/css/font-awesome.min.css"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/css/main.css"</span>&gt;
&lt;/<span class="pd_green1"><strong>head</strong></span>&gt;</pre>
<p class="indent">After you save your work, you might be disappointed to find that when you refresh your browser you can’t see the icon, but don’t worry—it’s there. The inability to notice a new favicon is an annoyance that still hasn’t been fixed in modern browsers—unless you completely clear the browser cache, they don’t refresh the favicon of visited sites for a long time. You can clear the cache, of course, but it’s often inconvenient to lose all that history, and we suggest using a browser (e.g., Firefox or Brave) that you haven’t yet used to visit the sample site. Either way, the favicon should appear as in <a href="ch14.xhtml#ch14fig11">Figure 14.11</a>.</p>
<figure class="figure" id="ch14fig11">
<img src="graphics/14fig11.jpg" alt="images" width="451" height="83"/>
<figcaption>
<p class="title-f"><strong>Figure 14.11:</strong> Trust us, it works…</p>
</figcaption>
</figure>
<p class="indent">There are other types of icons that you can add, one of which is the “Apple touch icon.” This icon is what you see if you save a web page as a favorite in Safari, or to the menu of apps on iOS. (It also works on Android.) To make one, you’ll need a square <span epub:type="pagebreak" id="page_490"></span>image that is at least 180px x 180px and saved as <span class="green-d"><code><strong>apple-touch-icon.png</strong></code></span> in the root of your site. Then link it in the <span class="green-d"><code><strong>head</strong></code></span> of your site, like this:</p>
<p class="codelink"><a href="ch14_images.xhtml#p490pro01a" id="p490pro01">Click here to view code image</a></p>
<pre class="pre1">&lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"apple-touch-icon"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/apple-touch-icon.png"</span>&gt;</pre>
<p class="noindent">Adding an Apple touch icon to the sample site is left as an exercise (<a href="ch14.xhtml#sec14_2_1">Section 14.2.1</a>).</p>
<section>
<h4 class="h4" id="sec14_2_1">14.2.1 Exercise</h4>
<ol class="number">
<li><p class="number">Find a square image on the Internet, save it as <span class="green-d"><code><strong>apple-touch-icon.png</strong></code></span> in your root folder, and then link the image file.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec14_3">14.3 Custom Title and Meta Description</h3>
<p class="noindent">As a final touch, we’ll add two per-page customizations that most users won’t notice, but which are useful for any computer programs that interact with our site—especially the <em>web spiders</em> used by search engines to crawl the Web (<a href="ch14.xhtml#ch14fig12">Figure 14.12</a>). The resulting custom <span class="green-d"><code><strong>title</strong></code></span> tag and <span class="green-d"><code><strong>meta</strong></code></span> description are especially important for search engine optimization, or SEO (<a href="ch14.xhtml#box14_2">Box 14.2</a>).</p>
<figure class="figure" id="ch14fig12">
<img src="graphics/14fig12.jpg" alt="images" width="575" height="368"/>
<figcaption>
<p class="title-f"><strong>Figure 14.12:</strong> Page title and description in search results.</p>
</figcaption>
</figure>
<aside epub:type="sidebar" class="sidebar1" id="box14_2">
<p class="sb-title1"><span epub:type="pagebreak" id="page_491"></span><strong>Box 14.2: SEO in One Box</strong></p>
<p class="sb-noindent">Although sometimes considered to be a complicated subject, the basics of search engine optimization, or <em>SEO</em>, are quite simple—(almost) simple enough to fit in a single tweet:</p>
<figure class="image-c">
<img src="graphics/491fig01.jpg" alt="Images" width="451" height="233"/>
</figure>
<p class="sb-indent">Because of Twitter’s (at the time) 140-character limit, I couldn’t <em>literally</em> fit all of SEO into a single tweet, but it’s only a slight exaggeration, and you can fit nearly all of it into one aside box. In particular, in line with the Pareto principle (also known as the 80/20 Rule), you can get most of the benefits of SEO with a tiny fraction of the effort.</p>
<p class="sb-indent">Step 2 from the tweet—making something people want to link to—is up to you: undeniably a challenge, and beyond the scope of this tutorial. But Step 1 is easy: Just make sure to include most or all of the words you want to target for search results in the <code>title</code> tag (<a href="ch14.xhtml#sec14_3_1">Section 14.3.1</a>), <code>meta</code> tags (<a href="ch14.xhtml#sec14_3_2">Section 14.3.2</a>), and headings (especially <code>h1</code> and <code>h2</code>).</p>
<p class="sb-indent">For example, suppose you wanted to target the terms “pi is wrong”, “tau day”, “the tau manifesto”, and “michael hartl”. A good title might look like this:</p>
<p class="codelink"><a href="ch14_images.xhtml#p491pro01a" id="p491pro01">Click here to view code image</a></p>
<pre class="pre1">&lt;title&gt;Tau Day | No, really, pi is wrong:
The Tau Manifesto by Michael Hartl&lt;/title&gt;</pre>
<p class="sb-indent">An <code>h1</code> with “No, really, pi is wrong: The Tau Manifesto” and a <code>meta</code> description starting with “The Tau Manifesto is dedicated to one of the most important numbers in mathematics…” would complete the basic SEO requirements.</p>
<p class="sb-indent">If you have the luxury of tailoring your domain name to the keywords you’re targeting, <span epub:type="pagebreak" id="page_492"></span>an exact domain match can also help a lot. This step isn’t always possible, but when it is it can work exceptionally well, as it did with, e.g., the Rails Tutorial (<a href="https://www.google.com/search?q=rails+tutorial">https://www.google.com/search?q=rails+tutorial</a>). And even if you don’t have an exact domain match, you can still get a lot of value out of “pretty URLs” (<a href="ch10.xhtml#sec10_4">Section 10.4</a>) that include the keywords you’re targeting, such as <a href="http://learnenough.com/css-and-layout">learnenough.com/css-and-layout</a> (<a href="https://www.google.com/search?q=css+and+layout+tutorial">https://www.google.com/search?q=css+and+layout+tutorial</a>).</p>
<p class="sb-indent">Note that everything above, though tailored a bit to search engines, is completely honest: There’s nothing here that’s not related to our site’s mission, and keywords aren’t repeated to excess. This philosophy applies even more to the main content of the page—if you’re actually writing about the subject whose keywords you’re targeting, the right word usage will emerge organically, so don’t worry about the details of your page copy. Indeed, search engines typically punish attempts to artificially manipulate the results, so any such efforts are likely to backfire.</p>
<p class="sb-indent">Finally, when it comes to getting inbound links, quality content is king. Attempts to game search engines (with reciprocal link exchanges, link farms, etc.) are punished even more severely than attempts to manipulate the page copy, so don’t even try it.</p>
<p class="sb-indent">SEO isn’t exactly rocket science. Using only the techniques in this box, we’ve made sites with highly ranked search results for the English words “softcover” and “coveralls”, the phrase “learn enough”, the competitive search term “rails tutorial”, the phrase “pi is wrong”, and even a letter in the Greek alphabet. Good luck!</p>
</aside>
<section>
<h4 class="h4" id="sec14_3_1">14.3.1 Custom Title</h4>
<p class="noindent">So far in this tutorial we’ve left the page title alone and kept it the same for all pages, but Jekyll gives us a way to customize it on a per-page basis. This is useful for things like blog posts, whose subjects might well be the target of searches on keywords included in the title (<a href="ch14.xhtml#box14_2">Box 14.2</a>).</p>
<p class="indent">The idea is to include a custom page title if there is one (along with the string <span class="green-d"><code><strong>| Test Page</strong></code></span>, indicating it’s still a page on the test site). If there isn’t such a custom title, we’ll simply use the original default title defined in <a href="ch05.xhtml#ch5list4">Listing 5.4</a> (<span class="green-d"><code><strong>Test Page: Don’t Panic</strong></code></span>).</p>
<p class="indent">The way we’re going to do this is with some Liquid code that uses a <em>conditional</em>, which executes one or another branch of code, depending on whether a given condition is satisfied. It looks like this:</p>
<p class="codelink"><a href="ch14_images.xhtml#p492pro01a" id="p492pro01">Click here to view code image</a></p>
<pre class="pre1">{% if page.title %}
  &lt;<span class="pd_green1"><strong>title</strong></span>&gt;{{ page.title }} | Test Page&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
{% else %}
  &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t Panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
{% endif %}</pre>
<p class="noindent"><span epub:type="pagebreak" id="page_493"></span>This code looks for the presence of the <span class="green-d"><code><strong>page.title</strong></code></span> variable first seen in <a href="ch12.xhtml#ch12list8">Listing 12.8</a>. If it exists, the condition is <span class="green-d"><code><strong>true</strong></code></span>, and the first branch will be executed, which inserts the page title followed by <span class="green-d"><code><strong>| Test Page</strong></code></span>:</p>
<p class="codelink"><a href="ch14_images.xhtml#p493pro01a" id="p493pro01">Click here to view code image</a></p>
<pre class="pre1">&lt;<span class="pd_green1"><strong>title</strong></span>&gt;{{ page.title }} | Test Page&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;</pre>
<p class="noindent">For example, <a href="ch12.xhtml#ch12list1">Listing 12.1</a> sets the title of a blog post to “This is the title of the post”, so the inserted title would look like this:</p>
<p class="codelink"><a href="ch14_images.xhtml#p493pro02a" id="p493pro02">Click here to view code image</a></p>
<pre class="pre1">&lt;<span class="pd_green1"><strong>title</strong></span>&gt;This is the title of the post | Test Page&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;</pre>
<p class="indent">If <span class="green-d"><code><strong>page.title</strong></code></span> hasn’t been set, the condition is <span class="green-d"><code><strong>false</strong></code></span>, and the second branch will be executed, thereby inserting the default title:</p>
<p class="codelink"><a href="ch14_images.xhtml#p493pro03a" id="p493pro03">Click here to view code image</a></p>
<pre class="pre1">&lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t Panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;</pre>
<p class="indent">Putting the conditional into the <span class="green-d"><code><strong>head</strong></code></span> section of the site gives the code shown in <a href="ch14.xhtml#ch14list8">Listing 14.8</a>.</p>
<p class="listing" id="ch14list8"><strong>Listing 14.8:</strong> Including a custom title (if present).<br/><code><em>_includes/head.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list08a" id="p14list08">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>head</strong></span>&gt;
<span class="bg1">  {% if page.title %}</span>
<span class="bg1">    &lt;<span class="pd_green2"><strong>title</strong></span>&gt;{{ page.title }} | Test Page&lt;/<span class="pd_green2"><strong>title</strong></span>&gt;</span>
<span class="bg1">  {% else %}</span>
<span class="bg1">    &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t Panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;</span>
<span class="bg1">  {% endif %}</span>
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/favicon.png"</span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"icon"</span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">name</span><span class="grey">=</span><span class="pd_red">"viewport"</span> <span class="light-green1">content</span><span class="grey">=</span><span class="pd_red">"width=device-width, initial-scale=1"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"https://fonts.googleapis.com/css?family=Open+Sans|Raleway:100"</span>
  <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>
        <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/fonts/font-awesome-4.7.0/css/font-awesome.min.css"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/css/main.css"</span>&gt;
&lt;/<span class="pd_green1"><strong>head</strong></span>&gt;</pre><p class="indent">Once you save <a href="ch14.xhtml#ch14list8">Listing 14.8</a>, you should see that the homepage title stays the same old “Test Page: Don’t Panic”, but if you go to the most recent blog post, the title of <span epub:type="pagebreak" id="page_494"></span>the blog post will be the first part of the title (<a href="ch14.xhtml#ch14fig13">Figure 14.13</a>). As noted above, this is because of the custom <span class="green-d"><code><strong>title</strong></code></span> defined in the frontmatter of <a href="ch12.xhtml#ch12list1">Listing 12.1</a>.</p>
<figure class="figure" id="ch14fig13">
<img src="graphics/14fig13.jpg" alt="images" width="676" height="133"/>
<figcaption>
<p class="title-f"><strong>Figure 14.13:</strong> A page with a set title, and one without.</p>
</figcaption>
</figure>
<p class="indent">On any page where we want a custom title, we can now easily add one just by adding a line to the frontmatter. For example, to use “Dangerous Blog” as the name of our blog, we can add a line to the frontmatter of the blog’s index page, as shown in <a href="ch14.xhtml#ch14list9">Listing 14.9</a>.</p>
<p class="listing" id="ch14list9"><strong>Listing 14.9:</strong> Adding a variable to the frontmatter of a page to change the title.<br/><code><em>blog/index.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list09a" id="p14list09">Click here to view code image</a></p>
<pre class="pre2">---
layout: default
<span class="bg1">title: Dangerous Blog</span>
---</pre>
<p class="indent">Save the work, refresh the browser, and success (<a href="ch14.xhtml#ch14fig14">Figure 14.14</a>)!</p>
<figure class="figure" id="ch14fig14">
<img src="graphics/14fig14.jpg" alt="images" width="676" height="91"/>
<figcaption>
<p class="title-f"><strong>Figure 14.14:</strong> Adding a custom page title.</p>
</figcaption>
</figure>
</section>
<section>
<h4 class="h4" id="sec14_3_2">14.3.2 Custom Descriptions</h4>
<p class="noindent">Now we’ll use the same conditional technique to include a custom description in our site’s head. We’ll use the <span class="green-d"><code><strong>meta</strong></code></span> tag, which so far we’ve used for defining the character set (<a href="ch05.xhtml#ch5list4">Listing 5.4</a>) and the viewport (<a href="ch13.xhtml#ch13list8">Listing 13.8</a>). For this third application, the bit of meta-information added will be a textual description of our site. This change will not <span epub:type="pagebreak" id="page_495"></span>be visible to regular users, but it will appear in the page’s source, and as noted above is used by automatic programs like web spiders.</p>
<p class="indent">We’ll use the same basic technique used for the <span class="green-d"><code><strong>title</strong></code></span> tag: If a page description is present, we’ll include a <span class="green-d"><code><strong>meta</strong></code></span> tag with content equal to that description, otherwise (<span class="green-d"><code><strong>else</strong></code></span>) we’ll include a default description. The result appears in <a href="ch14.xhtml#ch14list10">Listing 14.10</a>.</p>
<p class="listing" id="ch14list10"><strong>Listing 14.10:</strong> Adding a custom description.<br/><code><em>_includes/head.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list10a" id="p14list10">Click here to view code image</a></p>
<pre class="pre2">&lt;<span class="pd_green1"><strong>head</strong></span>&gt;
  {% if page.title %}
    &lt;<span class="pd_green1"><strong>title</strong></span>&gt;{{ page.title }} | Test Page&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
  {% else %}
    &lt;<span class="pd_green1"><strong>title</strong></span>&gt;Test Page: Don’t Panic&lt;/<span class="pd_green1"><strong>title</strong></span>&gt;
  {% endif %}
<span class="bg1">  {% if page.description %}</span>
<span class="bg1">    &lt;<span class="pd_green2"><strong>meta</strong></span> <span class="light-green"><strong>name</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"description"</strong></span> <span class="light-green"><strong>content</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"{{ page.description }}"</strong></span>&gt;</span>
<span class="bg1">  {% else %}</span>
<span class="bg1">    &lt;<span class="pd_green2"><strong>meta</strong></span> <span class="light-green"><strong>name</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"description"</strong></span> <span class="light-green"><strong>content</strong></span><span class="grey"><strong>=</strong></span><span class="pd_red"><strong>"This is a dangerous site."</strong></span>&gt;</span>
<span class="bg1">  {% endif %}</span>
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/favicon.png"</span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"icon"</span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">charset</span><span class="grey">=</span><span class="pd_red">"utf-8"</span>&gt;
  &lt;<span class="pd_green1"><strong>meta</strong></span> <span class="light-green1">name</span><span class="grey">=</span><span class="pd_red">"viewport"</span> <span class="light-green1">content</span><span class="grey">=</span><span class="pd_red">"width=device-width, initial-scale=1"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"https://fonts.googleapis.com/css?family=Open+Sans|Raleway:100"</span>
  <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span>
        <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/fonts/font-awesome-4.7.0/css/font-awesome.min.css"</span>&gt;
  &lt;<span class="pd_green1"><strong>link</strong></span> <span class="light-green1">rel</span><span class="grey">=</span><span class="pd_red">"stylesheet"</span> <span class="light-green1">href</span><span class="grey">=</span><span class="pd_red">"/css/main.css"</span>&gt;
&lt;/<span class="pd_green1"><strong>head</strong></span>&gt;</pre>
<p class="indent">At this point, we can add a description variable to any page’s frontmatter and the description will be loaded for that page only. For example, to make the blog’s description more expressive, all we need is an extra line in the frontmatter, as shown in <a href="ch14.xhtml#ch14list11">Listing 14.11</a>.</p>
<p class="listing" id="ch14list11"><strong>Listing 14.11:</strong> Adding a variable to the frontmatter of a page to change the title.<br/><code><em>blog/index.html</em></code></p>
<p class="codelink"><a href="ch14_images.xhtml#p14list11a" id="p14list11">Click here to view code image</a></p>
<pre class="pre2">---
layout: default
title: Dangerous Blog
<span class="bg1">description: A dangerous site deserves a dangerous blog.</span>
---</pre>
<p class="indent"><span epub:type="pagebreak" id="page_496"></span>Because the <span class="green-d"><code><strong>meta</strong></code></span> tag isn’t visible on the site, you won’t notice any change even after saving and refreshing, but if you view the page’s source code you’ll see the custom description in the <span class="green-d"><code><strong>head</strong></code></span> section of the site (<a href="ch14.xhtml#ch14fig15">Figure 14.15</a>).</p>
<figure class="figure" id="ch14fig15">
<img src="graphics/14fig15.jpg" alt="images" width="676" height="335"/>
<figcaption>
<p class="title-f"><strong>Figure 14.15:</strong> Adding a custom, page-specific <span class="green-d"><code><strong>meta</strong></code></span> description.</p>
</figcaption>
</figure>
<p class="indent">Changing the title and the <span class="green-d"><code><strong>meta</strong></code></span> description are just a couple of the informational elements that you can set for a site, but since they show up in search results they are definitely two of the most common ones. The Open Graph protocol (<a href="https://ogp.me/">https://ogp.me/</a>) includes a more complete list of common <span class="green-d"><code><strong>meta</strong></code></span> elements.</p>
<p class="indent">In general, all of these meta-information tags work pretty much the same way, and you’ll want to set up a default version for any page that doesn’t need to have anything custom, using frontmatter variables to define the content on specific pages. Just make sure that the variable names used in the Liquid tags (e.g., <span class="green-d"><code><strong>page.description</strong></code></span>) match the ones in the frontmatter (e.g., <span class="green-d"><code><strong>description:</strong></code></span>) and you’re golden—you’ll have learned how to fish rather than having a fish be given to you (<a href="ch14.xhtml#ch14fig16">Figure 14.16</a>).<sup><a id="fn14_2a" href="ch14.xhtml#fn14_2">2</a></sup></p>
<p class="footnote"><a id="fn14_2" href="ch14.xhtml#fn14_2a">2</a>. Image retrieved from <a href="https://www.sketchport.com/drawing/6000777126477824/teach-a-boy-to-fish">https://www.sketchport.com/drawing/6000777126477824/teach-a-boy-to-fish</a> on 2017-05-31. Copyright © 2014 by Kanani and used unaltered under the terms of the Creative Commons Attribution 4.0 International license.</p>
<figure class="figure" id="ch14fig16">
<img src="graphics/14fig16.jpg" alt="images" width="676" height="355"/>
<figcaption>
<p class="title-f"><strong>Figure 14.16:</strong> Learning how to fish.</p>
</figcaption>
</figure>
</section>
<section>
<h4 class="h4" id="sec14_3_3"><span epub:type="pagebreak" id="page_497"></span>14.3.3 Exercise</h4>
<ol class="number">
<li><p class="number">Add in title and description Open Graph meta tags onto your site, and have them use the same title and description variables as the old-school meta tags that we added in this section.</p></li>
</ol>
</section>
</section>
<section>
<h3 class="h3" id="sec14_4">14.4 Next Steps</h3>
<p class="noindent">At this point, we’re done with the main sample application. The only things left to cover are <em>CSS grid</em> and <em>custom domains</em>. You’ll find a mostly self-contained introduction to grid in <a href="ch15.xhtml#ch15">Chapter 15</a>, which is suitable for reading now or for consulting as a reference later. Registering and configuring a custom domain is then the subject of <a href="part03.xhtml#part03">Part III</a>.</p>
<p class="indent">Now that the main sample site is finished, let’s deploy it again to production:</p>
<p class="codelink"><a href="ch14_images.xhtml#p497pro01a" id="p497pro01">Click here to view code image</a></p>
<pre class="pre1"><span class="b-nilam"><strong>$</strong></span> git add -A
<span class="b-nilam"><strong>$</strong></span> git commit -m <span class="pd_red">"Finish the sample site"</span>
<span class="b-nilam"><strong>$</strong></span> git push</pre>
<p class="noindent">Pretty nice (<a href="ch14.xhtml#ch14fig17">Figure 14.17</a>)!</p>
<figure class="figure" id="ch14fig17">
<img src="graphics/14fig17.jpg" alt="images" width="676" height="467"/>
<figcaption>
<p class="title-f"><span epub:type="pagebreak" id="page_498"></span><strong>Figure 14.17:</strong> The final sample website.</p>
</figcaption>
</figure>
</section>
</section>
</div>
</div>
</body>
</html>