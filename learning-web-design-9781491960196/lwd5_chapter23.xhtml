<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Learning Web Design, 5th Edition</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="css/lwd5e.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><div id="_idContainer1435" class="ch23">
			<p id="_idParaDest-207" class="Epub-TOC-Part-Title"><strong class="Emphasis_Bold"><a id="_idTextAnchor287"></a>Part V.</strong> Web Images</p>
		</div>
		<div id="_idContainer1436" class="ch23">
			<h1 class="partLabel"><a id="_idTextAnchor288"></a>V</h1>
		</div>
		<div id="_idContainer1437" class="ch23">
			<h1 class="partTitle"><a id="_idTextAnchor289"></a>Web Images</h1>
		</div>
		<div id="_idContainer1438" class="ch23">
			<p id="_idParaDest-208" class="Epub-TOC-Chapter-Title"><a id="_idTextAnchor290"></a>23. Web Image Basics</p>
		</div>
		<div id="_idContainer1439" class="ch23">
			<h1 class="chapterLabel">23</h1>
		</div>
		<div id="_idContainer1440" class="ch23">
			<h1 class="chapterTitle"><a id="_idTextAnchor291"></a><a id="_idTextAnchor292"></a>Web Image Basics</h1>
		</div>
		<div id="_idContainer1441" class="chapTOCFrame" epub:type="toc">
			<p class="ChapterContentsTitle">In this chapter</p>
			<p class="chapterContents">Where to get images</p>
			<p class="chapterContents">PNG, JPEG, GIF, and WebP</p>
			<p class="chapterContents">Image and screen resolution</p>
			<p class="chapterContents">Web image production strategy</p>
			<p class="chapterContents">How to make favicons </p>
		</div>
		<div id="_idContainer1507" class="ch23">
			<p class="body">Unless you plan to publish text-only sites, chances are you’ll need images. For many of you, that might mean getting your hands on an image-editing program for the first time and acquiring some basic graphics production skills. If you are a seasoned designer, you may need to adapt your style and process to make graphics that are appropriate for web delivery. </p>
			<p class="body">In <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span><span class="Xref">, Adding Images</span></a>, we covered the basics of embedding images in the HTML document, including the difference between bitmapped graphic formats and the vector-based SVG. This chapter covers the fundamentals of the images themselves. We’ll start by reviewing sources for imagery. From there, we’ll get to know the file formats available for web graphics to help you decide which one to use. We’ll look at image resolution and how it relates to the resolution of the screens on which they appear, including high-density displays. I’ll also walk you through a series of questions that will help you form a strategy for creating images for your site. Finally, the chapter wraps up with a quick Favicon how-to.</p>
			<h1 id="_idParaDest-209" class="HeadA"><a id="_idTextAnchor293"></a>Image Sources</h1>
			<p class="body">You need to <a id="_idIndexMarker4080"></a><em class="Emphasis">have</em> an image to save an image, so before we jump into the nitty-gritty of file formats, let’s look at some ways to get images in the first place. There are many options: from scanning, shooting, or illustrating them yourself, to using available stock photos and clip art, to just hiring someone to create images for you. </p>
			<h2 class="HeadB">Create Your Own Images</h2>
			<p class="body">In most cases, the most cost-effective way to generate images for your site is to make your own from scratch. The added bonus is that you know you have full rights to use the images (we’ll address copyright in a moment). Designers may generate imagery with scanners, cameras, or a drawing program:</p>
			<p class="ListVariableTerm">Photographs</p>
			<p class="ListVariable">You can capture the world around you and pipe it right into an image-editing program. Depending on the type of imagery you’re after, you may get sufficient quality with the camera in your phone. Keep in mind that it’s always a good idea to create high-resolution versions of your images and save smaller copies as needed.</p>
			<p class="ListVariableTerm">Electronic illustration</p>
			<p class="ListVariable">If you have illustration skills, you can make your own image in a drawing or photo-editing application. Every designer has her own favorite tools and techniques. For logos and line drawings, I recommend starting with a vector drawing program like <a id="_idIndexMarker4081"></a><a id="_idIndexMarker4082"></a><a id="_idIndexMarker4083"></a><a id="_idIndexMarker4084"></a>Adobe Illustrator, Corel Draw, or Sketch, and then saving to a web-appropriate copy as needed. </p>
			<p class="ListVariableTerm">Scanning</p>
			<p class="ListVariable">Scanning is a great way to collect source material. You can scan almost anything, from flat art to small 3-D objects. Beware, however, the temptation to scan and use found images. Keep in mind that most images you find are probably copyright-protected and may not be used without permission, even if you modify them considerably. See the <span class="Xref">“Scanning Tips”</span> sidebar for some how-to information. </p>
			<div>
				<div id="_idContainer1442" class="sidebar">
					<h5 class="SidebarSeries">SCANNING TIPS</h5>
					<p class="SidebarBody">When you’re scanning sources for use on the web, these tips will help you create images with better quality:</p>
					<ul>
						<li class="SidebarListBullet">Because it is easier to maintain image quality when resizing smaller than resizing larger, scan the image larger than you actually need. This gives you more flexibility for creating other sizes later. Issues of image size are discussed in more detail in the <span class="Xref--Sidebar-">“Image Size and Resolution”</span> section later in this chapter.</li>
						<li class="SidebarListBullet">Scan black-and-white images in grayscale (8-bit) mode, not in black-and-white (1-bit, or bitmap) mode. This enables you to make adjustments in the midtone gray areas once you have sized the image to its final dimensions and resolution. If you really want only black-and-white pixels, convert the image as the last step.</li>
						<li class="SidebarListBullet">If you are scanning an image that has been printed, you need to eliminate the dot pattern that results from the printing process. The best way to do this is to apply a slight blur to the image (in Photoshop, use the <a id="_idIndexMarker4085"></a><a id="_idIndexMarker4086"></a>Gaussian Blur filter), resize the image slightly smaller, and then apply a sharpening filter. This will eliminate those pesky dots. Make sure you have the rights to use the printed image, too, of course.</li>
					</ul>
				</div>
			</div>
			<h2 class="HeadB">Stock Photography and Illustrations</h2>
			<p class="body">If you aren’t <a id="_idIndexMarker4087"></a>confident in your design skills, or you just want a head start with some fresh imagery, there are plenty of collections of ready-made photos, illustrations, buttons, animations, and textures available for sale or for free. Stock photos and illustrations generally fall into two broad categories: rights-managed and royalty-free.</p>
			<h3 class="HeadC">Rights-managed</h3>
			<p class="body"><span class="FirstTerm">Rights-managed</span> means <a id="_idIndexMarker4088"></a>that the copyright holder (or a company representing them) controls who may reproduce the image. In order to use a rights-managed image, you must obtain a license to reproduce it for a particular use and for a particular period of time. One of the advantages to licensing images is that you can arrange to have exclusive rights to an image within a particular medium (such as the web) or a particular business sector (such as the health-care industry or banking). You also know that the source of the image is verified (i.e., it is not stolen). </p>
			<p class="body">On the downside, rights-managed images get quite pricey. Depending on the breadth and length of the license, the price tag may be many thousands of dollars for a single image. If you don’t want exclusive rights and you want to use the image only on the web, the cost is more likely to be a few hundred dollars, depending on the source.</p>
			<p class="body">Getty Images (<a href="http://gettyimages.com"><span class="URL-Email">gettyimages.com</span></a>) is <a id="_idIndexMarker4089"></a>the largest stock image house for rights-managed images, having acquired most of its competitors over recent years. It also offers royalty-free images, which we’ll look at next.</p>
			<h3 class="HeadC">Royalty-free</h3>
			<p class="body">If you don’t <a id="_idIndexMarker4090"></a>have a four-digit or even three-digit budget for images, consider using royalty-free artwork for which you don’t need to pay a licensing fee. <span class="FirstTerm">Royalty-free</span> artwork is available for a one-time fee that gives you unlimited use of the image, but you have no control over who else is using it. Royalty-free images are available from the top-notch professional stock houses such as Getty Images for as little as 50 bucks for a small image appropriate for the web (like the blissed-out kangaroo in <span class="Xref-Figure">Figure 23-1</span>), and from other sites for less (or even for free). </p>
			<div>
				<figure id="_idContainer1444" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2301_kangaroo.png" alt="" width="358" height="479"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-1.</span> One blissed-out kangaroo, an example of a royalty-free image I got on Gettyimages.com for your amusement.</figcaption>
				</figure>
			</div>
			<p class="body">One of my favorite sources is <a id="_idIndexMarker4091"></a>iStockPhoto (<a href="http://istockphoto.com"><span class="URL-Email">istockphoto.com</span></a>). They have a huge collection of images starting around US$10 a pop. You can buy one image at a time or get a subscription plan. </p>
			<h3 class="HeadC">Creative Commons</h3>
			<p class="body">Another way to <a id="_idIndexMarker4092"></a>get free images is to find photos and drawings released by the artists under a Creative Commons license. There are a few types of Creative Commons licenses, so be sure to check the terms. Some artists make their work free to use however you want; some artists ask only that you give them credit (“attribution-only”); and some limit the image use to non-commercial purposes.</p>
			<div>
				<div id="_idContainer1445" class="sidebar">
					<h5 class="SidebarSeries">Further reading</h5>
					<p class="SidebarBody">For more information about Creative Commons licenses, go to <a href="http://creativecommons.org/licenses/"><span class="URL-Email--Sidebar-">creativecommons.org/licenses/</span></a>.</p>
				</div>
			</div>
			<p class="body">There are a number of resources for images released on a Creative Commons license, but these are three good first stops:</p>
			<p class="ListVariableTerm">Flickr Creative Commons (<a href="http://www.flickr.com/creativecommons"><span class="URL-Email">www.flickr.com/creativecommons</span></a>)</p>
			<p class="ListVariable">The photo-sharing <a id="_idIndexMarker4093"></a>service Flickr is my first stop for finding photos released on a Creative Commons license. The quality varies, but I can usually find what I need (such as the red panda in <span class="Xref-Figure">Figure 16-28</span>) for the cost of a photo credit. </p>
			<p class="ListVariableTerm">Unsplash (<a href="http://unsplash.com"><span class="URL-Email">unsplash.com</span></a>)</p>
			<p class="ListVariable">Unsplash<a id="_idIndexMarker4094"></a> provides free images of top-notch quality, “gifted by the world’s most generous community of photographers.” It is the source of many of the food images I use in this book. </p>
			<p class="ListVariableTerm">Wikimedia Commons (<a href="http://commons.wikimedia.org/wiki/Main_Page"><span class="URL-Email">commons.wikimedia.org/wiki/Main_Page</span></a>)</p>
			<p class="ListVariable">A sister site to <a id="_idIndexMarker4095"></a>Wikipedia, Wikimedia Commons is a vast resource of millions of Creative Commons and public domain images and other media files. They are contributed by the community and free to use.</p>
			<h2 class="HeadB">Clip Art and Icons</h2>
			<p class="body"><span class="FirstTerm">Clip art</span> refers to collections of royalty-free illustrations, animations, buttons, and other doodads that you can copy and paste for a wide range of uses. There are a number of resources online, and the good news is that some of these sites give graphics away for free, although you may have to suffer through a barrage of pop-up ads. Others charge a membership fee, anywhere from $10 to $200 a year. The drawback is that a lot of them are poor quality or kind of hokey (but then, “hokey” is in the eye of the beholder). The following are two sites to get you started: </p>
			<p class="ListVariableTerm">Clipart.com (<a href="http://www.clipart.com"><span class="URL-Email">www.clipart.com</span></a>)</p>
			<p class="ListVariable">This <a id="_idIndexMarker4096"></a>service charges a membership fee, but is well organized and tends to provide higher-quality artwork than the free sites.</p>
			<p class="ListVariableTerm">#1 Free Clip Art (<a href="http://www.1clipart.com"><span class="URL-Email">www.1clipart.com</span></a>)</p>
			<p class="ListVariable">Another no-frills free clip-art site.</p>
			<p class="body">It is also easy to find icons for web pages and applications for free or for a low price (a simple search for “free icons” will do the trick). Here are two resources to start you off:</p>
			<p class="ListVariableTerm">The Noun Project (<a href="http://thenounproject.com"><span class="URL-Email">thenounproject.com</span></a>)</p>
			<p class="ListVariable">The Noun <a id="_idIndexMarker4097"></a>Project collects and organizes classic, one-color icons from around the world. Dozens of collections are available for free, and a yearly subscription fee gives you access to everything. </p>
			<p class="ListVariableTerm">Icon Finder (<a href="http://www.iconfinder.com"><span class="URL-Email">www.iconfinder.com</span></a>)</p>
			<p class="ListVariable">This is a <a id="_idIndexMarker4098"></a>good resource for full-color icons of all styles. Some are free, but most are available via a monthly subscription plan. Be sure to check the terms of the Creative Commons license, which varies by icon set. </p>
			<h2 class="HeadB">Hire a Designer</h2>
			<p class="body">Finding and creating custom images takes time and particular talents. If you have more money than either of those things, consider hiring a graphic designer, photographer, or illustrator to generate the imagery for your site for you. The advantage to hiring a professional is that you get custom images tailored to your message or brand, not just generic stock images. If you start with high-quality original images, you can use the skills you learn in this book to produce web versions as you need them.</p>
			<h1 id="_idParaDest-210" class="HeadA"><a id="_idTextAnchor294"></a>Meet the Formats</h1>
			<p class="body">Once you<a id="_idIndexMarker4099"></a><a id="_idIndexMarker4100"></a> have your hands on some images, you need to get them into a format that will work on a web page. There are dozens of graphics file formats out there in the world. For example, if you use Windows, you may be familiar with BMP <a id="_idIndexMarker4101"></a>graphics, or if you are a print designer, you may commonly use images in<a id="_idIndexMarker4102"></a> TIFF and <a id="_idIndexMarker4103"></a>EPS format. On the web, bitmapped (pixel-based) images can be saved in the following formats (see <span class="Xref">Note</span>): JPEG (“jay-peg”), <a id="_idIndexMarker4104"></a>PNG (“ping” or “Pee-en-gee”),<a id="_idIndexMarker4105"></a> GIF (pronounced “giff” or “jiff”), and WebP (I’ve seen it referred to as “weppy,” but “web-p” sounds fine to me). </p>
			<div>
				<div id="_idContainer1446" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">The <a id="_idIndexMarker4106"></a><a id="_idIndexMarker4107"></a>WebP format is so new as of this writing that few browsers and image software programs support it. Still, I include it here because it is a promising option once support improves.</p>
				</div>
			</div>
			<p class="body">There is also the <a id="_idIndexMarker4108"></a>vector format <a id="_idIndexMarker4109"></a>SVG (Scalable Vector Graphics) that we looked at it in terms of markup back in <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span></a>. SVG is a bit of an oddball in that it is generated by an XML text file. It is so unique, in fact, that I’ve given it its own chapter: <a href="lwd5_chapter25.xhtml#_idTextAnchor311"><span class="Xref">Chapter </span><span class="Xref">25</span><span class="Xref">, SVG</span></a>. This chapter and the next focus primarily on the <a id="_idIndexMarker4110"></a>bitmap formats.</p>
			<p class="body">When you’re saving an image asset for a web page, it is important that it has the best image quality at the smallest file size. The first step to achieving those goals is making sure you save the image in the most appropriate format based on the image type. This section tackles terminology and digs deep into the features and functions of GIF, JPEG, PNG, and WebP. Knowing how they work will help you make the best format decision.</p>
			<div>
				<div id="_idContainer1447" class="sidebar">
					<h5 class="SidebarTitle">Name Files Properly</h5>
					<p class="SidebarBody">Be sure to use the proper file extensions for your image files: </p>
					<ul>
						<li class="SidebarListBullet">GIF files end with the <span class="Filename--Sidebar-">.gif</span> suffix. </li>
						<li class="SidebarListBullet">JPEG files use the <span class="Filename--Sidebar-">.jpg</span> (or the less common <span class="Filename--Sidebar-">.jpeg</span>) suffix. </li>
						<li class="SidebarListBullet">PNG files end in <span class="Filename--Sidebar-">.png</span>. </li>
						<li class="SidebarListBullet">WebP files end in <span class="Filename--Sidebar-">.webp</span>.</li>
						<li class="SidebarListBullet">SVG files end in <span class="Filename--Sidebar-">.svg</span>.</li>
					</ul>
				</div>
			</div>
			<h2 class="HeadB">The Photogenic JPEG</h2>
			<p class="body">One of the most <a id="_idIndexMarker4111"></a>popular graphic formats on the web is <span class="FirstTerm">JPEG</span>, which stands for <span class="FirstTerm">Joint Photographic Experts Group,</span> the standards body that created it. </p>
			<p class="body">JPEG is the best format to use if your image is a photograph or contains soft, smooth color transitions (<span class="Xref-Figure">Figure 23-2</span>). The JPEG compression scheme <em class="Emphasis">loves</em> gradient and blended colors, but doesn’t work especially well on flat colors or hard edges. </p>
			<div>
				<figure id="_idContainer1449" class="figWCaption">
					<p class="Figure_Holder"><span class="FigureLabel"> </span><img src="image/lwd5_2302_jpeg.png" alt="" width="1325" height="861"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-2.</span> The JPEG format is ideal for photographs (color or grayscale) or any image with subtle color gradations.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">24-bit Truecolor images</h3>
			<p class="body">JPEGs are capable of displaying millions of colors in the <a id="_idIndexMarker4112"></a>RGB color space (also referred to as<a id="_idIndexMarker4113"></a><a id="_idIndexMarker4114"></a> the <span class="FirstTerm">Truecolor</span> space; see <span class="Xref">Note</span>). This is also known as <span class="FirstTerm">24-bit color</span> because each of the three color channels (Red, Green, and Blue) is defined with 8 bits of information.</p>
			<div>
				<div id="_idContainer1450" class="note">
					<h5 class="noteHeader">NOTE</h5>
					<p class="note">RGB color is explained in <span class="Xref--Sidebar-">Chapter 13, Colors and Backgrounds.</span></p>
				</div>
			</div>
			<p class="body">Displaying 24-bit color is one aspect that makes JPEGs ideal for photographs—they have all the colors you’ll ever need. By comparison, other formats such as PNG-8 and GIF use a palette that limits the number of colors in the image to 256 <em class="Emphasis">total</em> (we’ll talk about why in a moment).</p>
			<h3 class="HeadC">Lossy compression</h3>
			<p class="body">The JPEG<a id="_idIndexMarker4115"></a><a id="_idIndexMarker4116"></a><a id="_idIndexMarker4117"></a><a id="_idIndexMarker4118"></a> compression scheme is <span class="FirstTerm">lossy</span>, which means that some of the image information is thrown out in the compression process (see <span class="Xref">Warning</span>). Fortunately, this loss is not discernible for most images at most compression levels. When an image is compressed with high levels of JPEG compression, you begin to see color blotches and squares (referred to <a id="_idIndexMarker4119"></a>as <span class="FirstTerm">artifacts</span>) that result from the way the compression scheme samples the image (<span class="Xref-Figure">Figure 23-3</span>).</p>
			<div>
				<div id="_idContainer1451" class="note">
					<h5 class="WarningHeader">WARNING</h5>
					<h5 class="SidebarTitle">Cumulative Image Quality Loss</h5>
					<p class="note">Be aware<a id="_idIndexMarker4120"></a> that once image quality is lost in JPEG compression, you can never get it back again. For this reason, you should avoid resaving a JPEG as a JPEG. The image loss is cumulative—in other words, you lose image quality <em class="Emphasis">every time</em>. </p>
					<p class="note">It is better to hang on to the original image and export JPEG copies as needed. That way, if you need to make a change, you can go back to the original and do a fresh save or export. </p>
				</div>
			</div>
			<div>
				<figure id="_idContainer1453" class="figWCaption">
					<p class="Figure_Holder"><span class="FigureLabel"> </span><img src="image/lwd5_2303_lossy.png" alt="" width="1321" height="558"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-3.</span> JPEG compression discards image detail to achieve smaller file sizes. At high compression rates, image quality suffers, as shown in the image on the right.</figcaption>
				</figure>
			</div>
			<p class="body">In most programs, you can control how aggressively you want the image to be compressed with a Quality setting when saving or exporting. This involves a trade-off between file size and image quality. The more you compress the image (for a smaller file size), the more the image quality suffers. Conversely, when you maximize quality, you also end up with larger files. The best compression level is based on the particular image and your objectives for the site.</p>
			<h3 class="HeadC">Progressive JPEGs</h3>
			<p class="body">Progressive JPEGs display in a series of passes, starting with a low-resolution version that gets clearer with each pass, as shown in <span class="Xref-Figure">Figure 23-4</span><span class="Xref">.</span> In some image editing programs, you can specify the number of passes it takes to fill in the final image (3, 4, or 5).</p>
			<div>
				<figure id="_idContainer1455" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2304_progressive.png" alt="" width="1321" height="450"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-4.</span> Progressive JPEGs render in a series of passes.</figcaption>
				</figure>
			</div>
			<p class="body">The advantage to using progressive JPEGs is that viewers can get an idea of the image before it downloads completely. Also, making a JPEG progressive usually reduces its file size slightly. The disadvantage is that progressive JPEGs take more processing power, which can make them problematic for low-end mobile devices. Despite that minor hitch, the best practice is to make all JPEGs progressive, not only for the smaller file size, but because they appear on the page faster, improving perceived performance.</p>
			<div>
				<div id="_idContainer1456" class="sidebar">
					<h5 class="SidebarTitle">The Wide World of JPEG</h5>
					<p class="SidebarBody">The Joint Photographic Experts Group has been busy since releasing the original JPEG format we know and love. They have released several newer JPEG standards (JPEG 2000, JPEG XR, JPEG-LS, JPEG XS, and others) that aim to keep pace with changing image requirements in all arenas, from digital cameras to medical imaging. Newer formats include features such as lossless compression, the ability to store 16-bit information in the RGB color channels, the <a id="_idIndexMarker4121"></a>CMYK color model, and lightweight implementations that are easier to encode and decode. Read more about them at <a href="http://JPEG.org"><span class="URL-Email--Sidebar-">JPEG.org</span></a>.</p>
				</div>
			</div>
			<h2 class="HeadB">The Powerful PNG</h2>
			<p class="body">The <span class="FirstTerm"><a id="_idIndexMarker4122"></a></span><span class="FirstTerm">PNG</span> (<span class="FirstTerm">Portable Network Graphics</span>) format was designed to replace GIF for online purposes and<a id="_idIndexMarker4123"></a> TIFF for image storage and printing. A PNG can be used to save many image types: 8-bit indexed color, 24- and 48-bit RGB color, and 16-bit grayscale, but for the purposes of web production, you need to choose only between 8-bit (<span class="FirstTerm">PNG-8</span>) and 24-bit (<span class="FirstTerm">PNG-24</span>).</p>
			<p class="body">Despite getting off to a slow start in terms of browser support, PNGs have become developers’ first choice in web graphics formats, and for good reason. PNGs offer an impressive lineup of features:</p>
			<ul>
				<li class="ListBullet">Lossless <a id="_idIndexMarker4124"></a><a id="_idIndexMarker4125"></a>compression </li>
				<li class="ListBullet">Multiple-level (alpha) or simple on/off (binary)<a id="_idIndexMarker4126"></a><a id="_idIndexMarker4127"></a><a id="_idIndexMarker4128"></a> transparency</li>
				<li class="ListBullet">Progressive display in multiple passes</li>
				<li class="ListBullet">Embedded gamma (brightness) adjustment information</li>
				<li class="ListBullet">Embedded text for attaching information about the image<div id="_idContainer1457" class="sidebar"><h5 class="SidebarTitle">Grayscale PNGs</h5><p class="SidebarBody">PNG supports 16-bit grayscale images—that’s as many as 65,536 shades of gray (216), enabling black-and-white photographs and illustrations to be stored with enormous subtlety of detail, although they are not appropriate for the web. In addition to the large file sizes required to store that much image information, that level of subtlety in grays would be lost on most computer monitors.</p></div></li>
			</ul>
			<h3 class="HeadC">PNG-8 </h3>
			<p class="body">PNG-8 is good for images that have flat colors, such as logos, line art, and icons (<span class="Xref-Figure">Figure 23-5</span>). You can save photographs or textured images too, but they won’t be saved as efficiently, resulting in larger file sizes. However, PNG-8 does work nicely for images with a combination of small amounts of photographic imagery and large, flat areas of color. The two key characteristics of PNG-8s are that they use an indexed color model and they support transparency. These concepts are worth exploring a bit deeper.</p>
			<div>
				<figure id="_idContainer1459" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2305_png8.png" alt="" width="1337" height="655"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-5.</span> The PNG-8 format is efficient at compressing graphical images comprising mainly flat colors and hard edges. </figcaption>
				</figure>
			</div>
			<div>
				<div id="_idContainer1460" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">Because they are simple illustrations, the images in <span class="Xref-Figure">Figure 23-5</span> could also have been drawn with vectors and saved in SVG format. </p>
				</div>
			</div>
			<h4 class="HeadD">8-bit indexed color</h4>
			<p class="body">I mentioned earlier that PNG-8 files contain a maximum of 256 colors. Let’s talk about why. </p>
			<p class="body">PNG-8 files are indexed color images that contain 8-bit color information (they can also be saved at lower bit depths). Let’s decipher that statement one term at a time. First, <span class="FirstTerm">8-bit</span> means PNG-8s can contain up to 256 colors—the maximum number that 8 bits of information can define (28 = 256). Lower bit depths result in fewer colors and also reduce file size. For example, 4-bit images contain only 16 colors (24 = 16).</p>
			<div>
				<div id="_idContainer1461" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">GIFs are also 8-bit indexed color images, so this discussion of bit depth and palettes applies to GIFs as well.</p>
				</div>
			</div>
			<p class="body"><span class="FirstTerm">Indexed color</span> means <a id="_idIndexMarker4129"></a><a id="_idIndexMarker4130"></a>that the set of colors in the image,<a id="_idIndexMarker4131"></a> its <span class="FirstTerm">palette</span>, is stored in a <a id="_idIndexMarker4132"></a><span class="FirstTerm">color table</span> (also called a <span class="FirstTerm">color map</span>). Each pixel in the image contains a numeric reference (or index) to a position in the color table. Let’s make this clear with a simple demonstration. <span class="Xref-Figure">Figure 23-6</span> shows how a 2-bit (4-color) indexed color image references its color table for display. For 8-bit images, there are 256 slots in the color table. </p>
			<div>
				<figure id="_idContainer1463" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2306_index.png" alt="" width="1325" height="671"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-6.</span> A 2-bit image and its color table.</figcaption>
				</figure>
			</div>
			<p class="body">Image-editing programs generally allow you to view the color table for an image. In <a id="_idIndexMarker4133"></a><a id="_idIndexMarker4134"></a>Photoshop, you can view (and even edit) the color table by selecting <span class="menu">Image </span><span class="menu">→</span><span class="menu"> Mode </span><span class="menu">→</span><span class="menu"> Color Table</span> (<span class="Xref-Figure">Figure 23-7</span>). In<a id="_idIndexMarker4135"></a> <a id="_idIndexMarker4136"></a>GIMP, go to <span class="menu">Windows </span><span class="menu">→</span><span class="menu"> Dockable Dialogs </span><span class="menu">→</span><span class="menu"> Color Map</span> (the image must be converted to indexed color mode first).</p>
			<div>
				<figure id="_idContainer1465" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2307_colortable.png" alt="" width="1321" height="1200"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-7.</span> The color tables in Photoshop and GIMP display the 64-pixel colors used in the image.</figcaption>
				</figure>
			</div>
			<p class="body">Most source images (scans, illustrations, photos, etc.) start out in RGB format, so they need to be converted to indexed color in order to be saved as a PNG-8 or GIF. When an image goes from RGB to indexed mode, the colors in the image are reduced to a palette of 256 colors or fewer, a process known as <span class="FirstTerm">quantization</span>. For most programs, including <a id="_idIndexMarker4137"></a>Photoshop, the conversion takes place when you save or export the image. Some image-editing programs, like GIMP, may require you to convert the image to indexed color manually first, and then export the PNG-8 as a second step.</p>
			<p class="body">In either case, you might be asked to select a palette for the indexed color image. The sidebar <span class="Xref">“Common Color Palettes”</span> outlines the various palette options available in the most popular image tools. It is recommended that you use Selective or Perceptual in Photoshop and Optimized Median Cut in PaintShop <a id="_idIndexMarker4138"></a>Pro for the best results for most image types. In GIMP, “Generate optimum palette” should do the trick, although it also provides a long list of crazy custom palettes you <em class="Emphasis">could</em> use (Coldfire, Plasma, Paintjet, and Bears, to name just a few).</p>
			<div>
				<div id="_idContainer1466" class="sidebar">
					<h5 class="SidebarTitle">Common Color Palettes</h5>
					<p class="SidebarBody">All 8-bit indexed color images, like PNG-8 and GIF, use palettes to define the colors in the image, and there are several standard palettes to choose from. Some are methods for producing a custom palette based on the colors in the image. Others apply a preexisting palette to the image.</p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Exact.</span> Creates a custom palette out of the actual colors in the image if the image already contains fewer than 256 colors.</p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Adaptive.</span> Creates a custom palette using the most frequently used pixel colors in the image. It allows for color-depth reduction while preserving the original character of the image. </p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Perceptual</span> <span class="ListStartItem--Sidebar-">(Photoshop only).</span> Creates a custom color table by giving priority to colors for which the human eye has greater sensitivity. Unlike Adaptive, it is based on algorithms, not just a pixel count. It generally results in images with better color integrity than Adaptive palette images.</p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Selective (Photoshop only).</span> Similar to Perceptual, but it gives preference to areas of broad color. </p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Web Adaptive, Restrictive, or Web216. </span>Creates a palette of colors exclusively from a palette of 216 colors that do not dither on 8-bit monitors. Because 8-bit monitors are a thing of the past, this palette (known as the “web palette”) is no longer relevant or recommended.</p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Custom. </span>Allows you to load a palette that was previously saved and apply it to the current image. Otherwise, it preserves the current colors in the palette.</p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">System (Windows or Macintosh).</span> Uses the colors in the specified system’s <a id="_idIndexMarker4139"></a>default palette.</p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Optimized Median Cut</span> <span class="ListStartItem--Sidebar-">(Paint Shop Pro Photo only).</span> Reduces the image to a few colors using something similar to an Adaptive palette. </p>
					<p class="SidebarBody"><span class="ListStartItem--Sidebar-">Optimized Octree (Paint Shop Pro Photo only).</span> Is recommended if the original image has just a few colors and you want to keep those exact colors.</p>
				</div>
			</div>
			<h4 class="HeadD">Transparency</h4>
			<p class="body">You can make <a id="_idIndexMarker4140"></a><a id="_idIndexMarker4141"></a>parts of a PNG-8 image fully transparent so that the background image <a id="_idIndexMarker4142"></a>or color shows through. Although all bitmapped graphics are rectangular by nature, transparency creates the illusion that the image has a more interesting shape (<span class="Xref-Figure">Figure 23-8</span>). In the most commonly supported type of PNG-8 transparency, pixels are either fully transparent or fully opaque, also known as <span class="FirstTerm">binary transparency</span>.  </p>
			<div>
				<figure id="_idContainer1468" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2308_transparency.png" alt="" width="1337" height="600"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-8.</span> Transparency allows the striped background to show through the bottom image.</figcaption>
				</figure>
			</div>
			<p class="body">PNG-8 files are also capable of storing multiple levels of transparency in their indexed color maps, allowing soft edges and shadows to blend in with the background. In the past, although browsers supported PNG-8 with variable levels, it was a challenge to find an image-editing tool that could create them. Today, you can create transparent PNG-8s right from Photoshop CC, and there are a number of tools for converting a PNG-24 to PNG-8 while maintaining its transparency levels.</p>
			<p class="body">We’ll look at both binary and variable transparency as it applies to PNG-8 files in the <span class="Xref">“Working with Transparency”</span> section in <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span><span class="Xref">, Image Asset Production</span></a>.</p>
			<h3 class="HeadC">PNG-24</h3>
			<p class="body">A PNG can also be saved as a <a id="_idIndexMarker4143"></a><a id="_idIndexMarker4144"></a>Truecolor image, with each channel (red, green, <a id="_idTextAnchor295"></a>and blue) defined by 8- or 16-bit information, resulting in 24- or 48-bit <a id="_idIndexMarker4145"></a>RGB images, respectively. In many graphics programs, 24-bit RGB PNGs are identified as PNG-24. It should be noted that 48-bit images, while great for storage of high-quality originals, are useless for the web becuse of file size, and even 24-bit images may not be the best choice. Like JPEG, PNG-24 is good for photographic images where you want the maximum color range.</p>
			<p class="body">The two key characteristics of PNG-24s are that they are “lossless” and they can contain multiple levels of transparency. Let’s dig into that a bit deeper.</p>
			<h4 class="HeadD">Lossless compression</h4>
			<p class="body">We learned<a id="_idIndexMarker4146"></a><a id="_idIndexMarker4147"></a><a id="_idIndexMarker4148"></a><a id="_idIndexMarker4149"></a> that in JPEG’s lossy compression algorithm, image data is tossed out in order to reduce the size of the file. PNG-24 files are <span class="FirstTerm">lossless</span>, meaning nothing is sacrificed. Because it is a lossless format, a 24-bit PNG is nearly always significantly larger than a lossy JPEG of the same image. For that reason, JPEGs are the best choice for photos on the web.</p>
			<p class="body">However, PNG-24 was the first format to include a killer feature that has made it one of the web’s most popular formats, and that is…</p>
			<h4 class="HeadD">Alpha transparency</h4>
			<p class="body">PNG-24 files <a id="_idIndexMarker4150"></a><a id="_idIndexMarker4151"></a>can contain multiple levels of transparency, commonly referred to as <span class="FirstTerm">alpha</span> <span class="FirstTerm">transparency</span>. They do this by storing 8-bit transparency information (256 levels) in a fourth channel,<a id="_idIndexMarker4152"></a> called the <span class="FirstTerm">alpha channel</span>.</p>
			<div>
				<div id="_idContainer1469" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">You sometimes see PNG-24 with alpha transparency referred to as a 32-bit PNG because there are 8 bits for each of four channels: red, green, blue, and alpha.</p>
				</div>
			</div>
			<p class="body"><span class="Xref-Figure">Figure 23-9</span> shows the same PNG against two different background images. The orange circle is entirely opaque, but the drop shadow contains multiple levels of transparency, ranging from nearly opaque to entirely transparent. The multiple transparency levels stored in the PNG allow the drop shadow to blend seamlessly with any background. The ins and outs of alpha transparency will be addressed in the section <span class="Xref">“Working with Transparency”</span> in <span class="Xref">Chapter 24</span>.</p>
			<div>
				<figure id="_idContainer1471" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2309_alphatrans-ebook.png" alt="" width="1338" height="532"/><span class="FigureLabel"> </span></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-9.</span> Alpha-channel transparency allows multiple levels of transparency, as shown in the drop shadow around the orange circle PNG.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">Additional features</h3>
			<p class="body">There are a few other features that make PNG a Pretty Nifty Graphic format (see what I did there?). </p>
			<p class="ListVariableTerm">Gamma correction</p>
			<p class="ListVariable"><span class="FirstTerm">Gamma</span> refers <a id="_idIndexMarker4153"></a>to the brightness setting of a monitor. PNGs can be tagged with information regarding the gamma setting of the environment in which they were created. When implemented in the image and the browser, the PNG retains its intended brightness and color intensity. Unfortunately, this feature is not consistently supported. In fact, image-optimizing tools typically remove the chunk of code that controls gamma. With poor browser support for gamma anyway, nothing is lost but unnecessary bytes.</p>
			<p class="ListVariableTerm">Embedded color profile information</p>
			<p class="ListVariable">The PNG format can also store the ICC color profile information of the system it was created on. In fact, if you are finding that it is difficult to match an RGB value in a PNG to the same RGB value in a background color, the embedded color profile is to blame. The block of code for storing ICC profiles also generally gets tossed by image optimizers. </p>
			<div>
				<div id="_idContainer1472" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">Safari now supports <a id="_idIndexMarker4154"></a><a id="_idIndexMarker4155"></a>ICC color profiles. This article on CSS Tricks by <a id="_idIndexMarker4156"></a><a id="_idIndexMarker4157"></a>Chris Coyier provides a good overview: <a href="http://css-tricks.com/color-rendering-difference-firefox-vs-safari/"><span class="URL-Email--Sidebar-">css-tricks.com/color-rendering-difference-firefox-vs-safari/</span></a>.</p>
				</div>
			</div>
			<p class="ListVariableTerm">Embedded text</p>
			<p class="ListVariable">PNGs also have the ability to store strings of text. This is useful for permanently attaching text to an image, such as copyright information or a description of what is in the image. Ideally, the meta-information in the PNG would be accessible via right-clicking the graphic in a browser, but this feature has never been implemented.</p>
			<p class="ListVariableTerm">Progressive display (interlacing)</p>
			<p class="ListVariable">PNGs can also be <a id="_idIndexMarker4158"></a>coded for interlaced display, revealing the image in a series of seven passes, filling in the image both horizontally and vertically. Interlacing adds to the file size and is usually not necessary, so to keep files as small as possible, turn interlacing display off. I’m finding that most tools these days don’t give you the option to turn it on anyway.</p>
			<div>
				<div id="_idContainer1473" class="sidebar">
					<h5 class="SidebarTitle">Animated PNGs</h5>
					<p class="SidebarBody">The <a id="_idIndexMarker4159"></a><a id="_idIndexMarker4160"></a><a id="_idIndexMarker4161"></a><span class="FirstTerm--Sidebar-">APNG (Animated PNG)</span> format is an extension to <a id="_idIndexMarker4162"></a>PNG that adds the ability to animate frames. In addition to 8-bit animations, it includes support for animated 24-bit images with alpha transparency. APNG is supported by current versions of Chrome and both desktop and mobile versions of Firefox, Safari, and Opera. No versions of Internet Explorer or MS Edge support APNG. Once they add support and old versions fall out of use, the APNG will certainly give animated GIFs a run for their money.</p>
				</div>
			</div>
			<h3 class="HeadC">In conclusion…</h3>
			<p class="body">Before we move on, here’s the skinny on what you should know about PNGs: </p>
			<ul>
				<li class="ListBullet">If you have a bitmapped image with areas of flat color, with or without transparent areas, PNG-8 is the most appropriate format as it will likely result in the smallest file size. </li>
				<li class="ListBullet">If you need variable levels of transparency, regardless of the image type, PNG-24 may be the only option based on the tools you are working with; however, the file will be smaller as a PNG-8. </li>
				<li class="ListBullet">If you have a photographic image with no transparency, you <em class="Emphasis">could</em> use PNG-24, but JPEG will almost always result in a smaller file.</li>
			</ul>
			<h2 class="HeadB">Ol’ Grandpa GIF</h2>
			<p class="body">The <span class="FirstTerm">GIF</span> (<span class="FirstTerm">Graphic </span><span class="FirstTerm"><a id="_idIndexMarker4163"></a></span><span class="FirstTerm">Interchange Format</span>) file was the first image format supported by web browsers and for a while, it was the <em class="Emphasis">only</em> file format that would display in a browser window. (I know. I was there.) Although not designed specifically for the web, it was adopted for its versatility, small file size, and cross-platform compatibility. </p>
			<div>
				<div id="_idContainer1474" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">You may see GIF listed as “Compuserve GIF” because Compuserve invented the format. The patent on GIF which was owned by Unisys expired in 2006. </p>
				</div>
			</div>
			<p class="body">These days, GIF is synonymous with “animated viral meme,” and, as the only well-supported web image format capable of animation, the GIF format still has a place at the table (at least until APNG and animated WebP have more thorough support). For still images, however, GIF has lost ground to the PNG format, which can do everything GIF can do and usually better. Furthermore, newer graphics tools are simply omitting the option to save files in GIF format. Our old friend GIF may be heading for retirement. That’s OK…we just fight about how to pronounce it anyway.</p>
			<p class="body">That said, let’s quickly look at what makes GIF tick.</p>
			<h3 class="HeadC">8-bit indexed color</h3>
			<p class="body">Like PNG-8, <a id="_idIndexMarker4164"></a><a id="_idIndexMarker4165"></a>GIF is an 8-bit indexed color format. You can save a GIF at even lower bit depths, resulting in fewer colors and smaller file sizes.</p>
			<h3 class="HeadC">GIF compression</h3>
			<p class="body">GIF compression <a id="_idIndexMarker4166"></a><a id="_idIndexMarker4167"></a><a id="_idIndexMarker4168"></a><a id="_idIndexMarker4169"></a>is <span class="FirstTerm">lossless</span>, although some image information is lost when the RGB image is converted to indexed color. It uses a compression scheme (called “<a id="_idIndexMarker4170"></a><a id="_idIndexMarker4171"></a>LZW” for “Lempel-Ziv-Welch”) that takes advantage of repetition in data. When it encounters a string of pixels of identical color, it compresses them into one data description (<span class="Xref-Figure">Figure 23-10</span>). This is why images with large areas of flat color condense better than images with textures. PNG uses a similar like-color compression scheme.</p>
			<div>
				<figure id="_idContainer1476" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2310_lzw.png" alt="" width="1337" height="560"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-10.</span> A simplified demonstration of the LZW compression scheme. What actually happens in technical terms is more complicated, of course, but this example provides a good mental model.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">Transparency</h3>
			<p class="body">GIF images <a id="_idIndexMarker4172"></a><a id="_idIndexMarker4173"></a>use binary transparency, in which pixels are either entirely opaque or transparent. </p>
			<h3 class="HeadC">Interlacing</h3>
			<p class="body">Interlacing makes a GIF display in a series of passes, like progressive JPEGs. Each pass is clearer than the pass before, until the image is fully rendered in the browser window (<span class="Xref-Figure">Figure 23-11</span>). Over a fast connection, these effects (interlacing or image delays) may not be perceptible. However, over slow connections, interlacing large images may be a way to provide a hint of the image to come. </p>
			<div>
				<figure id="_idContainer1478" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2311_interlacing.png" alt="" width="1337" height="682"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-11.</span> Interlaced GIFs display in a series of passes, each clearer than the pass before.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">Animation</h3>
			<p class="body">Another <a id="_idIndexMarker4174"></a><a id="_idIndexMarker4175"></a>feature built into the GIF file format is the ability to display simple animations (<span class="Xref-Figure">Figure 23-12</span>). Many of the spinning, blinking, fading, or otherwise moving ad banners you see are animated GIFs, and they certainly show up in your social media feeds. </p>
			<div>
				<figure id="_idContainer1480" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2312_animation.png" alt="" width="1337" height="289"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-12.</span> All the frames of this simple animation are contained in one GIF file.</figcaption>
				</figure>
			</div>
			<p class="body">Animated GIFs contain a number of animation <span class="FirstTerm">frames</span>, which are separate images that, when viewed together quickly, give the illusion of motion or change over time, kind of like a flipbook. All of the frames are stored within a single GIF file along with settings that describe how they should be played. Settings include whether and how many times the sequence repeats, how long each frame stays <a id="_idIndexMarker4176"></a>visible (<span class="FirstTerm">frame delay</span>), the manner in which one frame replaces <a id="_idIndexMarker4177"></a>another (<span class="FirstTerm">disposal method</span>), whether the image is transparent, and whether it is interlaced. </p>
			<p class="body">There are many tools for creating animated GIFs (just do a quick search). Many are web apps that you can use right in the browser or mobile device, and many are free. You can also make an animated GIF in Photoshop by using the Timeline window and clicking Create Frame Animation. </p>
			<h2 class="HeadB">The Performant WebP</h2>
			<p class="body">There’s a <a id="_idIndexMarker4178"></a><a id="_idIndexMarker4179"></a>new image format in town, and it’s here to beat up all the other formats. Google calls its open source WebP format “the Swiss Army knife of image formats.” It has virtually all the features we’ve looked at in JPEG, PNG, and GIF at sizes that are typically 25–35% smaller: </p>
			<p class="ListVariableTerm">Lossless <em class="Emphasis">or</em> lossy compression</p>
			<p class="ListVariable">WebP can be saved in a lossy format (like JPEG) or lossless (like PNG). Its lossy compression scheme uses the same encoding used in the VP8 video codec. </p>
			<p class="ListVariableTerm">Alpha transparency</p>
			<p class="ListVariable">WebP has an alpha channel for multiple levels of transparency, like PNG-24. Alpha transparency can be used with either the lossless (PNG-like) image compression or—and this is special—lossy (JPEG-like) compression. It is the only format that can combine a <em class="Emphasis">lossy</em> RGB channel with a lossless alpha channel, resulting in a file that is 60–70% smaller than a PNG-24 of the same image.</p>
			<p class="ListVariableTerm">Animation</p>
			<p class="ListVariable">It is also possible to animate WebP images. Sorry GIF, there goes your advantage.</p>
			<p class="ListVariableTerm">Metadata</p>
			<p class="ListVariable">Like <a id="_idIndexMarker4180"></a>PNG, the WebP container can store metadata right in its code. </p>
			<p class="ListVariableTerm">Color profile</p>
			<p class="ListVariable">The WebP <a id="_idIndexMarker4181"></a><a id="_idIndexMarker4182"></a>container can also embed color profile (ICC) information. </p>
			<div>
				<div id="_idContainer1481" class="sidebar">
					<h5 class="SidebarSeries">Fun Fact</h5>
					<p class="SidebarBody">WebP is a “sister project” to the open source WebM video format.</p>
				</div>
			</div>
			<h3 class="HeadC">Support</h3>
			<p class="body">Here’s where we get to the “sad trombone” portion of the story. Because WebP is new, it has sparse browser support. As of this writing, it is supported in only newer Chrome, Android, Opera, Vivaldi, and Samsung browsers. But that doesn’t mean you can’t use it! The modern web developer knows it’s a good approach to supply the best (in this case, fastest) experience to browsers that can handle it and the next best thing to the rest. </p>
			<p class="body">You can use <a id="_idIndexMarker4183"></a><a id="_idIndexMarker4184"></a>Modernizr (covered in <a href="lwd5_chapter19.xhtml#_idTextAnchor243"><span class="Xref">Chapter </span><span class="Xref">19</span><span class="Xref">, More CSS Techniques</span></a>) to detect WebP in its lossy, lossless, alpha-channel, and animated varieties. You can also use the <span class="Literal-fc">picture</span> element to deliver a <span class="Filename">.webp</span> image to browsers that can use it and a JPEG as a fallback, as we saw back in <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span></a>:</p>
			<pre class="CodeFirst">&lt;picture&gt;<br/>  &lt;source <code class="CodeColor">type="image/webp"</code> <code class="CodeColor">srcset="pizza.webp"</code>&gt;<br/>  &lt;img src="pizza.jpg" alt="pizza"&gt;<br/>&lt;/picture&gt;</pre>
			<p class="body">It is also common to have the server make the call and deliver WebP images when it detects that the browser supports them (based on the “accept encoding header”). Backend solutions are beyond the scope of this discussion, but it’s an option you should be aware of.</p>
			<h3 class="HeadC">Creating WebP files</h3>
			<p class="body">As with browsers, it will take a while for WebP to find its way into image creation tools. You can already make WebP files in Sketch, Pixelmator, and a few other graphics programs. You will find a current list of supporting programs on the WebP Wikipedia page (<a href="http://en.wikipedia.org/wiki/WebP"><span class="URL-Email">en.wikipedia.org/wiki/WebP</span></a>). There is word that full WebP support will be added to GIMP in version 2.10, which has not yet been released as of this writing.</p>
			<p class="body">If you use Adobe<a id="_idIndexMarker4185"></a> Photoshop, there are two <a id="_idIndexMarker4186"></a>plug-ins that let you save to WebP format. The first, by <a id="_idIndexMarker4187"></a>Toby Thain, is at <a href="http://telegraphics.com.au/sw/product/WebPFormat"><span class="URL-Email">telegraphics.com.au/sw/product/WebPFormat</span></a>, and a newer one by <a id="_idIndexMarker4188"></a>Brendan Bolles is available at<a href="http://github.com/fnordware/AdobeWebM"><span class="URL-Email">github.com/fnordware/AdobeWebM</span></a>). Once you install the plug-in, you’ll see WebP in the list of formats you can save to.</p>
			<p class="body">Finally, you may also use the <a id="_idIndexMarker4189"></a><span class="Literal-fc">cwebp</span> command-line tool (see, they’re not just for coders!) to convert PNG and JPEG images to WebP format. The corresponding <a id="_idIndexMarker4190"></a><span class="Literal-fc">dwebp</span> command converts WebP to PNG. </p>
			<h3 class="HeadC">Where to learn more</h3>
			<p class="body">WebP has an official site at <a href="http://developers.google.com/speed/webp"><span class="URL-Email">developers.google.com/speed/webp</span></a>, where you will find detailed documentation, an explanation of its compression schemes, updated lists of supporting tools and browsers (including links to download the aforementioned plug-ins and command-line tools), and a gallery of samples. It’s definitely worth reading if you enjoy geeking out on image formats. WebP is certainly worth keeping an eye on. </p>
			<h2 class="HeadB">Choosing the Best Bitmapped Format</h2>
			<p class="body">The first step to making quality web graphics that maintain quality and download quickly is choosing the right format. <span class="Xref-Figure">Table 23-1</span> provides a good starting point. Because of poor support for WebP as of this writing, I will stick with the supported bitmap formats<a id="_idIndexMarker4191"></a><a id="_idIndexMarker4192"></a><a id="_idIndexMarker4193"></a> PNG, JPEG, and GIF here.</p>
			<p class="body">Note that SVG should be your first choice for illustrations and icons with flat colors. SVG may also result in smaller files for images with a combination of flat colors and a small areas of bitmapped image, gradients, or effects like drop shadows. You’ll learn all about them in <a href="lwd5_chapter25.xhtml#_idTextAnchor311"><span class="Xref">Chapter </span><span class="Xref">25</span></a>, but for now, <span class="Xref-Figure">Table 23-1</span> should help you sort out the bitmapped file options.</p>
			<div>
				<div id="_idContainer1482" class="contents">
					<table id="table001-21" class="Table _idGenTablePara-1">
						<colgroup>
							<col/>
							<col/>
							<col/>
						</colgroup>
						<thead>
							<tr class="Table">
								<td class="Table Remove-bottom-rule Table-Head" colspan="3">
									<p class="TableTitle"><span class="Table-Label"><span class="FigureLabel">Table 23-1.</span></span> Choosing the best bitmapped (raster) file format </p>
								</td>
							</tr>
							<tr class="Table">
								<td class="Table Table-Head">
									<p class="TableHeader">If your image...</p>
								</td>
								<td class="Table Table-Head">
									<p class="TableHeader">use...</p>
								</td>
								<td class="Table Table-Head">
									<p class="TableHeader">because...</p>
								</td>
							</tr>
						</thead>
						<tbody>
							<tr class="Table">
								<td class="Table Table-Body-Left">
									<p class="TableBody">Is graphical, with flat colors</p>
								</td>
								<td class="Table Table-Body">
									<p class="TableBody">8-bit PNG or GIF </p>
								</td>
								<td class="Table Table-Body-Right">
									<p class="TableBody">PNG and GIF excel at compressing flat color. </p>
								</td>
							</tr>
							<tr class="Table">
								<td class="Table Table-Body-Left">
									<p class="TableBody">Is a photograph or contains graduated color</p>
								</td>
								<td class="Table Table-Body">
									<p class="TableBody">JPEG</p>
								</td>
								<td class="Table Table-Body-Right">
									<p class="TableBody">JPEG compression works best on images with blended colors. Because it is lossy, it generally results in smaller file sizes than 24-bit PNG.</p>
								</td>
							</tr>
							<tr class="Table">
								<td class="Table Table-Body-Left">
									<p class="TableBody">Is a combination of flat and photographic imagery</p>
								</td>
								<td class="Table Table-Body">
									<p class="TableBody">8-bit PNG or GIF</p>
								</td>
								<td class="Table Table-Body-Right">
									<p class="TableBody">Indexed color formats are best at preserving and compressing flat color areas. The pixelation (dithering) that appears in the photographic areas as a result of reducing to a palette is usually not problematic.</p>
								</td>
							</tr>
							<tr class="Table">
								<td class="Table Table-Body-Left">
									<p class="TableBody">Requires transparency</p>
								</td>
								<td class="Table Table-Body">
									<p class="TableBody">GIF or PNG-8</p>
								</td>
								<td class="Table Table-Body-Right">
									<p class="TableBody">Both GIF and PNG allow on/off transparency in images.</p>
								</td>
							</tr>
							<tr class="Table">
								<td class="Table Table-Body-Left">
									<p class="TableBody">Requires multiple levels of transparency</p>
								</td>
								<td class="Table Table-Body">
									<p class="TableBody">PNG-24 or PNG-8 </p>
								</td>
								<td class="Table Table-Body-Right">
									<p class="TableBody">Only PNG supports multiple levels of transparency. PNG-24s with alpha transparency have a much larger file size, but it is easier to find tools to create them. WebP also supports alpha transparency, and may be a better option once it is better supported.</p>
								</td>
							</tr>
							<tr class="Table">
								<td class="Table Table-Body-Left">
									<p class="TableBody">Requires animation</p>
								</td>
								<td class="Table Table-Body">
									<p class="TableBody">GIF</p>
								</td>
								<td class="Table Table-Body-Right">
									<p class="TableBody">GIF is the only supported format that can contain animation frames. APNG and WebP may be better options in the future.</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
			<p class="body">That concludes our exploration of image formats. I think we just took the very long way around to say, “if it’s a photo, use JPEG, and if it’s mostly flat colors, use PNG-8,” but I think it’s important to understand <em class="Emphasis">why</em>.</p>
			<h1 id="_idParaDest-211" class="HeadA"><a id="_idTextAnchor296"></a>Image Size and Resolution</h1>
			<p class="body">There is a new<a id="_idIndexMarker4194"></a> term floating around to describe folks who design web pages and apps: <span class="FirstTerm">screen designer</span>. I<a id="_idIndexMarker4195"></a> like it. As the web and smartphones evolve, it is clear that the requirements and concerns of designing for screens are distinct from designing for print. As a web designer, you will need to be well versed in how images display on screens, so let’s zoom in.</p>
			<p class="body">One thing that <a id="_idIndexMarker4196"></a><a id="_idIndexMarker4197"></a><a id="_idIndexMarker4198"></a>GIF, JPEG, PNG, and WebP images have in common is that they are <a id="_idIndexMarker4199"></a>all <span class="FirstTerm">bitmapped</span> (also called <span class="FirstTerm">raster</span>) images. When you zoom in on a bitmapped image, you can see that it is like a mosaic made up of many pixels (tiny, single-colored squares). These are different from <a id="_idIndexMarker4200"></a>vector graphics that are made up of smooth lines and filled areas, all based on mathematical formulas. <span class="Xref-Figure">Figure 23-13</span> illustrates the difference between bitmapped and vector graphics. </p>
			<div>
				<figure id="_idContainer1484" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2313_bitmapvector.png" alt="" width="1321" height="500"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-13.</span> Bitmapped and vector graphics.</figcaption>
				</figure>
			</div>
			<h2 class="HeadB">Image Resolution</h2>
			<p class="body">Image-editing<a id="_idIndexMarker4201"></a> <a id="_idIndexMarker4202"></a><a id="_idIndexMarker4203"></a><a id="_idIndexMarker4204"></a><a id="_idIndexMarker4205"></a>programs keep track of how many pixels an image has per inch. This <a id="_idIndexMarker4206"></a>pixel per inch (<span class="FirstTerm">ppi</span>) measurement is the <span class="FirstTerm">resolution</span> of the digital image. When an image is printed on paper, higher ppi means sharper, higher quality because there is more information packed into each square inch (see the <span class="Xref">“DPI Versus PPI”</span> sidebar). In the print world, image resolutions of 300ppi and 600ppi are common.</p>
			<div>
				<div id="_idContainer1485" class="sidebar">
					<h5 class="SidebarTitle">DPI Versus PPI</h5>
					<p class="SidebarBody">The resolution of digital images is measured in pixels per inch (ppi). When it comes to print, however, printers and printed pages are measured<a id="_idIndexMarker4207"></a><a id="_idIndexMarker4208"></a> in <span class="FirstTerm--Sidebar-">dots per inch</span> (<span class="FirstTerm--Sidebar-">dpi</span>), which describes the number of printed dots in each inch of the image. The more ink dots per inch, the sharper the image. The dpi of the printed image may or may not be the same as the ppi for the digital image.</p>
					<p class="SidebarBody">In your travels, you may hear the terms “dpi” and “ppi” used interchangeably (albeit incorrectly), but now you know the difference.</p>
				</div>
			</div>
			<p class="body">On the web, however, the notion of “inches” is irrelevant because the final display size of the image is dependent on the resolution of the screen on which it is displayed (<span class="Xref-Figure">Figure 23-14</span>).</p>
			<p class="body">If we’re throwing out “inches,” we have to toss out “pixels per inch” as well. The only thing we know for sure is that the graphic in <span class="Xref-Figure">Figure 23-14</span> is 72 pixels across, and it will be twice as wide as a graphic that is 36 pixels across. Here’s the bottom line: <em class="Emphasis">web images are measured in number of pixels, and the ppi at which they are created is irrelevant</em>.</p>
			<div>
				<figure id="_idContainer1487" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2314_density.png" alt="" width="1321" height="738"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-14.</span> Inches, and therefore “pixels per inch,” are not relevant for digital media, where the size of an image is dependent on the resolution of the screen.</figcaption>
				</figure>
			</div>
			<p class="body">That said, it is the recommended practice to create images at 72ppi if you are designing in a bitmap image editor like Photoshop or GIMP. This is the default and keeps images at roughly the size they’ll appear on a desktop monitor. You are welcome to create your images at a different ppi, but just be sure to be consistent so images don’t get resized when you’re copying and pasting from one file to another. </p>
			<h2 class="HeadB">Screen Resolution</h2>
			<p class="body">Screen <a id="_idIndexMarker4209"></a><a id="_idIndexMarker4210"></a><a id="_idIndexMarker4211"></a>displays are made up of pixels, so you can measure their resolution in pixels per inch (ppi) as well. This is often referred to as the <span class="FirstTerm">pixel density</span> of the screen (see <span class="Xref">Note</span>).</p>
			<div>
				<div id="_idContainer1488" class="note">
					<h5 class="noteHeader">Note</h5>
					<p class="note">You may see ads for screens with “a screen resolution of 2560 × 1440,” but that’s not its “resolution,” that’s its screen dimension. Resolution is a measure of pixel density.</p>
				</div>
			</div>
			<p class="body">The first Macintosh computers had 72ppi screens, which is pretty crude by today’s standards. Early PCs used 96ppi. These days, standard desktop and laptop monitors have resolutions of about 109 to 160ppi. Over the years, manufacturers have been pushing resolution of displays higher and higher, which leads us to...</p>
			<h3 class="HeadC">High-density displays</h3>
			<p class="body">From the <a id="_idIndexMarker4212"></a>1980s to 2010, we could pretty much count on the pixels in our images mapping one-to-one with the hardware pixels in the desktop monitor, as shown in <span class="Xref-Figure">Figure 23-14</span>. Of course, there were exceptions—browsers could zoom images larger or smaller on command, and images were scaled down to fit on smartphone screens—but that was the general rule.</p>
			<p class="body">There was a seismic shift in 2010, however, when Apple introduced the iPhone 4 with its Retina display. The Retina display packed literally twice the number of pixels into the same physical screen space, resulting in images that were much sharper (remember, the more pixels per inch, the better the image quality). The flip side of that, of course, was that the bitmapped images we were already using got rendered by twice as many pixels, and ended up looking a bit blurry (<span class="Xref-Figure">Figure 23-15</span>).</p>
			<div>
				<figure id="_idContainer1490" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2315_retina.png" alt="" width="1338" height="806"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-15.</span> Typical web graphics look slightly pixel-y on a 2x display.</figcaption>
				</figure>
			</div>
			<p class="body">The Retina screen was just the beginning. There are now both 2x and 3x Apple devices (including tablets and laptops), and Android devices come in with 1.5x, 2x, 3x, and even 4x standard pixel densities. As a result, an actual device pixel is so small that images and text would be illegibly tiny if they were mapped one to one. What to do?!</p>
			<h3 class="HeadC">Reference pixels: PT and DP</h3>
			<p class="body">If you think back to our responsive images discussion in <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span></a>, you’ll remember that we’ve got a solution. High-resolution devices use a measurement called <a id="_idIndexMarker4213"></a>a <span class="FirstTerm">reference pixel</span> that can be used for the purposes of layout. Reference pixels go by different names and get calculated slightly differently depending on the operating system, but they enable us to specify pixel sizes without getting caught up in pixel densities. </p>
			<p class="body">Apple calls its reference <a id="_idIndexMarker4214"></a>pixels <span class="FirstTerm">points</span> (PT). One point on a standard 1x screen equals one device pixel. On a 2x screen, a point is 2 × 2 device pixels, and on 3x screens, a point is 3 × 3 device pixels. They all look about the same size because the high-resolution pixels are so incredibly small. Android calls its reference <a id="_idIndexMarker4215"></a><a id="_idIndexMarker4216"></a><a id="_idIndexMarker4217"></a>pixels <span class="FirstTerm">device-independent pixels</span>, or DiP, or simply DP. They are always equal to one pixel at 160ppi, but they work the same way.</p>
			<p class="body">You would probably use the terms PT and DP more when designing graphics to be used in native smartphone apps. For the web, it is sufficient to do the layout design in pixels and relevant CSS units. For example, you would say that the image in <span class="Xref-Figure">Figure 23-15</span> has a width of 350 (reference) pixels in the layout, even though the image file itself is 700 pixels wide for 2x displays.</p>
			<h2 class="HeadB">The Upshot</h2>
			<p class="body">At the end of the day, you can go about your business creating images at the pixel dimensions you intend for the layout. For important images, however, you may decide that you want them to look as crisp as possible on high-density displays. In that case, you’ll need to create several versions and deliver them with responsive image markup or let the server handle it. If you have a product shot that appears at 150 × 150 pixels at 1x, you’ll need at least a 2x version (300 × 300) and perhaps a 3x version (450 × 450) as well, knowing that they will all occupy 150 reference pixels in the layout.</p>
			<p class="body">In <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span></a>, we’ll look at tools and techniques for creating multiple image sizes aimed at high-density displays. The markup for delivering the right image size to the right device is covered in <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span></a>.</p>
			<div>
				<div id="_idContainer1491" class="sidebar">
					<h5 class="SidebarSeries">further reading</h5>
					<p class="SidebarBody">For much more in-depth explanations of image and screen resolution, I recommend theses articles:</p>
					<ul>
						<li class="SidebarListBullet">“Pixel Density, Demystified” by Peter<a id="_idIndexMarker4218"></a> Nowell (<a href="https://medium.com/@pnowelldesign/pixel-density-demystified-a4db63ba2922"><span class="URL-Email--Sidebar-">medium.com/@pnowelldesign/pixel-density-demystified-a4db63ba2922</span></a>)</li>
						<li class="SidebarListBullet">“Designer’s guide to DPI,” by Sebastien <a id="_idIndexMarker4219"></a>Gabriel (<a href="http://sebastien-gabriel.com/designers-guide-to-dpi/"><span class="URL-Email--Sidebar-">sebastien-gabriel.com/designers-guide-to-dpi/</span></a>)</li>
					</ul>
				</div>
			</div>
			<h1 id="_idParaDest-212" class="HeadA"><a id="_idTextAnchor297"></a>Image Asset Strategy</h1>
			<p class="body">Now you <a id="_idIndexMarker4220"></a>know where to get images, are acquainted with the various web format options, and have a feel for screen resolution. Throughout this book, you’ve also gotten to know the important principles of performance and Responsive Web Design. Let’s put all of this know-how together in a strategy for approaching image production.</p>
			<p class="body">As a conscientious web designer concerned with providing the best experience across a wide range of devices, you should have these priorities in mind when creating graphics for a site:</p>
			<ul>
				<li class="ListBullet">Keeping the file sizes of images as small as possible</li>
				<li class="ListBullet">Minimizing the number of HTTP requests to the server</li>
				<li class="ListBullet">Not downloading more image data than is needed for devices with smaller screens</li>
				<li class="ListBullet">Delivering high-quality images to high-density displays</li>
			</ul>
			<p class="body">It may be helpful to approach your image requirements systematically, ruling out classes of images and unnecessary tasks, so you are left with a clear set of production options. <span class="Xref-Figure">Figure 23-16</span> diagrams a series of questions you can use to cull your image production options. In this section, we’ll address each step of the process at a conceptual level. In <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span></a>, you’ll get to try out specific image production techniques that address these goals.</p>
			<div>
				<figure id="_idContainer1493" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2316_imageflowchart-ebook.png" alt="" width="1337" height="2060"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-16.</span> This flowchart may look a little crazy, but it is intended to help you narrow down the options for image asset production. It is the foundation of the discussion in this section.</figcaption>
				</figure>
			</div>
			<p class="body">First off, let’s determine whether you need an image at all.</p>
			<h2 class="HeadB">Can It Be Done with CSS?</h2>
			<p class="body">Before you break out Photoshop, consider whether you can achieve what you’re after with CSS alone. Not only will the effect be a fraction of the file size, but you’ll also avoid another call to the server. </p>
			<p class="body">Effects like <a id="_idIndexMarker4221"></a><a id="_idIndexMarker4222"></a>rounded corners and <a id="_idIndexMarker4223"></a>gradients that once required images are now achievable with CSS properties (<a id="_idIndexMarker4224"></a><span class="Literal-fc">border-radius</span> and <a id="_idIndexMarker4225"></a><a id="_idIndexMarker4226"></a><span class="Literal-fc">radial-gradient</span>/<span class="Literal-fc">linear-gradient</span>, respectively). </p>
			<p class="body">It is also possible to make little drawings with CSS, which may be useful in place of icons (<span class="Xref-Figure">Figure 23-17</span>). Basic shapes such as circles, rectangles, triangles, and more can be created with empty <span class="Literal-fc">div</span> elements and some trickery with borders and transforms. Some people have created amazingly complex illustrations using HTML and CSS, but the technique, which had its heyday around 2010–11, is largely for demonstration purposes rather than for serious production.</p>
			<p class="body">I don’t want to stray too far from image production in this chapter, so I will leave you with these articles, where you can learn more about CSS shapes and illustrations: </p>
			<ul>
				<li class="ListBullet">“The Shapes of CSS,” a gallery of one-element CSS shapes with the code used to create them, compiled by <a id="_idIndexMarker4227"></a>Chris Coyier: <a href="http://css-tricks.com/examples/ShapesOfCSS/"><span class="URL-Email">css-tricks.com/examples/ShapesOfCSS/</span></a></li>
				<li class="ListBullet">“Beginners Guide to Pure CSS Images,” a step-by-step tutorial by<a id="_idIndexMarker4228"></a> <a href="https://medium.com/@michaelmangial1?source=user_popover">Michael Mangialardi</a> for creating the koala bear in <span class="Xref-Figure">Figure 23-17</span>: <a href="http://medium.com/coding-artist/a-beginners-guide-to-pure-css-images-ef9a5d069dd2"><span class="URL-Email">medium.com/coding-artist/a-beginners-guide-to-pure-css-images-ef9a5d069dd2</span></a></li>
				<li class="ListBullet">A collection of “not-so-semantic drawings made with CSS,” on<a id="_idIndexMarker4229"></a> Codepen, collected by<a id="_idIndexMarker4230"></a> Hugo Giraudel:<a href="http://codepen.io/collection/kFeDz/3/"><span class="URL-Email"> codepen.io/collection/kFeDz/3/</span></a></li>
			</ul>
			<p class="body">If you need something more complex than a CSS effect, it’s time to think about image formats.</p>
			<div>
				<figure id="_idContainer1495" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2317_cssshapes.png" alt="" width="2025" height="567"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-17.</span> These little drawings are created with HTML markup and CSS alone. </figcaption>
				</figure>
			</div>
			<h2 class="HeadB">Can It Be an SVG?</h2>
			<p class="body">If your image is a <a id="_idIndexMarker4231"></a>logo, icon, or other illustration, creating it in a vector drawing tool and saving it as an SVG offers the benefits of small file size and resolution independence. Now that browser support is reliable, it is a good solution to dealing with the variety of devices and displays we need to design for. </p>
			<p class="body">If you place the SVG code inline, with the <span class="Literal-fc">svg</span> element, you save another HTTP request and gain the ability to style and script the elements. Or, if a static illustration is all you need, embedding the SVG in the document with the <span class="Literal-fc">img</span> element is a perfectly fine option. </p>
			<p class="body">In <a href="lwd5_chapter25.xhtml#_idTextAnchor311"><span class="Xref">Chapter </span><span class="Xref">25</span></a>,<span class="Xref"> </span>you’ll take a long journey through the SVG format, so I won’t say much more here other than the fact that SVG should be your first choice if you can create the image or illustration in vector format.</p>
			<p class="body">If SVG is not appropriate for your image type or if your target audience is known to use non-supporting browsers in significant numbers, then you may need to go with a bitmapped format. There are still a few things to consider.</p>
			<h2 class="HeadB">What Is the Best Bitmapped Format?</h2>
			<p class="body">Image format has a <a id="_idIndexMarker4232"></a>large impact on file size, so choosing the most appropriate format for your image is an important step to optimizing images. As we learned, PNG-8 is the best option for images with areas of flat color, and JPEG is the best format for photographic images. In <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span></a>, I’ll show you how to save images in various formats, and you’ll get to see how format affects file size firsthand.</p>
			<p class="body">Consider also saving the image in the much smaller WebP format and using the <span class="Literal-fc">picture</span> element to deliver it to the browsers that can render it (see the <span class="Xref">“Responsive Image Markup”</span> section in <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span></a>, for details). It helps speed things up on supporting browsers and provides a reliable JPEG or PNG fallback for the others.</p>
			<p class="body">With the format decided, it’s time to start thinking about how many versions of each image you need to create.</p>
			<h2 class="HeadB">Does Your Layout Require Responsive Images?</h2>
			<p class="body">The next thing to consider is whether your layout requires responsive images.</p>
			<h3 class="HeadC">No, one size is fine</h3>
			<p class="body">Some pages, <a id="_idIndexMarker4233"></a>such as text-heavy pages with small illustrations, might get by fine with just one version of each image that serves all screen sizes. If that is the case, save or export your image in the most appropriate file format and you’re nearly done. The final step is to optimize the image to make it as small as it can be. Optimization techniques are discussed in detail in <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span></a>.</p>
			<h3 class="HeadC">Yes, I need each image saved at multiple sizes</h3>
			<p class="body">Your responsive layout <a id="_idIndexMarker4234"></a>may require that you take advantage of the responsive image techniques we outlined in <a href="lwd5_chapter07.xhtml#_idTextAnchor088"><span class="Xref">Chapter </span><span class="Xref">7</span></a>. To recap, “responsive images” refers to the process of providing images that are tailored to the user’s viewing environment. This includes preventing browsers on small screens from downloading more image data than they need as well as providing images large enough to look crisp on high-density displays. You can also provide alternative versions of the image based on content (called the “art direction” scenario) or to take advantage of newer formats, such as WebP. </p>
			<p class="body">If you’re going the responsive images route, things start getting interesting.</p>
			<h2 class="HeadB">Does Your Site Have a Lot of Images?</h2>
			<h3 class="HeadC">Yes, my site has a ton of images (Hint: Automate it!)</h3>
			<p class="body">Although it is terrific to have an HTML solution for getting the right images to the right browsers, the current system is a bit cumbersome with stacks of code and the need to produce multiple images. If you work on a large, image-heavy site, it could prove to be unmanageable. Image processing is a task that begs to be automated. The solution: let the <em class="Emphasis">server</em> do it!</p>
			<p class="body">Fortunately, there are many tools and services, both open source and for pay, that let the server do the work of creating appropriate image versions on the fly. You upload the image at the highest quality and largest size required and let the server handle the rest—no need to create and store multiple versions of every image. Some services go beyond simple resizing, including the ability to crop images intelligently, add special effects such as sepia tones, or otherwise transform images on the fly.</p>
			<p class="body">Some <a id="_idIndexMarker4235"></a><a id="_idIndexMarker4236"></a>content management systems have image-resizing features built in. Another option is to install software or an open source script (like <a id="_idIndexMarker4237"></a>Glide, <a href="http://glide.thephpleague.com"><span class="URL-Email">glide.thephpleague.com</span></a>) on your own server. Bear in mind, however, that requiring JavaScript to be running is less than ideal. There are also third-party solutions that provide image-resizing services (<a id="_idIndexMarker4238"></a><a id="_idIndexMarker4239"></a><a id="_idIndexMarker4240"></a>like <a href="http://Cloudinary.com"><span class="URL-Email">Cloudinary.com</span></a>, <a href="http://Akamai.com"><span class="URL-Email">Akamai.com</span></a>, or <a href="http://Kraken.io"><span class="URL-Email">Kraken.io</span></a>), for a fee. For large, image-heavy sites, they are worth looking into. </p>
			<p class="body">For more information, read “Image Resizing Services” by <a id="_idIndexMarker4241"></a>Jason Grigsby of Cloud Four (<a href="http://cloudfour.com/thinks/image-resizing-services/"><span class="URL-Email">cloudfour.com/thinks/image-resizing-services/</span></a>). He maintains a list of current image services, which you can find linked from the article.</p>
			<h3 class="HeadC">No, I can handle images manually</h3>
			<p class="body">If your site has a reasonable number of images that are updated on a reasonable schedule, you should be able to produce them by hand on your computer and upload them to the server. The good news is that there’s a whole slew of new tools designed especially to support the web image asset production process, including ways to create several versions at once and to optimize them in batches. Even our old standby, Adobe Photoshop, is evolving to better support the needs of web image producers. We’ll look at these tools in the following chapter.</p>
			<h1 id="_idParaDest-213" class="HeadA"><a id="_idTextAnchor298"></a>Favicons</h1>
			<p class="body">As long as we’re <a id="_idIndexMarker4242"></a><a id="_idIndexMarker4243"></a><a id="_idIndexMarker4244"></a>talking about images, there is one last site-related image to cover: the favicon. A <span class="FirstTerm">favicon</span> is the little icon that shows up to the left of the page title in the browser tab and in bookmark lists (<span class="Xref-Figure">Figure 23-18</span>). First introduced as an Internet Explorer 5 feature in 1999, favicons were quickly adopted by other browsers. Favicons aren’t required, but they do help users identify and find your site in a long lineup of tabs or bookmarks. They’re a little attention to detail that can strengthen your brand.</p>
			<div>
				<figure id="_idContainer1497" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2318_favicons.png" alt="" width="1863" height="220"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-18.</span> Favicons for Adobe.com, W3C.org, and Firefox.com in browser tabs (shown in Firefox).</figcaption>
				</figure>
			</div>
			<p class="body">Other web-enabled devices use site-associated icons that are similar to favicons. For example, Apple iPhone and iPad represent sites or web apps with an icon (called a <span class="FirstTerm">touch icon</span>) when you save them to the home screen. Site icons are also used by Microsoft Metro tiles, GoogleTV, and other systems.</p>
			<p class="body">This section introduces what it takes to create a basic desktop favicon as well as a full icon set that covers all the bases. We’ll also look at one tool that does all the repetitive work for you. </p>
			<h2 class="HeadB">Old-Fashioned <a id="_idIndexMarker4245"></a>Browser Favicons</h2>
			<p class="body">For desktop browsers, the standard favicon process is easy:</p>
			<ol>
				<li class="ListNumber">Save your icon in ICO format and name it <span class="Filename">favicon.ico.</span></li>
				<li class="ListNumber">Put that file in the root directory of the site, where browsers know to look for it.</li>
				<li class="ListNumber">There is no third step. That’s it! </li>
			</ol>
			<p class="body">This is the method that is supported by the most browsers, and the <em class="Emphasis">only</em> favicon method supported by Internet Explorer 10 and earlier. </p>
			<p class="body">There are a few important things to know about the <span class="Filename">favicon.ico</span> file itself. Favicons should be created at 16 × 16 pixels with an additional 32 × 32 pixel version for crisp display on Retina display devices. The good news is that you need only one <span class="Filename">favicon.ico</span> file because the ICO format is capable of storing multiple images in a single file. The bad news is that most graphics tools, including Adobe Photoshop, can’t save images in ICO format, so you need to use a conversion tool that takes in PNG or JPEG and spits out ICO. There are several free drag-and-drop ICO converters online, such as <a href="http://icoconverter.com"><span class="URL-Email">icoconverter.com</span></a> and <a href="http://convertico.com"><span class="URL-Email">convertico.com</span></a>. If you are on a Mac and want a more full-featured conversion tool, check out <a id="_idIndexMarker4246"></a>Icon Slate by Kodlian (<a href="http://www.kodlian.com/apps/icon-slate"><span class="URL-Email">www.kodlian.com/apps/icon-slate</span></a>) available in the App Store for US$5.</p>
			<p class="body">As mentioned previously, once you have your <span class="Filename">favicon.ico</span> file, just place it in the root directory for the site alongside <span class="Filename">index.html</span>, and the browser will find it automatically. There is no need to add any markup in the files.</p>
			<h2 class="HeadB">Full Favicon Set</h2>
			<p class="body">You may decide to go the extra mile and create a complete favicon set to represent your site on other devices. You can save these icons in good old <a id="_idIndexMarker4247"></a>PNG format and even include transparent areas, so it’s a more familiar process.</p>
			<p class="body">When your icons are in PNG format, you must link them to your files with the <span class="Literal-fc">link</span> element in the markup, as in this example that adds a touch icon for the iPhone with a Retina screen (see the sidebar <span class="Xref">“iOS Icon Effects”</span>):</p>
			<pre class="CodeFirst">&lt;link rel="apple-touch-icon-precomposed" sizes="120x120" href="apple-touch-icon-120x120.png"&gt;</pre>
			<div>
				<div id="_idContainer1498" class="sidebar">
					<h5 class="SidebarTitle">iOS Icon Effects</h5>
					<p class="SidebarBody">By default, iOS adds visual effects to your icon file so it matches the style of other icons on the home screen: </p>
					<ul>
						<li class="SidebarListBullet">Rounded corners</li>
						<li class="SidebarListBullet">Drop shadow</li>
						<li class="SidebarListBullet">A “shiny” reflection effect </li>
					</ul>
					<p class="SidebarBody">If you like your icon just as it is and want to turn the special effects off, tell iOS that the icon is “precomposed” by setting the value of<a id="_idIndexMarker4248"></a><a id="_idIndexMarker4249"></a> <span class="Literal-Sidebar">rel</span> to <span class="Literal-Sidebar">apple-touch-icon-precomposed</span> as shown in the example. If you’d like to take advantage of those effects, set <span class="Literal-Sidebar">rel</span> to simply <span class="Literal-Sidebar">apple-touch-icon</span>.</p>
				</div>
			</div>
			<p class="body"><span class="Xref-Figure">Table 23-2</span> lists most of the standard icon sizes as of this writing. </p>
			<table id="table002-13" class="Table">
				<colgroup>
					<col/>
					<col/>
				</colgroup>
				<thead>
					<tr class="Table">
						<td class="Table Remove-bottom-rule Table-Head" colspan="2">
							<p class="TableTitle"><span class="Table-Label"><span class="FigureLabel">Table 23-2.</span></span> Most popular standard favicon sizes</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Head Table-Head">
							<p class="TableHeader">Size (in pixels)</p>
						</td>
						<td class="Table Table-Head Table-Head">
							<p class="TableHeader">Purpose</p>
						</td>
					</tr>
				</thead>
				<tbody>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">32 <span lang="ar-SA" xml:lang="ar-SA">× </span>32</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">Standard for most desktop browsers</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">57 <span lang="ar-SA" xml:lang="ar-SA">× </span>57</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">Standard iOS screen (iPod Touch, iPhone first generation)</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">76 <span lang="ar-SA" xml:lang="ar-SA">× </span>76</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">iPad home screen icon</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">96 <span lang="ar-SA" xml:lang="ar-SA">× </span>96</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">GoogleTV icon</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">120 <span lang="ar-SA" xml:lang="ar-SA">× </span>120</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">iPhone Retina </p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">128 <span lang="ar-SA" xml:lang="ar-SA">× </span>128</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">Chrome web store</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">144 <span lang="ar-SA" xml:lang="ar-SA">× </span>144</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">IE10 Metro tile for pinned site</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">152 <span lang="ar-SA" xml:lang="ar-SA">× </span>152</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">iPad touch icon; Android icon (auto-downscaled as needed)</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">167 <span lang="ar-SA" xml:lang="ar-SA">× </span>167</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">iPad Retina touch icon</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">180 <span lang="ar-SA" xml:lang="ar-SA">× </span>180</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">iPhone 6 plus</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">196 <span lang="ar-SA" xml:lang="ar-SA">× </span>196</p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">Chrome for Android home screen</p>
						</td>
					</tr>
					<tr class="Table">
						<td class="Table Table-Body-Left">
							<p class="body">228 <span lang="ar-SA" xml:lang="ar-SA">× </span>228 </p>
						</td>
						<td class="Table Table-Body-Right">
							<p class="body">Opera Coast icon</p>
						</td>
					</tr>
				</tbody>
			</table>
			<div>
				<div id="_idContainer1499" class="sidebar">
					<h5 class="SidebarSeries">Cool Tool</h5>
					<p class="SidebarBody">If you want to use just the initial letter of your site’s name as a favicon, <a href="http://Favicon.io"><span class="URL-Email--Sidebar-">Favicon.io</span></a> is a neat online tool that generates icons based on your character, font, and color selections. </p>
				</div>
			</div>
			<h2 class="HeadB">Icon Creation</h2>
			<p class="body">For ultimate control <a id="_idIndexMarker4250"></a>over icon quality, it’s best to create your icons by hand. Everyone has their own process, but it is generally recommended to start with a vector-based original and export to the required sizes. If you start with a bitmapped image, scale down in increments and check the quality at each step. </p>
			<p class="body">For very small icons (32- and especially 16-pixel square), you’ll likely need to do some pixel-by-pixel fine-tuning to get the best result. If your logo is complicated, consider using just a distinctive detail as O’Reilly Media does (<span class="Xref-Figure">Figure 23-19</span>).</p>
			<div>
				<figure id="_idContainer1501" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2319_detail.png" alt="" width="544" height="160"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-19.</span> O’Reilly Media uses a detail from their logo in their favicon.</figcaption>
				</figure>
			</div>
			<p class="body">For excellent how-to advice on creating icons in general, I heartily recommend <span class="Citation">The Icon Handbook </span>(Five Simple Steps), by icon expert <a id="_idIndexMarker4251"></a>John Hicks. John shares his tricks for effective icon design and how to maintain the best quality at small sizes.</p>
			<p class="body">If manually creating all your icons feels like a burden, an easier option is to use a favicon generator that creates all the icons from one original and generates all of the required code as well. There are a few of them out there, but one I like is <a id="_idIndexMarker4252"></a>Favic-o-matic (<a href="http://www.favicomatic.com"><span class="URL-Email">www.favicomatic.com</span></a>) shown in <span class="Xref-Figure">Figure 23-20</span>. Just upload one PNG larger than 300px square, and the tool does the rest.</p>
			<div>
				<figure id="_idContainer1503" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2320_favicomatic.png" alt="" width="1338" height="679"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-20.</span> The Favic-o-matic favicon and code generator.</figcaption>
				</figure>
			</div>
			<div>
				<div id="_idContainer1504" class="sidebar">
					<h5 class="SidebarSeries">Further Reading</h5>
					<p class="SidebarBody">With a PNG-to-ICO converter and favicon generator tool, you now have a basic toolkit for creating complete favicon sets. However, you may want to read up on the finer details that I was not able to include here. The following are a few resources that I found to be helpful:</p>
					<ul>
						<li class="SidebarListBullet">“The 2017 Guide to FavIcons for Nearly Everyone and Everyone and Every Browser,” from <a id="_idIndexMarker4253"></a>Emerge Interactive (<a href="http://www.emergeinteractive.com/insights/detail/The-Essentials-of-FavIcons-in-2017"><span class="URL-Email--Sidebar-">www.emergeinteractive.com/insights/detail/The-Essentials-of-FavIcons-in-2017</span></a>)</li>
						<li class="SidebarListBullet">“How to Make a Favicon” by <a id="_idIndexMarker4254"></a>Nick Pettit at Treehouse (<a href="http://blog.teamtreehouse.com/how-to-make-a-favicon"><span class="URL-Email--Sidebar-">blog.teamtreehouse.com/how-to-make-a-favicon</span></a>)</li>
						<li class="SidebarListBullet">The Favicon entry on Wikipedia (<a href="http://en.wikipedia.org/wiki/Favicon"><span class="URL-Email--Sidebar-">en.wikipedia.org/wiki/Favicon</span></a>)</li>
					</ul>
				</div>
			</div>
			<h1 id="_idParaDest-214" class="HeadA"><a id="_idTextAnchor299"></a>Summing Up Images</h1>
			<p class="body">We’ve covered a lot of ground in this chapter. If I’ve done my job, you should now have a good foundation in web graphics, including where to find an image and what file format to save it in. You know about image resolution and screen resolution, including working with high-density displays. You also have a strategy for identifying your image requirements in order to whittle down the wide array of options. And of course, you know what it takes to add a favicon to your site.</p>
			<p class="body">In the next chapter, you’ll get hands-on experience creating and optimizing web images as we explore the particulars of the production process. But first, a little quiz. </p>
			<h1 id="_idParaDest-215" class="HeadA"><a id="_idTextAnchor300"></a>Test Yourself </h1>
			<p class="body">Answer the following questions to see if you got the big picture on web graphics. The answers appear in <a href="lwd5_appendixA.xhtml#_idTextAnchor325"><span class="Xref">Appendix </span><span class="Xref">A</span></a>.</p>
			<ol>
				<li class="ListNumber" value="1">What is the primary advantage to using rights-managed images?</li>
				<li class="ListNumber">What does “ppi” stand for?</li>
				<li class="ListNumber">What is “indexed color”? What file formats use it?</li>
				<li class="ListNumber">How many colors are in the color table for an 8-bit image? If you are up for a bit of math, figure out the maximum number of colors in a 5-bit image.</li>
				<li class="ListNumber">Name two things you can do with a GIF that you can’t do with a JPEG. </li>
				<li class="ListNumber">Name one thing you can do with a GIF that you can’t do with a PNG.</li>
				<li class="ListNumber">Name one thing you can do with a PNG that you can’t do with a GIF.</li>
				<li class="ListNumber">JPEG’s lossy compression is cumulative. What does that mean? Why is it important to know?</li>
				<li class="ListNumber">What is the difference between binary and alpha transparency? </li>
				<li class="ListNumber">Pick the best bitmap file format for each of the images in <span class="Xref-Figure">Figure 23-21</span>. You should be able to make the decision just by looking at the images as they’re printed here and explain your choice. Some images may have more than one option.</li>
			</ol>
			<div>
				<figure id="_idContainer1506" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_2321_test.png" alt="" width="1338" height="1158"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 23-21.</span> Choose the best file format for each image.</figcaption>
				</figure>
			</div>
		</div>
	</div>
</div>
</body>
</html>