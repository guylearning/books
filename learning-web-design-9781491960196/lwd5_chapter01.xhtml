<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Learning Web Design, 5th Edition</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="css/lwd5e.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><div id="_idContainer009" class="ch01">
			<p id="_idParaDest-3" class="Epub-TOC-Part-Title"><strong class="Emphasis_Bold"><a id="_idTextAnchor008"></a>Part </strong><strong class="Emphasis_Bold">I</strong><strong class="Emphasis_Bold">.</strong> Getting Started</p>
		</div>
		<div id="_idContainer010" class="ch01">
			<h1 class="partLabel"><a id="_idTextAnchor009"></a>I</h1>
		</div>
		<div id="_idContainer011" class="ch01">
			<h1 class="partTitle"><a id="_idTextAnchor010"></a>Getting Started</h1>
		</div>
		<div id="_idContainer012" class="ch01">
			<p id="_idParaDest-4" class="Epub-TOC-Chapter-Title"><a id="_idTextAnchor011"></a>1. Getting Started in Web Design</p>
		</div>
		<div id="_idContainer013" class="ch01">
			<h1 class="chapterLabel">1</h1>
		</div>
		<div id="_idContainer014" class="ch01">
			<h1 class="chapterTitle"><a id="_idTextAnchor012"></a>Getting Started in Web Design</h1>
		</div>
		<div id="_idContainer015" class="chapTOCFrame" epub:type="toc">
			<p class="ChapterContentsTitle">In this Chapter</p>
			<p class="chapterContents">Content-related disciplines</p>
			<p class="chapterContents">Design specialties</p>
			<p class="chapterContents">Frontend development</p>
			<p class="chapterContents">Backend development</p>
			<p class="chapterContents">Recommended equipment</p>
			<p class="chapterContents">Web-related software</p>
		</div>
		<div id="_idContainer046" class="ch01">
			<p class="body">The web has been around for more than 25 years now, experiencing euphoric early expansion, an economic-driven bust, an innovation-driven rebirth, and constant evolution along the way. One thing is certain: the web as a communication and commercial medium is here to stay. Not only that, it has found its way onto devices such as smartphones, tablets, TVs, and more. There have never been more opportunities to put web design know-how to use.</p>
			<p class="body">Through my experience teaching web design courses and workshops, I’ve had the opportunity to meet people of all backgrounds who are interested in learning how to build web pages. Allow me to introduce you to just a few:</p>
			<blockquote class="Quote">“I’ve been a print designer for 17 years, and now I am feeling pressure to provide web design services.”</blockquote>
			<blockquote class="Quote">“I’ve been a programmer for years, but I want shift my skills to web development because there are good job opportunities in my area.”</blockquote>
			<blockquote class="Quote">“I tinkered with web pages in high school and I think it might be something I’d like to do for a living.”</blockquote>
			<blockquote class="Quote">“I’ve made a few sites using themes in WordPress, but I’d like to expand my skills and create custom sites for small businesses.”</blockquote>
			<p class="body">Whatever the motivation, the first question is always the same: “Where do I start?” It may seem like there is a mountain of stuff to learn, and it’s not easy to know where to jump in. But you have to start somewhere.</p>
			<p class="body">This chapter provides an overview of the profession before we leap into building sites. It begins with an introduction to the roles and responsibilities associated with creating websites, so you can consider which role is right for you. I will also give you a heads-up on the equipment and software you will be likely to use—in other words, the tools of the trade.</p>
			<h1 id="_idParaDest-5" class="HeadA"><a id="_idTextAnchor013"></a>Where Do I Start?</h1>
			<p class="body">Maybe you are reading this book as part of a full course on web design and development. Maybe you bought it to expand your current skill set on your own. Maybe you just picked it up out of curiosity. Whatever the case, this book is a good place to start learning what makes the web tick.</p>
			<p class="body">There are many levels of involvement in web design, from building a small site for yourself to making it a full-blown career. You may enjoy being a “full-stack” web developer or just specializing in one skill. There are a lot of ways you can go.</p>
			<p class="body">If you are interested in pursuing web design or production as a career, you’ll need to bring your skills up to a professional level. Employers may not require a web design degree, but they will expect to see working sample sites that demonstrate your skills and experience. These sites can be the result of class assignments, personal projects, or a site for a small business or organization. What’s important is that they look professional and have well-written, clean HTML; style sheets; and scripts behind the scenes.</p>
			<p class="body">If your involvement is at a smaller scale—say you just have a site or two you’d like to publish—you may find using a template on an online website service is a great head start (see the sidebar <span class="Xref">“I Just Want My Own Site”</span>). Most allow you to tweak the underlying code, so what you learn in this book will help you customize the template to your liking.</p>
			<div>
				<div id="_idContainer016" class="sbMargin">
					<h5 class="SidebarTitle">I Just Want My Own Site</h5>
					<p class="SidebarBody">You don’t necessarily need to become a web designer or developer to start publishing on the web. There are many website hosting services that provide templates and drag-and-drop interfaces that make it easy to build a site without any code know-how. They can be used for anything from full-service ecommerce solutions to small, personal sites (although some services are better suited to one more than the other).</p>
					<p class="SidebarBody">Here are a few of the most popular site building services <a id="_idIndexMarker000"></a><a id="_idIndexMarker001"></a><a id="_idIndexMarker002"></a><a id="_idIndexMarker003"></a><a id="_idIndexMarker004"></a>as of this writing:</p>
					<ul>
						<li class="SidebarListBullet">WordPress (<a href="http://www.wordpress.com"><span class="URL-Email--Sidebar-">www.wordpress.com</span></a>)</li>
						<li class="SidebarListBullet">Squarespace (<a href="http://squarespace.com"><span class="URL-Email--Sidebar-">squarespace.com</span></a>)</li>
						<li class="SidebarListBullet">Wix (<a href="http://wix.com"><span class="URL-Email--Sidebar-">wix.com</span></a>)</li>
						<li class="SidebarListBullet">SiteBuilder (<a href="http://sitebuilder.com"><span class="URL-Email--Sidebar-">sitebuilder.com</span></a>)</li>
						<li class="SidebarListBullet">Weebly (<a href="http://weebly.com"><span class="URL-Email--Sidebar-">weebly.com</span></a>)</li>
					</ul>
					<p class="SidebarBody">There are many similar services available, so it’s worth searching the web to find one that’s right for you.</p>
				</div>
			</div>
			<h1 id="_idParaDest-6" class="HeadA"><a id="_idTextAnchor014"></a>It Takes a Village (Website Creation Roles)</h1>
			<p class="body">When I <a id="_idIndexMarker005"></a><a id="_idIndexMarker006"></a><a id="_idIndexMarker007"></a>look at a site, I see the multitude of decisions and areas of expertise that went into building it. Sites are more than just code and pictures. They often begin with a business plan or other defined mission. Before they launch, the content must be created and organized, research is performed, design from the broadest goals to finest details must happen, code gets written, and everything must be coordinated with what’s happening on the server to bring it to fruition.</p>
			<p class="body">Big, well-known sites are created by teams of dozens, hundreds, or even thousands of contributors. There are also sites that are created and maintained by a team with only a handful of members. It is also absolutely possible to create a respectable site with a team of only yourself. That’s the beauty of the web.</p>
			<p class="body">In this section, I’ll introduce you to the various disciplines that contribute to the creation of a site, including roles related to content, design, and code. You may end up specializing in just one area of expertise, working as part of a team of specialists. If you are designing sites on your own, you will need to wear many hats. Consider that the day-to-day upkeep of your household requires you to be part-time chef, housecleaner, accountant, diplomat, gardener, and construction worker—but to you it’s just the stuff you do around the house. As a solo designer, you’ll handle many web-related disciplines, but it will just feel like the stuff you do to make a website.</p>
			<h2 class="HeadB">Content Wrangling</h2>
			<p class="body">Anyone who uses the title “web designer” needs to be aware that everything we do supports the process of getting the content, message, or functionality to our users. Furthermore, good writing can help the user interfaces we create be more effective, from button labels to error messages.</p>
			<p class="body">Of course, someone needs to create all that content and maintain it—don’t underestimate the resources required to do this successfully. Good writers and editors are an important part of the team. In addition, I want to call your attention to two content-related specialists in modern web development: the Information Architect (IA) and the Content Strategist.</p>
			<h3 class="HeadC">Information architecture</h3>
			<p class="body">An <span class="FirstTerm">Information Architect</span> (also <a id="_idIndexMarker008"></a><a id="_idIndexMarker009"></a>called an <span class="FirstTerm">Information Designer</span>) organizes the content logically and for ease of findability. They may be responsible for search functionality, site diagrams, and how the content and data are organized on the server. Information architecture is inevitably entwined with UX and UI design (defined shortly) as well as content management. If you like organizing or are <em class="Emphasis">gaga</em> for taxonomies, information architecture may be the job for you. The definitive text for this field as it relates to the web is <span class="Citation">Information Architecture: For the Web and Beyond</span>, by Louis Rosenfeld and Peter Morville (O’Reilly).</p>
			<h3 class="HeadC">Content strategy</h3>
			<p class="body">When the content isn’t right, the site can’t be fully <a id="_idIndexMarker010"></a>effective. A <span class="FirstTerm">Content Strategist</span> makes sure that every bit of text on a site, from long explanatory text down to the labels on buttons, supports the brand identity and marketing goals of the organization. Content strategy may also extend to data modeling and content management on a large and ongoing scale, such as planning for content reuse and update schedules. Their responsibilities may also include how the organization’s voice is represented on social media. A good place to learn more is the book <span class="Citation">Content Strategy for the Web, 2nd Edition,</span> by Kristina <a id="_idIndexMarker011"></a><a id="_idIndexMarker012"></a>Halvorson and Melissa Rich (New Riders).</p>
			<h2 class="HeadB">All Manner of Design</h2>
			<p class="body">Ah, <em class="Emphasis">design</em>! It sounds fairly straightforward, but even this simple requirement has been divided into a number of specializations when it comes to creating sites. Here are a few of the job descriptions related to designing a site, but bear in mind that the disciplines often overlap and that the person calling herself the “designer” often is responsible for more than one (if not all) of these responsibilities.</p>
			<h3 class="HeadC">User Experience, Interaction, and User Interface design</h3>
			<p class="body">Often, when we think of design, we think about how something looks. On the web, the first matter of business is designing how the site <em class="Emphasis">works</em>. Before you pick colors and fonts, it is important to identify the site’s goals, how it will be used, and how visitors move through it. These tasks fall under the disciplines <a id="_idIndexMarker013"></a><a id="_idIndexMarker014"></a><a id="_idIndexMarker015"></a><a id="_idIndexMarker016"></a><a id="_idIndexMarker017"></a><a id="_idIndexMarker018"></a>of <span class="FirstTerm">User Experience </span>(<span class="FirstTerm">UX</span>)<span class="FirstTerm"> design</span>, <span class="FirstTerm">Interaction Design </span>(<span class="FirstTerm">IxD</span>), and <span class="FirstTerm">User Interface </span>(<span class="FirstTerm">UI</span>)<span class="FirstTerm"> design</span>. There is a lot of overlap between these responsibilities, and it is not uncommon for one person or team to handle all three.</p>
			<p class="body">The User Experience designer takes a holistic view of the design process—ensuring the entire experience with the site is favorable. UX design is based on a solid understanding of users and their needs based on observations and interviews. According to <a id="_idIndexMarker019"></a>Donald Norman (who coined the term), UX design includes “all aspects of the user’s interaction with the product: how it is perceived, learned, and used.” For a website or application, that includes the visual design, the user interface, the quality and message of the content, and even the overall site performance. The experience must be in line with the organization’s brand and business goals in order to be successful.</p>
			<p class="body">The goal of the <span class="FirstTerm">Interaction Designer</span> is to make the site as easy, efficient, and delightful to use as possible. Closely related to interaction design is <span class="FirstTerm">User Interface</span> design, which tends to be more narrowly focused on the functional organization of the page as well as the specific tools (buttons, links, menus, and so on) that users use to navigate content or accomplish tasks.</p>
			<p class="body">The following are deliverables that UX, UI, or interaction designers produce:</p>
			<p class="ListVariableTerm">User research and testing reports</p>
			<p class="ListVariable">Understanding the needs, desires, and limitations of users is central to the success of the design of the site or web application. The approach of designing around the user’s needs is referred to <a id="_idIndexMarker020"></a><a id="_idIndexMarker021"></a>as <span class="FirstTerm">User-Centered Design</span> (<span class="FirstTerm">UCD</span>), and it is central to contemporary web design. Site designs often begin with user research, including interviews and observations, in order to gain a better understanding of how the site can solve problems or how it will be used. It is typical for designers to do a round of user testing at each phase of the design process to ensure the usability of their designs. If users are having a hard time figuring out where to find content or how to move to the next step in a process, then it’s back to the drawing board.</p>
			<p class="ListVariableTerm">Wireframe diagrams</p>
			<p class="ListVariable">A wireframe <a id="_idIndexMarker022"></a>diagram shows the structure of a web page using only outlines for each content type and widget (<span class="Xref-Figure">Figure 1-1</span>). The purpose of a wireframe diagram is to indicate how the screen real estate is divided and where functionality and content such as navigation, search boxes, form elements, and so on, are placed. Colors, fonts, and other visual identity elements are deliberately omitted so as not to distract from the structure of the page. These diagrams are usually annotated with instructions for how things should work so the development team knows what to build.</p>
			<div>
				<figure id="_idContainer018" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0101_wireframe.png" alt="" width="1338" height="892"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-1.</span> Wireframe diagram.</figcaption>
				</figure>
			</div>
			<p class="ListVariableTerm">Site diagram</p>
			<p class="ListVariable">A site <a id="_idIndexMarker023"></a>diagram indicates the structure of the site as a whole and how individual pages relate to one another. <span class="Xref-Figure">Figure 1-2</span> shows a very simple site diagram. Some site diagrams fill entire walls!</p>
			<div>
				<figure id="_idContainer020" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0102_sitemap.png" alt="" width="1337" height="825"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-2.</span> A simple site diagram.</figcaption>
				</figure>
			</div>
			<p class="ListVariableTerm">Storyboards and user flow charts</p>
			<p class="ListVariable">A storyboard<a id="_idIndexMarker024"></a> traces the path through a site or application from the point of view of a typical user (a <span class="FirstTerm">persona</span> in <a id="_idIndexMarker025"></a>UX lingo). It usually includes a script and “scenes” consisting of screen views or the user interacting with the screen. The storyboard aims to demonstrate the steps it takes to accomplish tasks, outlines possible options, and also introduces some standard page types. <span class="Xref-Figure">Figure 1-3</span> shows a simple storyboard. A user flow chart is another method for showing how the parts of a site or application are connected, but it tends to focus on technical details rather than telling a story. For example, “when the user does <em class="Emphasis">this</em>, it triggers <em class="Emphasis">that</em> function on the server.” It is common for designers to create a user flow chart for the steps in a process such as member registration or online payments.</p>
			<div>
				<figure id="_idContainer022" class="figWCaption">
					<p class="Figure_Holder"> <img src="image/lwd5_0103_storyboard.png" alt="" width="1326" height="907"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-3.</span> A typical storyboard (courtesy of Adaptive Path and Brandon Schauer).</figcaption>
				</figure>
			</div>
			<p class="body">There are many books on UX, interaction, and UI design, but these are a few of the classics to get you started:</p>
			<ul>
				<li class="ListBullet"><span class="Citation">The Elements of User Experience: User-Centered Design for the Web and Beyond</span> by <a id="_idIndexMarker026"></a>Jesse James Garrett (New Riders)</li>
				<li class="ListBullet"><span class="Citation">Don’t Make Me Think, Revisited: A Common Sense Approach to Web Usability</span> by <a id="_idIndexMarker027"></a>Steve Krug (New Riders)</li>
				<li class="ListBullet"><span class="Citation">The Design of Everyday Things</span> by <a id="_idIndexMarker028"></a>Don Norman (Basic Books)</li>
				<li class="ListBullet"><span class="Citation">About Face: The Essentials of Interaction Design, 4th Edition</span> by <a id="_idIndexMarker029"></a><a id="_idIndexMarker030"></a><a id="_idIndexMarker031"></a><a id="_idIndexMarker032"></a>Alan Cooper, Robert Reimann, David Cronin, and Christopher Noessel (Wiley)</li>
				<li class="ListBullet"><span class="Citation">Designing Interfaces, 2nd</span><span class="Citation"> Edition</span> by <a id="_idIndexMarker033"></a>Jenifer Tidwell (O’Reilly)</li>
				<li class="ListBullet"><span class="Citation">100 Things Every Designer Needs to Know about People </span>by <a id="_idIndexMarker034"></a>Susan Weinschenk (New Riders)</li>
				<li class="ListBullet"><span class="Citation">Designing User Experience: A Guide to HCI, UX and Interaction Design </span>by David <a id="_idIndexMarker035"></a>Benyon (Pearson)</li>
			</ul>
			<h3 class="HeadC">Visual (graphic) design</h3>
			<p class="body">Because <a id="_idIndexMarker036"></a><a id="_idIndexMarker037"></a><a id="_idIndexMarker038"></a>the web is a visual medium, web pages require attention to their visual presentation. First impressions are everything. A graphic designer creates <a id="_idIndexMarker039"></a>the “look and feel” of the site—logos, graphics, type, colors, layout, and so on—to ensure that the site makes a good first impression and is consistent with the brand and message of the organization it represents.</p>
			<p class="body">There are many methods and deliverables that can be used to present a visual design to clients and stakeholders. The most traditional are sketches or <span class="FirstTerm">mockups</span> (created in Photoshop or a similar tool) of the way the site might look, such as the home page mockups shown in <span class="Xref-Figure">Figure 1-4</span>.</p>
			<div>
				<figure id="_idContainer024" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0104_mockups-ebook.png" alt="" width="1337" height="805"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-4.</span> Look-and-feel sketches (mockups) for a simple site.</figcaption>
				</figure>
			</div>
			<p class="body">Now that sites appear on screens of all sizes, many designers prefer to discuss the visual identity (colors, fonts, image style, etc.) in a way that isn’t tied to a specific layout like the typical desktop view shown in <span class="Xref-Figure">Figure 1-4</span>. The idea is to agree upon a visual language for the site before production begins.</p>
			<p class="body">One option for separating style from screen size is to <a id="_idIndexMarker040"></a>use <span class="FirstTerm">style tiles</span>, a technique introduced by <a id="_idIndexMarker041"></a>Samantha Warren (see <span class="Xref">Note</span>). Style tiles include examples of color schemes, branding elements, UI treatments, text treatment, and mood (<span class="Xref-Figure">Figure 1-5</span>). Once the details are decided upon, they can be implemented into working prototypes and the final site. For more on this technique, visit Samantha’s excellent site, <a href="http://www.styletil.es"><span class="URL-Email">styletil.es</span></a>, where you can download a template.</p>
			<div>
				<figure id="_idContainer026" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0105_styletile_wide.png" alt="" width="2025" height="519"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-5.</span> Style tile technique introduced by Samantha Warren.</figcaption>
				</figure>
			</div>
			<div>
				<div id="_idContainer027" class="note">
					<h5 class="noteHeader">NOTE</h5>
					<p class="note">Designer <a id="_idIndexMarker042"></a><a id="_idIndexMarker043"></a>Dan Mall uses a similar approach that he calls “element collages.” An <span class="FirstTerm--Sidebar-">element collage</span> is a collection of design elements that give the site its unique look and feel, but like style tiles, is not tied to a particular screen layout. Read his article at <a href="http://v3.danielmall.com/articles/rif-element-collages/"><span class="URL-Email--Sidebar-">v3.danielmall.com/articles/rif-element-collages/</span></a>.</p>
				</div>
			</div>
			<p class="body">Graphic designers may also be responsible for producing the <a id="_idIndexMarker044"></a>image assets for the site. They will need to know how to <a id="_idIndexMarker045"></a><a id="_idIndexMarker046"></a><a id="_idIndexMarker047"></a>optimize images for the fastest delivery and how to address the requirements of varying screen sizes. It is also common for the development team to handle image optimization, but I think it is a skill every visual designer should have. We’ll discuss image optimization in <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span><span class="Xref">, Image Asset Production</span></a>.</p>
			<p class="body">Designers may also be responsible for creating a style guide that documents style choices, such as fonts, colors, and other style embellishments, in order to keep the site consistent over time. For a list of examples, articles, books, and podcasts about web style guides, visit the “Website Style Guide Resources” page at <a href="http://www.styleguides.io"><span class="URL-Email">styleguides.io</span></a>.</p>
			<div>
				<div id="_idContainer028" class="sidebar">
					<h5 class="SidebarTitle">Do Designers Need to Learn to Code?</h5>
					<p class="SidebarBody">In short, yes. A basic familiarity with <a id="_idIndexMarker048"></a><a id="_idIndexMarker049"></a>HTML and CSS is now a requirement of anybody joining a web design team. You may not be responsible for creating the final production code for the site, but as HTML and CSS are the native languages of your medium, you need to know your way around them. Some designers also learn JavaScript, but others draw the line there and let a developer handle the programming.</p>
					<p class="SidebarBody">Code is becoming more central to the visual designer’s workflow. Where once Photoshop was all you needed to mock up web page designs to send them to production, mockups fixed to a particular size fall short of describing a page that needs to flex to a wide range of screen sizes. For that reason, designers are building their own working prototypes as deliverables that communicate how the design will look and behave in users’ hands. </p>
				</div>
			</div>
			<h2 class="HeadB">Code Slinging</h2>
			<p class="body">A large <a id="_idIndexMarker050"></a><a id="_idIndexMarker051"></a>share of the website building process involves creating and troubleshooting the documents, style sheets, scripts, and images that make up a site. At web design firms, the team that handles the creation of the files that make up the site (or templates for pages that get assembled dynamically) is usually called the <span class="FirstTerm">development</span> or <span class="FirstTerm">production</span> department.</p>
			<p class="body">Development falls under two broad categories: <span class="FirstTerm">frontend development</span> and <span class="FirstTerm">backend development</span>. <a id="_idIndexMarker052"></a>Once again, these tasks may fall to specialists, but it is just as common for one person or team to handle both responsibilities.</p>
			<h3 class="HeadC">Frontend development</h3>
			<div>
				<div id="_idContainer029" class="sbMargin">
					<h5 class="SidebarSeries">AT A GLANCE</h5>
					<h5 class="SidebarTitle">Frontend Development</h5>
					<p class="SidebarBody">Frontend development includes the following web <a id="_idIndexMarker053"></a><a id="_idIndexMarker054"></a>technologies:</p>
					<ul>
						<li class="SidebarListBullet">HyperText Markup Language (HTML)</li>
						<li class="SidebarListBullet">Cascading Style Sheets (CSS)</li>
						<li class="SidebarListBullet">JavaScript and DOM scripting, including AJAX and JavaScript-based frameworks</li>
					</ul>
				</div>
			</div>
			<p class="body"><span class="FirstTerm">Frontend</span> refers to any<a id="_idIndexMarker055"></a> <a id="_idIndexMarker056"></a>aspect of the design process that appears in or relates directly to the browser. That includes HTML, CSS, and JavaScript, all of which you will need to have <em class="Emphasis">intricate</em> knowledge of if you want a job as a web developer. Let’s take a quick look at each.</p>
			<h4 class="HeadD">Authoring/markup (HTML)</h4>
			<p class="body"><span class="FirstTerm">Authoring</span> is the process <a id="_idIndexMarker057"></a>of preparing content for delivery on the web, or more specifically, <a id="_idIndexMarker058"></a>marking up the content with HTML tags that describe its content and function.</p>
			<p class="body">HTML (HyperText Markup Language) is the<a id="_idIndexMarker059"></a> authoring language used to create web page documents. The current version (and the version documented in this book) is HTML 5.2. <a href="lwd5_appendixD.xhtml#_idTextAnchor336"><span class="Xref">Appendix </span><span class="Xref">D</span><span class="Xref">, From HTML+ to HTML5</span></a>, tells the history of HTML and lists what makes HTML5 unique.</p>
			<p class="body">HTML is not a programming language; it is a <span class="FirstTerm">markup language</span>, which means it is a system for identifying and describing the various components of a document such as headings, paragraphs, and lists. The markup indicates the document’s <a id="_idIndexMarker060"></a><a id="_idIndexMarker061"></a>underlying <span class="FirstTerm">structure</span> (you can think of it as a detailed, machine-readable outline). You don’t need programming skills—only patience and common sense—to write HTML.</p>
			<p class="body">The best way to learn HTML is to write out some pages by hand, as we will be doing in the exercises in <a href="lwd5_chapter04.xhtml#_idTextAnchor041"><span class="Xref">Part II</span></a> of this book.</p>
			<h4 class="HeadD">Styling (CSS)</h4>
			<p class="body">While HTML is used to describe the content in a web page, Cascading Style Sheets (CSS) describe how that content should <em class="Emphasis">look</em> (see <span class="Xref">Note</span>). The way the page looks is referred to<a id="_idIndexMarker062"></a> as its <span class="FirstTerm">presentation</span>. Fonts, colors, background images, line spacing, page layout, and so on, are all controlled with CSS. You can even add special effects and basic animation to your page.</p>
			<div>
				<div id="_idContainer030" class="marginNote">
					<h5 class="noteHeader">Note</h5>
					<p class="note">When this book uses the term “style sheets,” it always refers to Cascading Style Sheets, the standard style sheet language for the World Wide Web. Style sheets (including what “cascading” means!) are discussed further in <span class="Xref">Part III</span>. </p>
				</div>
			</div>
			<p class="body">The CSS specification also provides methods for controlling how documents will be presented in contexts other than a browser, such as in print or read aloud by a screen reader; however, we won’t be covering them much here.</p>
			<p class="body">Although it is possible to publish web pages using HTML alone, you’ll probably want to take on style sheets so you’re not stuck with the browser’s default styles. If you’re looking into designing websites professionally, either as a designer or as a developer, proficiency at style sheets is mandatory.</p>
			<h4 class="HeadD">JavaScript and DOM scripting</h4>
			<p class="body">JavaScript is a scripting language that adds interactivity and behaviors to web pages, including these (to name just a few):</p>
			<ul>
				<li class="ListBullet">Checking form entries for valid entries</li>
				<li class="ListBullet">Swapping out styles for an element or an entire site</li>
				<li class="ListBullet">Loading scrolling feeds with more content automatically</li>
				<li class="ListBullet">Making the browser remember information about users</li>
				<li class="ListBullet">Building interface widgets, such as embedded video players or special form inputs</li>
			</ul>
			<p class="body">You may also hear the term <span class="FirstTerm">DOM scripting</span> used in relation to JavaScript. DOM stands <a id="_idIndexMarker063"></a>for <span class="FirstTerm">Document Object Model</span>, and it refers to the standardized list of web page elements that can be accessed and manipulated using JavaScript (or another scripting language).</p>
			<p class="body">Frontend developers may also be required to be familiar with JavaScript frameworks (such as React, Bootstrap, Angular, and others) that automate a lot of the production process. They’ll likely also need to be handy<a id="_idIndexMarker064"></a><a id="_idIndexMarker065"></a> with <span class="FirstTerm">AJAX</span> (which stands for “Asynchronous JavaScript And XML”), a technique used to load content in the background, allowing the page to update smoothly without reloading (like those automatically refreshing feeds).</p>
			<p class="body">Web scripting definitely requires some traditional computer programming prowess. While many web developers have degrees in computer science, it is also common for developers to be self-taught. A few developers I know started by copying and adapting existing scripts, then gradually added to their programming skills with each new project. Still, if you have no experience with programming languages, the initial learning curve may be a bit steep.</p>
			<p class="body">If you want to be a web developer for a living, JavaScript is a basic requirement. Designers will benefit from understanding what JavaScript can do, but may not need to learn to write it if they are working with a development team. <a href="lwd5_chapter21.xhtml#_idTextAnchor269"><span class="Xref">Chapter </span><span class="Xref">21</span><span class="Xref">, Introduction to JavaScript</span></a>, will get you started understanding how it works, and I recommend <span class="Citation">Learning JavaScript </span>by Ethan Brown (O’Reilly) to learn more.</p>
			<div>
				<div id="_idContainer031" class="sbMargin">
					<h5 class="SidebarTitle">The World Wide Web Consortium</h5>
					<p class="SidebarBody">The <span class="FirstTerm--Sidebar-">World </span><span class="FirstTerm--Sidebar-"><a id="_idIndexMarker066"></a></span><span class="FirstTerm--Sidebar-">Wide Web Consortium</span> (called the <span class="FirstTerm--Sidebar-">W3C</span> for short) is the organization that oversees the development of web technologies such as HTML, CSS, and JavaScript. The group was founded in 1994 by Tim <a id="_idIndexMarker067"></a>Berners-Lee, the inventor of the web, at the Massachusetts Institute of Technology (MIT).</p>
					<p class="SidebarBody">In the beginning, the W3C concerned itself mainly with the HTTP protocol and the development of HTML. Now, the W3C is laying a foundation for the future of the web by developing dozens of technologies and protocols that must work together in a solid infrastructure.</p>
					<p class="SidebarBody">For the definitive answer to any web technology question, the W3C site is the place to go: <a href="http://www.w3.org"><span class="URL-Email--Sidebar-">www.w3.org</span></a>.</p>
					<p class="SidebarBody">For more information on the W3C and what it does, see this useful page: <a href="http://www.w3.org/Consortium/"><span class="URL-Email--Sidebar-">www.w3.org/Consortium/</span></a>.</p>
				</div>
			</div>
			<h3 class="HeadC">Backend development</h3>
			<p class="body"><span class="FirstTerm">Backend</span> developers <a id="_idIndexMarker068"></a>focus on the server, including the applications and databases that run on it. They may be responsible for installing and configuring the server software (we’ll be looking more at servers in <a href="lwd5_chapter02.xhtml#_idTextAnchor019"><span class="Xref">Chapter </span><span class="Xref">2</span><span class="Xref">, How the Web Works</span></a>). They will certainly be required to know at least one, and probably more, server-side <a id="_idIndexMarker069"></a>programming languages, such as PHP, Ruby, .NET (or ASP.NET), Python, or JSP, in order to create applications that provide the functionality required by the site. Applications handle tasks and features like forms processing, content management systems (CMSs), and online shopping, just to name a few.</p>
			<div>
				<div id="_idContainer032" class="sbMargin">
					<h5 class="SidebarSeries">AT A GLANCE</h5>
					<h5 class="SidebarTitle">Backend Development</h5>
					<p class="SidebarBody">The following technologies are typically in the domain of the backend developer:</p>
					<ul>
						<li class="SidebarListBullet">Server software (Apache, Microsoft IIS)</li>
						<li class="SidebarListBullet">Web application languages (PHP, Ruby, Python, JSP, ASP.NET)</li>
						<li class="SidebarListBullet">Database software (MySQL, Oracle, SQL Server)</li>
					</ul>
				</div>
			</div>
			<p class="body">Additionally, backend developers need to be familiar with configuring and maintaining <a id="_idIndexMarker070"></a>databases that store all of the data for a site, such as the content that gets poured into templates, user accounts, product inventories, and more. Some common database languages include MySQL, Oracle, and SQL Server.</p>
			<p class="body">Backend development is well beyond the scope of this book, but it is important to know the sorts of tasks that get taken care of at the server level. You should be aware that it is possible to get functionality like shopping carts, mailing lists, and so on as prepackaged solutions from your hosting company without having to program it from scratch.</p>
			<div>
				<div id="_idContainer033" class="sbMargin">
					<h5 class="SidebarTitle">Full-Stack Developers and Unicorns</h5>
					<p class="SidebarBody">When looking for a job in web development, you will frequently see posts looking<a id="_idIndexMarker071"></a> for “full-stack” developers. That means a person who is fluent in both frontend (HTML, CSS, JavaScript) and backend (server applications, databases) languages.</p>
					<p class="SidebarBody">There is a rare breed of web designer who can handle <em class="Emphasis">all</em> of the tasks mentioned earlier—from content strategy to UX to frontend development to what happens on the server. These folks are known in the biz as “unicorns.” I’ve met a few! </p>
				</div>
			</div>
			<h2 class="HeadB">Other Roles</h2>
			<p class="body">Not surprisingly, there are a myriad of other roles that contribute to the creation and maintenance of a site. Here are a few common roles that fall just outside the moniker “web design.”</p>
			<p class="ListVariableTerm">Product manager</p>
			<p class="ListVariable">The product <a id="_idIndexMarker072"></a>manager of a website or application guides its design and development in a way that meets business goals. This member of the team must have a thorough understanding of the target market as well as the processes involved in the creation of the site itself. Product managers develop the overall strategy for the site from a marketing perspective, including how and when it gets released.</p>
			<p class="ListVariableTerm">Project manager</p>
			<p class="ListVariable">The project <a id="_idIndexMarker073"></a>manager coordinates the designers, developers, and everyone else who is working on the site. They manage things like timelines, development approaches, deliverables, and so on. The project manager works with the product manager and other product owners to make sure that the project gets done on time and on budget.</p>
			<p class="ListVariableTerm">SEO specialist</p>
			<p class="ListVariable">A website <a id="_idIndexMarker074"></a>or application isn’t much good if nobody knows it exists, so it is crucial that a site be easily found by search engines. <span class="FirstTerm">Search Engine Optimization (SEO)</span> is a<a id="_idIndexMarker075"></a><a id="_idIndexMarker076"></a> discipline focused on tweaking the site structure and code in a way that increases the chances it will be highly ranked in search results. There may be an SEO specialist on the in-house team, or a company may choose to hire an outside SEO firm. SEO is sometimes perceived as a dark art, but there are many ways to improve findability that are not underhanded. In fact, the number one technique for improving SEO is simply having good content with savvy HTML markup.</p>
			<p class="ListVariableTerm">Multimedia producers</p>
			<p class="ListVariable">One of the cool things about the web is that you can add multimedia elements to a site, including sound, video, animation, and even interactive games. Creating multimedia elements is generally best left to artists and technicians in those fields, although they may be part of the web team if video, animation, or interactivity are core to the site’s mission.</p>
			<p class="body">That concludes our stroll through the virtual village of workers involved in the creation of a website. The larger the site, the more likely each team member will have a narrow specialization and job titles like “UX Lead for Error Messages.” More likely, everybody on the team will possess a spectrum of skills, and the lines between disciplines will blur. For example, I do Interaction and User Interface design, graphic design, HTML, and CSS, but I do not write JavaScript, work on the server, or get involved with content organization. In this book, I aim to give you a foundation in the frontend technologies that will prepare you for a number of roles.</p>
			<div>
				<div id="_idContainer034" class="sbMargin">
					<h5 class="SidebarTitle">(Soft) Skills Every Web Designer Needs</h5>
					<p class="SidebarBody">We’ve focused on quite a few technical skills that will be helpful in building websites. I would like to mention a few more—often overlooked—skills that are just as critical to your success.</p>
					<p class="SidebarListVariableTerm">Excellent communication skills</p>
					<p class="SidebarListVariable">In your work, you will need to communicate in person, on the phone, in email, and in text messaging tools with clients, team members, and superiors. Be clear, proactive, and straightforward with what you have to say. Good communication requires not only that you express yourself clearly, but also that you be a good listener. Make sure that you understand issues being discussed, and don’t be afraid to ask for clarification if you don’t.</p>
					<p class="SidebarListVariableTerm">Flexibility</p>
					<p class="SidebarListVariable">Be able to change direction quickly because not only does web technology change quickly, but you will no doubt be thrown curveballs in your day-to-day work as well. For example, you may arrive at work one day to find that the client has changed your priorities completely. You might find that they’ve cancelled your project entirely. You might be asked to learn new skills and shift positions in the team. Staying adaptable is the key to survival.</p>
					<p class="SidebarListVariableTerm">Critical thinking and good judgment</p>
					<p class="SidebarListVariable">Problem-solving is central to all of the disciplines related to web design, so you need to be able to use critical thinking skills to come up with solutions and always employ basic common sense.</p>
					<p class="SidebarListVariableTerm">A good attitude</p>
					<p class="SidebarListVariable">Creating sites means being part of a team, even if you work at home as a freelancer. Be mindful that the attitude with which you approach your work is contagious, so strive to be a positive and friendly team member.</p>
				</div>
			</div>
			<h1 id="_idParaDest-7" class="HeadA"><a id="_idTextAnchor015"></a>Gearing Up for Web Design</h1>
			<p class="body">It should come as no surprise that professional web designers require a fair amount of gear, both hardware and software. One question I’m frequently asked is, “What do I need to buy?” I can’t tell you specifically what to buy, but I will provide an overview of the typical tools of the trade.</p>
			<h2 class="HeadB">Equipment</h2>
			<p class="body">For a <a id="_idIndexMarker077"></a><a id="_idIndexMarker078"></a>comfortable web development environment, I recommend the following equipment:</p>
			<p class="ListVariableTerm">A solid, up-to-date computer</p>
			<p class="ListVariable">Macintosh, <a id="_idIndexMarker079"></a><a id="_idIndexMarker080"></a><a id="_idIndexMarker081"></a>Windows, or Linux is fine, so use whatever you have and are comfortable with. Creative departments in professional web development companies tend to be Mac-based. For backend work, Linux and Windows are popular. Although it is nice to have a super-fast machine, the files that make up web pages are very small and tend not to be too taxing on computers. Unless you’re getting into sound and video editing, don’t worry if your current setup is not the very latest and greatest.</p>
			<p class="ListVariableTerm">A large monitor</p>
			<p class="ListVariable">Although not a requirement, a large monitor makes life easier. The more monitor real estate you have, the more windows and control panels you can have open at the same time. You can also see more of your page to make design decisions. If you’re using a large monitor, just make sure you design for users with smaller monitors and devices in mind.</p>
			<p class="ListVariableTerm">A second computer for testing<span class="ListStartItem"> </span></p>
			<p class="ListVariable">Many designers and developers find it useful to have a test computer running a different platform than the computer they use for development (i.e., if you design on a Mac, test on a PC). Because browsers work differently on Macs than on Windows machines, it’s critical to test your pages in as many environments as possible, and particularly on the current Windows operating system. If you are a hobbyist web designer working at home, you could check your pages on a friend’s machine. Mac users should check out the <span class="Xref">“Run Windows on Your Mac”</span> sidebar.</p>
			<p class="ListVariableTerm">Mobile devices for testing</p>
			<p class="ListVariable">The web <a id="_idIndexMarker082"></a><a id="_idIndexMarker083"></a>has gone mobile! That means it is absolutely critical that you test the appearance and performance of your site on browsers on smartphones and tablet devices. Device testing is discussed in <a href="lwd5_chapter17.xhtml#_idTextAnchor224"><span class="Xref">Chapter </span><span class="Xref">17</span><span class="Xref">, Responsive Web Design</span></a>.</p>
			<p class="ListVariableTerm">A scanner and/or camera</p>
			<p class="ListVariable">If you anticipate making your own images and textures, you’ll need some tools for creating them.</p>
			<div>
				<div id="_idContainer035" class="sbMargin">
					<h5 class="SidebarTitle">Run Windows on Your Mac</h5>
					<p class="SidebarBody">If you have a Macintosh computer with an Intel chip running macOS (Leopard or later), you don’t need a separate computer to test in a Windows environment. It is now possible to run Windows right on your Mac using the free Boot Camp application, which allows you to switch to Windows on reboot.</p>
					<p class="SidebarBody">There are several other <span class="FirstTerm">VM</span> (<span class="FirstTerm">Virtual Machine</span>) products for macOS that allow you to toggle between Mac and Windows, <a id="_idIndexMarker084"></a><a id="_idIndexMarker085"></a><a id="_idIndexMarker086"></a>including these:</p>
					<ul>
						<li class="SidebarListBullet">VMFusion (<a href="http://www.vmware.com/fusion"><span class="URL-Email--Sidebar-">www.vmware.com/fusion</span></a>) is a commercial product with a free trial you can download.</li>
						<li class="SidebarListBullet">Parallels Desktop for Mac (<a href="http://www.parallels.com"><span class="URL-Email--Sidebar-">www.parallels.com</span></a>) is also a commercial product with a free trial.</li>
						<li class="SidebarListBullet">Oracle VirtualBox (<a href="http://virtualbox.org"><span class="URL-Email--Sidebar-">virtualbox.org</span></a>) is a free program that allows you to run a number of guest operating systems, including Windows and several flavors of <a id="_idIndexMarker087"></a>Unix.</li>
					</ul>
					<p class="SidebarBody">All VM products require that you purchase a copy of Microsoft Windows, but it sure beats buying a whole machine.</p>
				</div>
			</div>
			<h2 class="HeadB">Web Production Software</h2>
			<p class="body">There’s no <a id="_idIndexMarker088"></a><a id="_idIndexMarker089"></a>shortage of software available for creating web pages. In the early days, we just made do with tools originally designed for print. Today, there are wonderful tools created specifically with web design in mind that make the process more efficient. It is a delicate business listing software in a book such as this because a) there are <em class="Emphasis">so many</em> programs, b) everyone has their personal favorite, and c) new tools come along so rapidly that there are surely newer, cooler options that you have access to that didn’t exist as I wrote this.</p>
			<p class="body">That said, here is a general overview of the types of software that comprise the tools of our trade, along with a few specific mentions of the most popular in each class.</p>
			<div>
				<div id="_idContainer036" class="marginNote">
					<h5 class="noteHeader">NOTE</h5>
					<p class="note">To do the exercises in this book, all you’ll need is the text editor that came with your operating system and free image creation software. There is no need to purchase anything to follow along.</p>
				</div>
			</div>
			<h3 class="HeadC">Coding tools</h3>
			<p class="body">Although you can get by with the simple <a id="_idIndexMarker090"></a><a id="_idIndexMarker091"></a>text editors that come with your computer, a dedicated code editor makes the task of writing HTML, CSS, and JavaScript much easier. Code editors understand the syntax of the code you write, so they can do things for you like color coding, error detection, and automatically finishing simple tasks like closing HTML tags. Some provide page previews so you can view the results of your code as you work. </p>
			<p class="body"><span class="Xref-Figure">Figure 1-6</span> shows how an HTML document looks in the <a id="_idIndexMarker092"></a>Sublime Text editor. Here are just a few of the better-known code editors for web production that are worth exploring:</p>
			<ul>
				<li class="ListBullet">Sublime Text (<a href="http://sublimetext.com"><span class="URL-Email">sublimetext.com</span></a>)</li>
				<li class="ListBullet">Atom <a id="_idIndexMarker093"></a>(free from GitHub; <a href="http://atom.io"><span class="URL-Email">atom.io</span></a>)</li>
				<li class="ListBullet">Brackets <a id="_idIndexMarker094"></a>(free from Adobe;<a href="http://brackets.io"><span class="URL-Email"> brackets.io</span></a>)</li>
				<li class="ListBullet">CodeKit (<a href="http://codekitapp.com"><span class="URL-Email">codekitapp.com</span></a>; <em class="Emphasis">Mac </em><em class="Emphasis"><a id="_idIndexMarker095"></a></em><em class="Emphasis">only</em>)</li>
				<li class="ListBullet">Adobe <a id="_idIndexMarker096"></a><a id="_idIndexMarker097"></a><a id="_idIndexMarker098"></a>Dreamweaver (<a href="http://www.adobe.com/products/dreamweaver.html"><span class="URL-Email">www.adobe.com/products/dreamweaver.html</span></a>)</li>
				<li class="ListBullet">Coda<a id="_idIndexMarker099"></a> (<a href="http://panic.com/coda/"><span class="URL-Email">panic.com/coda/</span></a>)</li>
				<li class="ListBullet">Microsoft <a id="_idIndexMarker100"></a><a id="_idIndexMarker101"></a>Visual Studio (<a href="http://visualstudio.com"><span class="URL-Email">visualstudio.com</span></a>)</li>
			</ul>
			<div>
				<figure id="_idContainer038" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0106_sublime.png" alt="" width="1102" height="665"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-6.</span> Sublime Text is one example of a dedicated code editor.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">User interface and layout tools</h3>
			<p class="body">There is a <a id="_idIndexMarker102"></a><a id="_idIndexMarker103"></a>new breed of interface design tools made specifically for websites and other applications. Because they have been designed from scratch with interface design in mind, they seem to anticipate a web designer’s every need. Interface design tools make it easy to design multiple layouts (such as layouts at various screen sizes) as well as export images and code for use in production. Some allow basic interactivity such as clicks and swipes, so your mockups can be shared online and used for basic interface testing.</p>
			<p class="body">Sketch (<a href="http://sketchapp.com"><span class="URL-Email">sketchapp.com</span></a>, Mac only), <a id="_idIndexMarker104"></a>shown in <span class="Xref-Figure">Figure 1-7</span>, is extremely popular at the time of this writing. Other options include the following:</p>
			<ul>
				<li class="ListBullet">Affinity<a id="_idIndexMarker105"></a> Designer (<a href="http://affinity.serif.com/en-us/designer/"><span class="URL-Email">affinity.serif.com/en-us/designer/</span></a>)</li>
				<li class="ListBullet">Adobe XD (<a href="http://www.adobe.com/products/xd.html"><span class="URL-Email">www.adobe.com/products/xd.html</span></a>)</li>
				<li class="ListBullet">Figma (<a href="http://figma.com"><span class="URL-Email">figma.com</span></a>)</li>
				<li class="ListBullet">UXPin (<a href="http://uxpin.com"><span class="URL-Email">uxpin.com</span></a>)</li>
			</ul>
			<div>
				<figure id="_idContainer040" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0107_sketch.png" alt="" width="1260" height="724"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-7.</span> Sketch (Mac only) is an example of an interface design tool.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">Web graphic creation tools</h3>
			<p class="body">It is certainly<a id="_idIndexMarker106"></a><a id="_idIndexMarker107"></a> <a id="_idIndexMarker108"></a>possible to create all of the images you need for a site by using one of the interface design tools just listed. There are also programs that focus solely on image creation that can export files in web-appropriate formats. For professional designers, the <a id="_idIndexMarker109"></a><a id="_idIndexMarker110"></a>Adobe Creative Cloud (<a href="http://adobe.com"><span class="URL-Email">adobe.com</span></a>) suite of tools, which includes <a id="_idIndexMarker111"></a>Photoshop (<span class="Xref-Figure">Figure 1-8</span>), Illustrator<a id="_idIndexMarker112"></a>, and other high-end design tools, is worth the investment.</p>
			<p class="body">If the Adobe monthly subscription fee is out of reach, you can try lower-cost alternatives that provide many of the same features. The number of graphics tools out there is dizzying, so I’m gathering just a few here:</p>
			<ul>
				<li class="ListBullet">GIMP (free, <a id="_idIndexMarker113"></a>open source; <a href="http://gimp.org"><span class="URL-Email">gimp.org</span></a>)</li>
				<li class="ListBullet">Corel PaintShop Pro (for photo editing; <a href="http://paintshoppro.com"><span class="URL-Email">paintshoppro.com</span></a>; <em class="Emphasis">Windows only</em>)</li>
				<li class="ListBullet">Corel Draw <a id="_idIndexMarker114"></a>(for vector drawing; <a href="http://coreldraw.com"><span class="URL-Email">coreldraw.com</span></a>; <em class="Emphasis">Windows only</em>)</li>
				<li class="ListBullet">Pixelmator (<a href="http://pixelmator.com"><span class="URL-Email">pixelmator.com</span></a>; <em class="Emphasis">Mac only</em>)</li>
			</ul>
			<p class="body">The following image editors work right in your <a id="_idIndexMarker115"></a>browser, without the need to download a program, although you do need to pay for an account:</p>
			<ul>
				<li class="ListBullet">SumoPaint<a id="_idIndexMarker116"></a> (<a href="http://sumopaint.com"><span class="URL-Email">sumopaint.com</span></a>)</li>
				<li class="ListBullet">Pixlr<a id="_idIndexMarker117"></a> (<a href="http://pixlr.com"><span class="URL-Email">pixlr.com</span></a>)</li>
			</ul>
			<div>
				<figure id="_idContainer042" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0108_photoshop.png" alt="" width="1275" height="718"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-8.</span> Adobe Photoshop is the professional standard for image editing.</figcaption>
				</figure>
			</div>
			<h3 class="HeadC">A variety of browsers</h3>
			<p class="body">One of the biggest challenges for web designers is that our sites may look and behave differently from browser to browser. For this reason, it is critical that we <a id="_idIndexMarker118"></a><a id="_idIndexMarker119"></a>test our designs early and often on the widest range of browsers possible. These are the browsers designers and developers keep around for testing:</p>
			<ul>
				<li class="ListBullet">Chrome (<a href="http://google.com/chrome"><span class="URL-Email">google.com/chrome</span></a>)</li>
				<li class="ListBullet">Firefox (<a href="http://www.mozilla.org"><span class="URL-Email">www.mozilla.org</span></a>)</li>
				<li class="ListBullet">MS Edge (<a href="http://www.microsoft.com/en-us/windows/microsoft-edge"><span class="URL-Email">www.microsoft.com/en-us/windows/microsoft-edge</span></a>; <em class="Emphasis">Windows only</em>)</li>
				<li class="ListBullet">Internet Explorer 9–11 (<a href="http://www.microsoft.com"><span class="URL-Email">www.microsoft.com</span></a>; search “Internet Explorer”; <em class="Emphasis">Windows only</em>)</li>
				<li class="ListBullet">Safari (<a href="http://support.apple.com/downloads/#safari"><span class="URL-Email">support.apple.com/downloads/#safari</span></a>; <em class="Emphasis">Mac only</em>)</li>
				<li class="ListBullet">Opera (<a href="http://opera.com"><span class="URL-Email">opera.com</span></a>)</li>
			</ul>
			<p class="body">You will also need to test on a variety of smartphone browsers including iOS Safari, Android browsers, and third-party mobile browsers. We will discuss mobile testing further in <a href="lwd5_chapter17.xhtml#_idTextAnchor224"><span class="Xref">Chapter </span><span class="Xref">17</span></a>.</p>
			<h3 class="HeadC">File management and transfer tools</h3>
			<p class="body">Web design <a id="_idIndexMarker120"></a><a id="_idIndexMarker121"></a><a id="_idIndexMarker122"></a>and development involves a lot of moving files around, particularly from the computer where you do your work to the server computer that hosts the site. To move files across the internet, you use an <span class="FirstTerm">FTP</span> (short for <span class="FirstTerm">File Transfer Protocol</span>) program. You will find that many hosting services offer their own FTP tools for uploading your files to their servers. Many of the code editors listed earlier also include built-in FTP functionality. Or, you can use a standalone FTP program, such as one of these:</p>
			<ul>
				<li class="ListBullet">Filezilla (<a href="http://filezilla-project.org"><span class="URL-Email">filezilla-project.org</span></a>; <em class="Emphasis">free, all platforms</em>)</li>
				<li class="ListBullet">Cyberduck (<a href="http://cyberduck.io"><span class="URL-Email">cyberduck.io</span></a>; <em class="Emphasis">Mac and Windows</em>)</li>
				<li class="ListBullet">WinSCP (<a href="https://winscp.net/eng/index.php"><span class="URL-Email">winscp.net/eng/index.php</span></a>; <em class="Emphasis">free, Windows only</em>)</li>
				<li class="ListBullet">Transmit (<a href="http://panic.com/transmit/"><span class="URL-Email">panic.com/transmit/</span></a>; <em class="Emphasis">Mac only</em>)</li>
			</ul>
			<p class="body">You<span class="ListStartItem"> </span>may also find it useful to have a <span class="FirstTerm">terminal</span> <span class="FirstTerm">application</span> (command-line tool) that allows you to type <a id="_idIndexMarker123"></a>Unix commands for setting file permissions, moving or copying files and directories, or managing the server software. Command-line tools, which have a number of uses in web design and development workflow, are discussed in more detail in <a href="lwd5_chapter20.xhtml#_idTextAnchor256"><span class="Xref">Chapter </span><span class="Xref">20</span><span class="Xref">, Modern Web Development Tools</span></a>:</p>
			<ul>
				<li class="ListBullet">Terminal (installed with <a id="_idIndexMarker124"></a><a id="_idIndexMarker125"></a>macOS; shown in <span class="Xref-Figure">Figure 1-9</span>)</li>
				<li class="ListBullet">Cygwin (<a href="http://cygwin.com"><span class="URL-Email">cygwin.com</span></a>; Linux <a id="_idIndexMarker126"></a><a id="_idIndexMarker127"></a>emulator for Windows that includes a command-line tool)</li>
			</ul>
			<div>
				<figure id="_idContainer044" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0109_terminal.png" alt="" width="1321" height="732"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 1-9.</span> The Terminal command-line tool for macOS.</figcaption>
				</figure>
			</div>
			<h1 id="_idParaDest-8" class="HeadA"><a id="_idTextAnchor016"></a>What You’ve Learned</h1>
			<p class="body">I hope that this chapter has given you an overview of the many roles and responsibilities that fall under the umbrella of “web design.” I also hope that you come away realizing that you don’t need to learn everything. And even if you want to learn everything eventually, you don’t need to learn it all at once. So relax, and don’t worry. The other good news is that, while many professional tools exist, it is possible to create a basic website and get it up and running without spending much money by using freely available or inexpensive tools and your existing computer setup.</p>
			<p class="body">As you’ll soon see, it’s easy to get started making web pages—you will be able to create simple pages by the time you’re done reading this book. From there, you can continue adding to your bag of tricks and find your particular niche in web design. In the meantime, try answering the questions in <span class="Xref-Figure">Exercise 1-1</span>.</p>
			<div>
				<div id="_idContainer045" class="exercise-inline">
					<h6 class="ExerciseTitle"><span class="Exercise-Label">Exercise 1-1.</span> Taking stock</h6>
					<p class="SidebarBody">Now that you’re taking that first step in learning web design, it might be a good time to take stock of your assets and goals. Using the lists in this chapter as a general guide, try jotting down answers to the following questions:</p>
					<ul>
						<li class="SidebarListBullet">What are your web design goals? To become a professional web designer? To make personal websites only?</li>
						<li class="SidebarListBullet">Which aspects of web design interest you the most?</li>
						<li class="SidebarListBullet">What current skills do you have that will be useful in creating web pages?</li>
						<li class="SidebarListBullet">Which skills will you need to brush up on?</li>
						<li class="SidebarListBullet">Which hardware and software tools do you already have for web design?</li>
						<li class="SidebarListBullet">Which tools do you need to buy? Which tools would you like to buy eventually?</li>
					</ul>
				</div>
			</div>
			<h1 id="_idParaDest-9" class="HeadA"><a id="_idTextAnchor017"></a>Test Yourself</h1>
			<p class="body">Each chapter in this book ends with a few questions that you can answer to see if you picked up the important bits of information. Answers appear in <a href="lwd5_appendixA.xhtml#_idTextAnchor325"><span class="Xref">Appendix </span><span class="Xref">A</span></a>.</p>
			<ol>
				<li class="ListNumber">Match these web professionals with the final product they might be responsible for producing:<table id="table001" class="table_invisible _idGenTablePara-1"><colgroup><col/><col/><col/><col/></colgroup><tbody><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">a.</p></td><td class="table_invisible invisible"><p class="TableBody">Graphic designer</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">HTML and CSS documents</p></td></tr><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">b.</p></td><td class="table_invisible invisible"><p class="TableBody">Production department</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">PHP scripts</p></td></tr><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">c.</p></td><td class="table_invisible invisible"><p class="TableBody">User experience designer</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">“Look and feel” deliverables</p></td></tr><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">d.</p></td><td class="table_invisible invisible"><p class="TableBody">Backend programmer</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">Storyboards</p></td></tr></tbody></table></li>
				<li class="ListNumber">What does the W3C do?</li>
				<li class="ListNumber">Match the web technology with its appropriate task:<table id="table002" class="table_invisible _idGenTablePara-1"><colgroup><col/><col/><col/><col/></colgroup><tbody><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">a.</p></td><td class="table_invisible invisible"><p class="TableBody">HTML</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">Checks a form field for a valid entry</p></td></tr><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">b.</p></td><td class="table_invisible invisible"><p class="TableBody">CSS</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">Creates a custom server-side web application</p></td></tr><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">c.</p></td><td class="table_invisible invisible"><p class="TableBody">JavaScript</p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">Identifies text as a second-level heading</p></td></tr><tr class="table_invisible"><td class="table_invisible"><p class="TableBody">d.</p></td><td class="table_invisible invisible"><p class="TableBody">Ruby </p></td><td class="table_invisible invisible"><p class="TableBody">_____</p></td><td class="table_invisible"><p class="TableBody">Makes all second-level headings blue</p></td></tr></tbody></table></li>
				<li class="ListNumber">What is the difference between frontend<span class="FirstTerm"> </span>and backend web development?</li>
				<li class="ListNumber">What does an FTP tool do and how do you get one?</li>
			</ol>
		</div>
	</div>
</div>
</body>
</html>