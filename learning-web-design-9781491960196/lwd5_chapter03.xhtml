<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Learning Web Design, 5th Edition</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="css/lwd5e.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><div id="_idContainer078" class="ch03">
			<p id="_idParaDest-18" class="Epub-TOC-Chapter-Title"><a id="_idTextAnchor029"></a>3. Some Big Concepts You Need to Know</p>
		</div>
		<div id="_idContainer079" class="ch03">
			<h1 class="chapterLabel">3</h1>
		</div>
		<div id="_idContainer080" class="ch03">
			<h1 class="chapterTitle"><a id="_idTextAnchor030"></a><a id="_idTextAnchor031"></a>Some Big Concepts You Need to Know</h1>
		</div>
		<div id="_idContainer081" class="chapTOCFrame" epub:type="toc">
			<p class="ChapterContentsTitle">In this chapter</p>
			<p class="chapterContents">The web on mobile devices</p>
			<p class="chapterContents">The benefits of web standards</p>
			<p class="chapterContents">Progressive enhancement</p>
			<p class="chapterContents">Responsive Web Design</p>
			<p class="chapterContents">Accessibility</p>
			<p class="chapterContents">Site performance</p>
		</div>
		<div id="_idContainer101" class="ch03">
			<p class="body">As the web <a id="_idIndexMarker251"></a>matures and the number of devices we access it from increases exponentially, our jobs as web designers and developers get significantly more complicated. Frankly, there’s a lot more going on out there than I can fit in this book. In the chapters that follow, I will focus on the basic building blocks of web design—HTML elements, CSS styles, a taste of JavaScript, and web image production—that will give you a solid foundation for the further development of your skills.</p>
			<p class="body">Before we get to the nuts and bolts, I want to introduce some Big Concepts that every web designer needs to know. We’ll look at ideas and concerns that inform our decisions and contribute to the contemporary web environment. I’ll be referring back to the terminology introduced here frequently.    </p>
			<p class="body">The heart of the matter is that as web designers, we never know exactly how the pages we create will be viewed. We don’t know which of the dozens of browsers might be used, whether it is on a desktop computer or something more portable, how large the browser window will be, what fonts are installed, whether functionality such as JavaScript is enabled, how fast the internet connection is, whether the pages are being read by a screen reader, and so on. The Big Concepts in this chapter are primarily reactions to and methods for coping with the inescapable element of the Unknown in our medium. They include the following:</p>
			<ul>
				<li class="ListBullet">The multitude of devices</li>
				<li class="ListBullet">Web standards</li>
				<li class="ListBullet">Progressive enhancement</li>
				<li class="ListBullet">Responsive Web Design</li>
				<li class="ListBullet">Accessibility</li>
				<li class="ListBullet">Site performance</li>
			</ul>
			<p class="body">Because we’re just getting started, I will keep the descriptions brief and fairly non-technical. My goal is that you have a basic understanding of what I mean by terms like “progressive enhancement” when you encounter them in lessons later. Many excellent articles and books have been written on each of these topics and their related production techniques, and I’ll provide pointers to resources for further reading. </p>
			<h1 id="_idParaDest-19" class="HeadA"><a id="_idTextAnchor032"></a>A Multitude of Devices </h1>
			<p class="body">Until 2007, <a id="_idIndexMarker252"></a>we could be relatively certain that our users were visiting our sites while sitting at their desks, looking at a large monitor, using a speedy internet connection. We had all more or less settled on 960 pixels as a good width for a web page based on the most common monitor size. Back then, our biggest concern was dealing with the dozen or so desktop browsers and jumping through a few extra hoops to support quirky old versions of Internet Explorer. And we thought we had it rough!</p>
			<p class="body">Although you could access web pages and web content on mobile phones prior to 2007, the introduction of the iPhone and Android smartphones as well as faster networks heralded a huge shift in how, when, and where we do our web surfing (particularly in the United States, which lagged behind Asia and the EU in mobile technology). Since then, we’ve seen the introduction of phones and tablets of all different dimensions, as well as web browsers on TVs, gaming systems, and other devices. And the diversity is only going to increase. I think mobile web design expert <a id="_idIndexMarker253"></a>Brad Frost sums it up nicely in his illustrations in <span class="Xref-Figure">Figure 3-1</span>.</p>
			<div>
				<figure id="_idContainer083" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0301_frost.png" alt="" width="2025" height="513"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel"> </span><span class="FigureLabel">Figure 3-1.</span> Brad Frost sums up the reality of device diversity nicely (<a href="http://bradfrostweb.com"><span class="URL-Email--Sidebar-">bradfrostweb.com</span></a>).</figcaption>
				</figure>
			</div>
			<p class="body">The challenge of designing for all of these devices goes beyond addressing differing screen sizes. There is a world of difference between using a site over a broadband connection and over a slow cell network. Designers need to resist making assumptions about network speed and context based on the screen size. Just because it is a small screen doesn’t mean it’s a slow connection or that the person is in a hurry. It’s not uncommon to leisurely browse the web on a smartphone while sitting on the couch at home with a solid WiFi connection. And iPads with larger, high-resolution displays may be accessing the internet on pokey 3G connections. In other words, it’s complicated! </p>
			<div>
				<div id="_idContainer084" class="callout">
					<p class="callout">Resist making assumptions about network speed and context based on the screen size.</p>
				</div>
			</div>
			<p class="body">For a lot of sites today, more people access the web via their mobile devices than on a desktop computer. Already, a significant portion of Americans use their mobile phones as their <em class="Emphasis">only</em> access to the internet. That means it is critical to get the design and functionality right. We’ve made huge strides in serving a pleasing experience to users with handheld devices, and the technology for targeting their needs continues to head in the right direction.</p>
			<p class="body">What I want you to learn here is that the way you see your design as you’re working on it on your nice desktop machine is not how it will be experienced by everyone. Some will see it much smaller. Some will see it load painfully slowly. Some may be looking at it on a TV across the room. All web design professionals should keep this fact in mind.</p>
			<h2 class="HeadB">For Further Reading</h2>
			<ul>
				<li class="ListBullet"><span class="Citation">Mobile First</span> by <a id="_idIndexMarker254"></a>Luke Wroblewski (A Book Apart). Luke was way ahead of the curve in insisting that sites work well on mobile devices, and he shares his perspective in this little book, which is jam-packed with ideas.<div id="_idContainer087" class="sidebar"><h5 class="SidebarTitle">Mobile Web?</h5><p class="SidebarBody">You may hear people use the term “mobile web,” but the truth is (as <a id="_idIndexMarker255"></a>Stephen Hay put it in a tweet in 2011; see <span class="Xref-Figure">Figure 3-2</span>), there is no Mobile Web any more than there is a Desktop Web, or a Tablet Web, or so on. There is just The Web, and it can be accessed from all manner of devices. As of this writing, “mobile web” is used as sort of a catchall term to describe our efforts to adapt our desktop design skills to accommodate a much wider variety of use cases. And, as we are finding out, there is more than one way to crack that nut.</p><div><figure id="_idContainer086" class="figWCaption"><p class="Figure_Holder"><img src="image/lwd5_0302.png" alt="" width="1042" height="367"/></p><figcaption class="FigureCaption"><span class="FigureLabel">Figure 3-2.</span> Stephen Hay’s tweet from January 2011. Read his follow-up article at <a href="http://www.the-haystack.com/2011/01/07/there-is-no-mobile-web"><span class="URL-Email--Sidebar-">www.the-haystack.com/2011/01/07/there-is-no-mobile-web</span></a>.</figcaption></figure></div></div></li>
			</ul>
			<h1 id="_idParaDest-20" class="HeadA"><a id="_idTextAnchor033"></a>Sticking with the Standards</h1>
			<p class="body">So how do we deal with this diversity? A good start is to follow the standards documented by the <a id="_idIndexMarker256"></a>World Wide Web Consortium (W3C). Sticking with web standards is your primary tool for ensuring your site is consistent on all standards-compliant browsers (that’s approximately 99% of browsers in current use). It also helps make your content forward-compatible as web technologies and browser capabilities evolve. Another benefit is that you can tell your clients that you <a id="_idIndexMarker257"></a><a id="_idIndexMarker258"></a>create “standards-compliant” sites, and they will like you more.</p>
			<p class="body">The notion of standards compliance may seem like a no-brainer, but it used to be that everyone, including the browser makers, played fast and loose with <a id="_idIndexMarker259"></a>HTML and scripting. The price we paid was incompatible browser implementations and the need to create sites twice to make them work for everyone. I talk more about web standards throughout this book, so I won’t go into too much detail here. Suffice it to say that the web standards are your friends. Everything you learn in this book will start you off on the right foot.</p>
			<div>
				<div id="_idContainer088" class="callout">
					<p class="callout">Sticking with web standards is your primary tool for ensuring your site is as consistent as possible.</p>
				</div>
			</div>
			<h2 class="HeadB">For Further Reading</h2>
			<ul>
				<li class="ListBullet">The W3C site (<a href="http://w3.org/standards"><span class="URL-Email">w3.org/standards</span></a>) is the primary resource for all web standards documents.</li>
				<li class="ListBullet">The bible for standards compliance and how it makes good business sense is <span class="Citation">Designing with Web Standards, 3rd Edition</span>, by <a id="_idIndexMarker260"></a>Jeffrey Zeldman (New Riders). It’s getting on in years, but the fundamentals are still solid.</li>
			</ul>
			<h1 id="_idParaDest-21" class="HeadA"><a id="_idTextAnchor034"></a>Progressive Enhancement</h1>
			<p class="body">With a multitude of browsers comes a multitude of levels of support for the web standards. In fact, no browser has implemented all the standards 100%, and there are always new technologies that are slowly gaining steam. Furthermore, users can set their own browser preferences, so they may have a browser that supports JavaScript but have chosen to turn it off. The point here is that we are faced with a wide range of browser capabilities—from only basic HTML support to all the bells and whistles.</p>
			<p class="body"><span class="FirstTerm">Progressive enhancement</span> is <a id="_idIndexMarker261"></a>one strategy for dealing with unknown browser capabilities (see <span class="Xref">Note</span>). When designing with progressive enhancement, you start with a baseline experience that makes the content or core functionality available to even the most rudimentary browsers or assistive devices. From there, you layer on more advanced features for the browsers that can handle them. You might finish with some “nice to have” effects, like animation or wrapping text around images in interesting shapes, that enhance the experience for users with the most advanced browsers, but aren’t really critical to the brand or message. </p>
			<div>
				<div id="_idContainer089" class="note">
					<h5 class="noteHeader">NOTE </h5>
					<p class="note">Progressive enhancement is the flip side of an <a id="_idIndexMarker262"></a>approach to browser diversity called <span class="FirstTerm--Sidebar-">graceful degradation</span>, in which you design the fully enhanced experience first, then create a series of fallbacks for non-supporting browsers. Both methods have their place in modern development. You will find many fallback techniques suggested in this book to be sure less capable browsers are accommodated.</p>
				</div>
			</div>
			<p class="body">Progressive enhancement is an approach that informs all aspects of page design and production, including HTML, CSS, and JavaScript:</p>
			<p class="ListVariableTerm">Authoring strategy</p>
			<p class="ListVariable">When an HTML document is written in logical order and its elements are marked up in a meaningful way, it will be usable on the widest range of browsing environments, including the oldest browsers, future browsers, and mobile and assistive devices. It may not look exactly the same, but the important thing is that your content is available. It also ensures that search engines like Google will catalog the content correctly. A clean HTML document with its elements accurately and thoroughly described is the foundation for accessibility.</p>
			<p class="ListVariableTerm">Styling strategy</p>
			<p class="ListVariable">You can create layers of experience simply by taking advantage of the way browsers parse style sheet rules. Without going into too much technical detail, you can write a style rule that makes an element background red, but also include a style that gives it a cool gradient (a blend from one color to another) for browsers that know how to render gradients. Or you can use a cutting-edge CSS selector to deliver certain styles only to cutting-edge browsers. The knowledge that browsers simply ignore properties and rules they don’t understand gives you license to innovate without bringing older browsers to their knees. You just have to be mindful of styling the baseline experience first, then adding improvements once the minimum requirements are met.  </p>
			<p class="ListVariableTerm">Scripting strategy</p>
			<p class="ListVariable">As with other web technologies, there are discrepancies in how browsers handle <a id="_idIndexMarker263"></a>JavaScript (particularly on non-desktop devices), and some users opt to turn it off entirely. The first rule in progressive enhancement is to make sure basic functionality—such as linking from page to page or accomplishing essential tasks like data submission via forms—is intact even when JavaScript is off. In this way, you ensure the baseline experience, and enhance it when JavaScript is available. </p>
			<div>
				<div id="_idContainer090" class="callout">
					<p class="callout">Progressive enhancement is a strategy for coping with unknown browser capabilities.</p>
				</div>
			</div>
			<h2 class="HeadB">For Further Reading</h2>
			<ul>
				<li class="ListBullet">There is no better introduction to the progressive enhancement approach than the book <span class="Citation">Adaptive Web Design: Crafting Rich Experiences with Progressive Enhancement, 2nd Edition</span>, by <a id="_idIndexMarker264"></a>Aaron Gustafson (New Riders). </li>
				<li class="ListBullet"><span class="Citation">The Uncertain Web: Web Development in a Changing Landscape</span> by <a id="_idIndexMarker265"></a>Rob Larson (O’Reilly).</li>
				<li class="ListBullet">Once you have more chops, the book <span class="Citation">Designing with Progressive Enhancement</span> by <a id="_idIndexMarker266"></a><a id="_idIndexMarker267"></a><a id="_idIndexMarker268"></a><a id="_idIndexMarker269"></a>Todd Parker, Patty Toland, Scott Jehl, and Maggie Costello Wachs (New Riders) is an excellent deep-dive into techniques and best practices. Read more about it at <a href="http://filamentgroup.com/dwpe/"><span class="URL-Email">filamentgroup.com/dwpe/</span></a>.</li>
			</ul>
			<h1 id="_idParaDest-22" class="HeadA"><a id="_idTextAnchor035"></a>Responsive Web Design</h1>
			<p class="body">By default, <a id="_idIndexMarker270"></a><a id="_idIndexMarker271"></a><a id="_idIndexMarker272"></a>most browsers on small devices such as smartphones and tablets shrink a web page down to fit the screen and provide mechanisms for zooming and moving around the page. Although it technically works, it is not a great experience. The text is too small to read, the links are too small to tap, and all that zooming and panning around is distracting. </p>
			<p class="body"><span class="FirstTerm">Responsive Web Design</span> (RWD) is a strategy for providing appropriate layouts to devices based on the size of the <a id="_idIndexMarker273"></a>viewport (browser window). The key to Responsive Web Design is serving a single HTML document (with one URL) to all devices, but applying different style sheets based on the screen size in order to provide the most optimized layout for that device. For example, when the page is viewed on a smartphone, it appears in one column with large links for easy tapping. But when that same page is viewed on a large desktop browser, the content rearranges into multiple columns with traditional navigation elements. It’s like <em class="Emphasis">magic</em>! (Except that it’s actually just CSS.) </p>
			<div>
				<div id="_idContainer091" class="callout">
					<p class="callout">Responsive Web Design is a strategy for dealing with unknown screen size.</p>
				</div>
			</div>
			<p class="body">The web design community has been abuzz about responsive design since Ethan <a id="_idIndexMarker274"></a>Marcotte first wrote about it and coined the phrase in his article “Responsive Web Design” on A List Apart in 2010 (<a href="http://alistapart.com/articles/responsive-web-design/"><span class="URL-Email">alistapart.com/articles/responsive-web-design/</span></a>). It’s become one of the primary tools we use to cope with unknown viewport size. </p>
			<p class="body"><span class="Xref-Figure">Figure 3-3</span> shows some examples of responsive sites at the typical dimensions for a desktop monitor, tablet, and smartphone. You can see many more inspirational examples at the <a id="_idIndexMarker275"></a>Media Queries gallery site (<a href="http://mediaqueri.es"><span class="URL-Email">mediaqueri.es</span></a>). Try opening one of the responsive sites in your browser and then resizing the window narrow and wide. Watch as the layout changes based on window size. <em class="Emphasis">Très</em> cool.</p>
			<div>
				<figure id="_idContainer093" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0303_rwd-ebook.png" alt="" width="1387" height="1325"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 3-3.</span> A responsive site’s layout changes based on the size of the browser window.</figcaption>
				</figure>
			</div>
			<p class="body">Responsive Web Design helps with matters of layout, but it is not a solution to all mobile web design challenges. The fact is that providing the best experiences for your users and their chosen device may require optimizations that go beyond adjusting the look and feel. You can better address some problems by using the server to detect the device and its capabilities and then making decisions on what to send back. </p>
			<p class="body">For some sites and services, it may be preferable to build a separate mobile site (see <a id="_idIndexMarker276"></a>the <span class="Xref">“M-dot Sites”</span> sidebar) with a customized interface and feature set that takes advantage of phone capabilities like <a id="_idIndexMarker277"></a>geolocation. That said, although responsive design won’t fix everything, it is an important part of the solution for delivering satisfactory experiences on a wide variety of browsers. </p>
			<h2 class="HeadB">For Further Reading </h2>
			<p class="body">I’ll cover Responsive Web Design in more detail in <a href="lwd5_chapter17.xhtml#_idTextAnchor224"><span class="Xref">Chapter </span><span class="Xref">17</span><span class="Xref">, Responsive Web Design</span></a>, once you have more code experience under your belt. There you will find plenty of resources to continue your responsive design education.</p>
			<div>
				<div id="_idContainer096" class="sidebar">
					<h5 class="SidebarTitle"><a id="_idTextAnchor036"></a>M-dot Sites </h5>
					<p class="SidebarBody">Some companies and<a id="_idIndexMarker278"></a> services choose to build an entirely separate site, with a unique URL, just for mobile devices. M-dot sites (named because their URLs typically begin with “m.” or “mobile.”) offer a reduced set of options and may also include mobile-specific features such as <a id="_idIndexMarker279"></a>geolocation<span class="Filename">.</span> A lot of the “extra” stuff (like promotions) from the desktop site is simply stripped away. (It makes you wonder what value it adds on the desktop.) A dedicated mobile site may be the best solution if you know that your mobile users have very different usage patterns than folks seated at a desk. </p>
					<p class="SidebarBody"><span class="Xref-Figure">Figure 3-4</span> compares CVS’s primary and m-dot sites as they appeared in early 2018. You can see that phone users are offered a more streamlined set of options. Other notable sites with dedicated mobile versions are Twitter and Facebook.</p>
					<p class="SidebarBody">The point here is that Responsive Web Design is not a universal solution. For sites that feature mainly text content, a little layout adjustment may be all that is needed to deliver a good reading experience on all devices. For complex sites and web applications, a very different experience may be preferred. </p>
					<p class="SidebarBody">The downside of a dedicated mobile site is that it is more than twice the work. It requires additional content planning, design templates, production time, and ongoing maintenance. But if it means giving your visitors the functionality they need, it is worth the investment. </p>
					<p class="SidebarBody">It is possible that you have a business for which mobile use is so distinct from desktop use that a separate mobile site makes sense, but in general, m-dot sites are fading away in favor of RWD. Google is helping to speed this process along by encouraging all m-dot sites to migrate to RWD before the launch of their “mobile-first index” in 2018 (<a href="http://webmasters.googleblog.com/2016/11/mobile-first-indexing.html"><span class="URL-Email--Sidebar-">webmasters.googleblog.com/2016/11/mobile-first-indexing.html</span></a>). If search result rankings are a concern, you may get more mileage from going responsive.</p>
					<div>
						<figure id="_idContainer095" class="figWCaption">
							<p class="Figure_Holder"><img src="image/lwd5_0304_mdot.png" alt="" width="1258" height="778"/></p>
							<figcaption class="FigureCaption"><span class="FigureLabel">Figure 3-4.</span> A comparison of the desktop site and the dedicated mobile site for the same business.</figcaption>
						</figure>
					</div>
				</div>
			</div>
			<h1 id="_idParaDest-23" class="HeadA"><a id="_idTextAnchor037"></a>One Web for All (Accessibility)</h1>
			<p class="body">We’ve been talking <a id="_idIndexMarker280"></a><a id="_idIndexMarker281"></a><a id="_idIndexMarker282"></a>about the daunting number of browsers in use today, but so far, we’ve only addressed visual browsers controlled with mouse pointers or fingertips. It is critical, however, to keep in mind that people access the web in many different ways—with a keyboard, mouse, voice commands, screen readers, Braille output, magnifiers, joysticks, foot pedals, and so on. Web designers must build pages in a manner that creates as few barriers as possible to getting to information, regardless of the user’s ability and the device used to access the web. In other words, you must design for <span class="FirstTerm">accessibility</span>. </p>
			<p class="body">Although intended for users with disabilities such as poor vision or limited mobility, the techniques and strategies developed for accessibility also benefit other users with less-than-optimum browsing experiences. Accessible sites are also more effectively indexed by search engines such as Google. Making your site accessible is well worth the extra effort.</p>
			<p class="body">There are four broad categories of <a id="_idIndexMarker283"></a>disabilities that affect how people interact with their computers and the information on them: </p>
			<p class="ListVariableTerm">Vision impairment</p>
			<p class="ListVariable"><a id="_idIndexMarker284"></a><a id="_idIndexMarker285"></a>People with low or no vision may use an assistive device such as a screen reader, Braille display, or a screen magnifier to get content from the screen. They may also simply use the browser’s text zoom function to make the text large enough to read.</p>
			<p class="ListVariableTerm">Mobility impairment</p>
			<p class="ListVariable"><span class="ListStartItem"><a id="_idIndexMarker286"></a></span>Users with limited or no use of their hands may use special devices such as modified mice and keyboards, foot pedals, voice commands, or joysticks to navigate the web and enter information.</p>
			<p class="ListVariableTerm">Auditory impairment</p>
			<p class="ListVariable"><a id="_idIndexMarker287"></a><a id="_idIndexMarker288"></a>Users with limited or no hearing will miss out on audio aspects of multimedia, so it is necessary to provide alternatives, such as transcripts for audio tracks or captions for video.</p>
			<p class="ListVariableTerm">Cognitive impairment</p>
			<p class="ListVariable"><a id="_idIndexMarker289"></a>Users with memory, reading comprehension, problem solving, and attention limitations benefit when sites are designed simply and clearly. These qualities are helpful to anyone using your site.</p>
			<p class="body">The W3C started <a id="_idIndexMarker290"></a><a id="_idIndexMarker291"></a>the <span class="FirstTerm">Web Accessibility Initiative</span> (<span class="FirstTerm">WAI</span>) to address the need to make the web usable for everyone. The WAI site (<a href="http://www.w3.org/WAI"><span class="URL-Email">www.w3.org/WAI</span></a>) is an excellent starting point for learning more about web accessibility. One of the documents produced by the WAI to help developers create accessible sites is the <a id="_idIndexMarker292"></a><a id="_idIndexMarker293"></a>Web Content Accessibility Guidelines (WCAG and WCAG 2.0). You can read them all at <a href="http://www.w3.org/WAI/intro/wcag.php"><span class="URL-Email">www.w3.org/WAI/intro/wcag.php</span></a>. The US government based its Section 508 accessibility guidelines on the Priority 1 points of the WCAG (see the sidebar <span class="Xref">“Government Accessibility Requirements: Section 508”</span>). All sites benefit from these guidelines, but if you are designing a government site, adherence is a requirement.</p>
			<p class="body">Another W3C effort is <a id="_idIndexMarker294"></a>the <span class="FirstTerm">WAI-ARIA</span> (<span class="FirstTerm">Accessible Rich Internet Applications</span>) spec, which addresses the accessibility of web applications that include dynamically generated content, scripting, and advanced interface elements that are particularly confounding to assistive devices. The ARIA Recommendation defines a number of roles for content and widgets that authors can explicitly apply using the <span class="Literal-fc">role</span> attribute. Roles include <span class="Literal-fc">menubar</span>, <span class="Literal-fc">progressbar</span>, <span class="Literal-fc">slider</span>, <span class="Literal-fc">timer</span>, and <span class="Literal-fc">tooltip</span>, to name just a few. For the complete list of roles, go to <a href="http://www.w3.org/TR/wai-aria/#role_definitions"><span class="URL-Email">www.w3.org/TR/wai-aria/#role_definitions</span></a>. </p>
			<h2 class="HeadB">For Further Reading</h2>
			<p class="body">The following resources are good starting points for further exploration of web accessibility:</p>
			<ul>
				<li class="ListBullet">The Web Accessibility Initiative (WAI), <a href="http://www.w3.org/WAI"><span class="URL-Email">www.w3.org/WAI</span></a></li>
				<li class="ListBullet">WebAIM: <a id="_idIndexMarker295"></a>Web Accessibility in Mind, <a href="http://www.webaim.org"><span class="URL-Email">www.webaim.org</span></a></li>
				<li class="ListBullet"><span class="Citation">Accessibility Handbook: Making 508 Compliant Websites</span> by <a id="_idIndexMarker296"></a>Katie Cunningham (O’Reilly)</li>
				<li class="ListBullet"><span class="Citation">Universal Design for Web Applications: Web Applications That Reach Everyone</span> by <a id="_idIndexMarker297"></a><a id="_idIndexMarker298"></a>Wendy Chisholm and Matt May (O’Reilly)<div id="_idContainer097" class="sidebar"><h5 class="SidebarTitle">US Government Accessibility Requirements: Section 508</h5><p class="SidebarBody-2Col">If you create a <a id="_idIndexMarker299"></a>site receiving federal funding from the US government, you are required by law to comply with the Section 508 guidelines, which ensure that electronic information and technology are available to people with disabilities. State and other publicly funded sites may also be required to comply. </p><p class="SidebarBody-2Col">The following guidelines, excerpted from the Section 508 Standards at <a href="http://www.section508.gov"><span class="URL-Email--Sidebar-">www.section508.gov</span></a>, provide a good checklist for basic accessibility for all websites:</p><ol><li class="SidebarListNumber2Col">A text equivalent for non-text elements shall be provided (e.g., via the “alt” attribute or in element content).</li><li class="SidebarListNumber2Col">Equivalent alternatives for any multimedia presentation shall be synchronized with the presentation.</li><li class="SidebarListNumber2Col">Web pages <a id="_idIndexMarker300"></a>shall be designed so that all information conveyed with color is also available without color—for example, from context or markup.</li><li class="SidebarListNumber2Col">Documents shall be organized so they are readable without requiring an associated style sheet.</li><li class="SidebarListNumber2Col">Row and column headers shall be identified for data tables.</li><li class="SidebarListNumber2Col">Markup <a id="_idIndexMarker301"></a>shall be used to associate data and header cells for tables with two or more levels of row or column headers.</li><li class="SidebarListNumber2Col">Pages shall be designed to avoid causing the screen to flicker with a frequency greater than 2 Hz and lower than 55 Hz.</li><li class="SidebarListNumber2Col">When <a id="_idIndexMarker302"></a>pages utilize scripting languages to display content, or to create interface elements, the information provided by the script shall be identified with functional text that can be read by assistive technology.</li><li class="SidebarListNumber2Col">When a web page requires that an applet, <a id="_idIndexMarker303"></a>plug-in, or other application be present on the client system to interpret page content, the page must provide a link to a plug-in or applet that complies with §1194.21(a) through (l).</li><li class="SidebarListNumber2Col">When electronic forms are designed to be completed online, <a id="_idIndexMarker304"></a>the<a id="_idIndexMarker305"></a> form shall allow people using assistive technology to access the information, field elements, and functionality required for completion and submission of the form, including all directions and cues.</li><li class="SidebarListNumber2Col">A method shall be provided that permits users to skip repetitive navigation links.</li><li class="SidebarListNumber2Col">When a timed response is required, the user shall be alerted and given sufficient time to indicate more time is required.</li></ol></div></li>
			</ul>
			<h1 id="_idParaDest-24" class="HeadA"><a id="_idTextAnchor038"></a>The Need for Speed (Site Performance)</h1>
			<p class="body">Although <a id="_idIndexMarker306"></a><a id="_idIndexMarker307"></a>the number of users accessing the internet on slow dial-up connections is shrinking (3–5% in the US as of this writing), the percentage of folks using mobile phones to access the web is increasing dramatically; and for some sectors, such as social media and search, mobile has already exceeded desktop usage. If you have a smartphone, then you know how frustrating it is to wait for a web page to fully display over a cellular data connection.</p>
			<p class="body">Site performance is critical regardless of how your users access your site. A study by <a id="_idIndexMarker308"></a>Google in 2009<sup class="footnoteRef"><span id="footnote-001-backlink"><a class="_idFootnoteLink _idGenColorInherit" href="lwd5_chapter03.xhtml#footnote-001">1</a></span></sup> showed that the addition of just 100 to 400 milli­seconds to their search results page resulted in reduced searches (–0.2 to –0.6%). <a id="_idIndexMarker309"></a>Amazon.com showed that reducing <a id="_idIndexMarker310"></a>page load times by just 100ms resulted in a 1% increase in revenue.<sup class="footnoteRef"><span id="footnote-000-backlink"><a class="_idFootnoteLink _idGenColorInherit" href="lwd5_chapter03.xhtml#footnote-000">2</a></span></sup> Other studies show that users expect a site to load in under 2 seconds, and nearly a third of your audience will leave your site for another if it doesn’t. Furthermore, those people aren’t likely to come back. Google has added site speed to its search algorithm, so if your site is a slowpoke, it’s not likely to show up in that coveted first screen of results. The takeaway here is that site performance (down to the millisecond!) matters a lot.</p>
			<p class="body">There are many things you can do to improve the performance of your site, and they fall under two broad categories: limiting file sizes and reducing the number of requests to the <a id="_idIndexMarker311"></a>server. The following list only scratches the surface for site optimization, but it gives you a general idea of what can be done:</p>
			<ul>
				<li class="ListBullet">Optimize <a id="_idIndexMarker312"></a>images so they are the smallest file size possible without sacrificing quality. You’ll learn image optimization techniques in <a href="lwd5_chapter24.xhtml#_idTextAnchor302"><span class="Xref">Chapter </span><span class="Xref">24</span><span class="Xref">, Image Asset Production</span></a>. </li>
				<li class="ListBullet">Streamline HTML <a id="_idIndexMarker313"></a>markup, avoiding unnecessary levels of nested elements.</li>
				<li class="ListBullet">Minimize <a id="_idIndexMarker314"></a><a id="_idIndexMarker315"></a>HTML and CSS documents by removing extra character spaces and line returns.</li>
				<li class="ListBullet">Keep <a id="_idIndexMarker316"></a>JavaScript to a minimum.</li>
				<li class="ListBullet">Add <a id="_idIndexMarker317"></a>scripts in such a way that they load in parallel with other page assets and don’t block rendering.</li>
				<li class="ListBullet">Don’t load unnecessary assets (such as images, scripts, or JavaScript libraries).</li>
				<li class="ListBullet">Reduce the number of times the browser makes requests of the server (known <a id="_idIndexMarker318"></a>as <span class="FirstTerm">HTTP requests</span>).</li>
			</ul>
			<p class="body">Every trip to the server in the form of an HTTP request takes a few milli­seconds, and those milliseconds can add up. All those little Twitter widgets, Facebook Like buttons, and advertisements can make dozens of server requests each. You may be surprised to see how many server requests even a simple site makes. </p>
			<p class="body">If you’d like to see for yourself, you can use the <a id="_idIndexMarker319"></a>Network tool available with the Developer tools in Chrome, Safari, or Firefox. The Network tool displays each request to the server and how many milliseconds it took. Here’s how you use it in Chrome (but all the browsers work similarly):</p>
			<ol>
				<li class="ListNumber" value="1">Launch the Chrome browser and go to any web page.</li>
				<li class="ListNumber">Go to the <span class="menu">View</span> menu and select <span class="menu">Developer </span><span class="menu">→</span><span class="menu"> Developer Tools</span>. A panel will open at the bottom of the browser. </li>
				<li class="ListNumber">Select the Network tab in the tools view and load a web page. The chart (commonly referred to as<a id="_idIndexMarker320"></a> a <span class="FirstTerm">waterfall chart</span>) shows you all the requests made and assets downloaded. The columns on the right show the amount of time each request took in milliseconds. At the bottom of the chart, you can see a summary of the number of requests made and the total amount of data transferred. </li>
			</ol>
			<p class="body"><span class="Xref-Figure">Figure 3-5</span> shows a portion of the performance waterfall chart for <a href="http://oreilly.com"><span class="URL-Email">oreilly.com</span></a>. You can poke around any site on the web this way. It can be very educational.</p>
			<p class="body">I won’t address site performance in deep technical detail in this book, but I do want you to remember the importance of keeping file sizes as small as possible and eliminating unnecessary server requests in your web design work.</p>
			<div>
				<figure id="_idContainer099" class="figWCaption">
					<p class="Figure_Holder"><img src="image/lwd5_0305_waterfall.png" alt="" width="1205" height="709"/></p>
					<figcaption class="FigureCaption"><span class="FigureLabel">Figure 3-5.</span> Waterfall charts such as this one created by the Chrome Network developer tool show the individual server requests made by a web page and the amount of time each request takes.</figcaption>
				</figure>
			</div>
			<h2 class="HeadB">For Further Reading</h2>
			<p class="body">There are other techniques that are too technical for this book (and frankly, for me), and I figure if you are reading this book, you are probably not quite ready to become a site performance wizard. But when you are ready to take it on, here are some resources that should help:</p>
			<ul>
				<li class="ListBullet">Lara Hogan <a id="_idIndexMarker321"></a>has assembled a list of performance-related studies, tools, and resources at <a href="http://larahogan.me/design"><span class="URL-Email">larahogan.me/design</span></a>. You can also read her book, <span class="Citation">Designing for Performance</span> (O’Reilly), there for free.  </li>
				<li class="ListBullet"><span class="Citation">High Performance Mobile Web: Best Practices for Optimizing Mobile Web Apps</span> by <a id="_idIndexMarker322"></a>Maximiliano Firtman (O’Reilly) covers optimization methods and tools to check your progress. </li>
				<li class="ListBullet">Google’s site <span class="Citation">Make the </span><span class="Citation"><a id="_idIndexMarker323"></a></span><span class="Citation">Web Faster</span> (<a href="http://code.google.com/speed/"><span class="URL-Email">code.google.com/speed/</span></a>) is an excellent first stop for learning about site optimization. It compiles a number of excellent tutorials and articles as well as tools for measuring site speed.<div id="_idContainer100" class="sidebar"><h5 class="SidebarTitle">More Site Performance Tools</h5><p class="SidebarBody">Try some of these tools for testing site performance: </p><ul><li class="SidebarListBullet">WebPageTest (<a href="http://webpagetest.org"><span class="URL-Email--Sidebar-">webpagetest.org</span></a>) is a<a id="_idIndexMarker324"></a> tool that was originally developed for AOL, but is now available for all to use for free under an open source license. Just type in a URL, and WebPagetest returns a waterfall diagram, screenshot, and other statistics.</li><li class="SidebarListBullet">Google’s <a id="_idIndexMarker325"></a><a id="_idIndexMarker326"></a>PageSpeed Insights (<a href="http://developers.google.com/speed/pagespeed/insights/"><span class="URL-Email--Sidebar-">developers.google.com/speed/pagespeed/insights/</span></a>) is another service that analyzes the performance of any site you point it to. It also generates suggestions for making your page load faster.  </li><li class="SidebarListBullet">Yahoo!’s freely <a id="_idIndexMarker327"></a><a id="_idIndexMarker328"></a>available YSlow tool (<a href="http://yslow.org"><span class="URL-Email--Sidebar-">yslow.org</span></a>) analyzes a site according to 23 rules of web performance, and then gives the site a grade and suggestions for improvement.</li></ul></div></li>
			</ul>
			<h1 id="_idParaDest-25" class="HeadA"><a id="_idTextAnchor039"></a>Test Yourself</h1>
			<p class="body">Here are a few questions that check your knowledge of the Big Concepts. If you are stumped, you can find the answers in <a href="lwd5_appendixA.xhtml#_idTextAnchor325"><span class="Xref">Appendix </span><span class="Xref">A</span></a>.</p>
			<ol>
				<li class="ListNumber" value="1">List at least two unknown factors you need to consider when designing and developing a site.</li>
				<li class="ListNumber">Match the technology or practice on the left with the problem it best addresses: <table id="table001-2" class="table_invisible _idGenTablePara-1"><colgroup><col/><col/></colgroup><tbody><tr class="table_invisible"><td class="table_invisible invisible"><p class="TableBody">1. ____ Progressive enhancement</p></td><td class="table_invisible invisible"><p class="TableBody">a. Assistive reading and input devices</p></td></tr><tr class="table_invisible"><td class="table_invisible invisible"><p class="TableBody">2. ____ Server-side detection</p></td><td class="table_invisible invisible"><p class="TableBody">b. Slow connection speeds</p></td></tr><tr class="table_invisible"><td class="table_invisible invisible"><p class="TableBody">3. ____ Responsive design</p></td><td class="table_invisible invisible"><p class="TableBody">c. All levels of browser capabilities</p></td></tr><tr class="table_invisible"><td class="table_invisible invisible"><p class="TableBody">4. ____ WAI-ARIA</p></td><td class="table_invisible invisible"><p class="TableBody">d. Determining which device is being used</p></td></tr><tr class="table_invisible"><td class="table_invisible invisible"><p class="TableBody">5. ____ Site performance optimization</p></td><td class="table_invisible invisible"><p class="TableBody">e. A variety of screen sizes</p></td></tr></tbody></table></li>
				<li class="ListNumber">Web accessibility strategies take into account four broad categories of disabilities. Name at least three, and provide a measure you might take to ensure content is accessible for each.</li>
				<li class="ListNumber">When would you use a waterfall chart?</li>
			</ol>
			<hr class="HorizontalRule-1"/>
			<div class="_idFootnotes">
				<div id="footnote-001" class="_idFootnote" epub:type="footnote">
					<p class="Footnote"><a class="_idFootnoteAnchor _idGenColorInherit" href="lwd5_chapter03.xhtml#footnote-001-backlink">1</a>	“Speed Matters,” <a href="http://googleresearch.blogspot.com/2009/06/speed-matters.html"><span class="URL-Email--Sidebar-">googleresearch.blogspot.com/2009/06/speed-matters.html</span></a>.</p>
				</div>
				<div id="footnote-000" class="_idFootnote" epub:type="footnote">
					<p class="Footnote"><a class="_idFootnoteAnchor _idGenColorInherit" href="lwd5_chapter03.xhtml#footnote-000-backlink">2</a>	Statistic from “Make Data Matter,” PowerPoint presentation by Greg Linden of Stanford University (2006).</p>
				</div>
			</div>
		</div>
	</div>
</div>
</body>
</html>